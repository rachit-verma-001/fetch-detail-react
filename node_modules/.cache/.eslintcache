[{"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/index.js":"1","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/App.js":"2","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/store/auth-context.js":"3","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/pages/HomePage.js":"4","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/pages/AuthPage.js":"5","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Layout/Layout.js":"6","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Profile/UserProfile.js":"7","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/ScrappedData/Details.js":"8","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/ScrappedData/EmployeeData.js":"9","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/StartingPage/StartingPageContent.js":"10","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Profile/ProfileForm.js":"11","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Layout/MainNavigation.js":"12","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Auth/AuthForm.js":"13","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/store/HostUrl.js":"14","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/ScrappedData/AddData.js":"15","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/UI/Card.js":"16","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/ScrappedData/DropDownFilter.js":"17","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/ScrappedData/ExportCsv.js":"18"},{"size":352,"mtime":1632221863031,"results":"19","hashOfConfig":"20"},{"size":1192,"mtime":1636724877427,"results":"21","hashOfConfig":"20"},{"size":2616,"mtime":1638854635961,"results":"22","hashOfConfig":"20"},{"size":171,"mtime":1632221863035,"results":"23","hashOfConfig":"20"},{"size":130,"mtime":1632221863035,"results":"24","hashOfConfig":"20"},{"size":246,"mtime":1632221863031,"results":"25","hashOfConfig":"20"},{"size":245,"mtime":1634736243102,"results":"26","hashOfConfig":"20"},{"size":185,"mtime":1636708531458,"results":"27","hashOfConfig":"20"},{"size":12755,"mtime":1639645800823,"results":"28","hashOfConfig":"20"},{"size":231,"mtime":1632484514506,"results":"29","hashOfConfig":"20"},{"size":3074,"mtime":1637304703827,"results":"30","hashOfConfig":"20"},{"size":2163,"mtime":1638505344749,"results":"31","hashOfConfig":"20"},{"size":4753,"mtime":1638785102593,"results":"32","hashOfConfig":"20"},{"size":246,"mtime":1640091380077,"results":"33","hashOfConfig":"20"},{"size":20513,"mtime":1639636557651,"results":"34","hashOfConfig":"20"},{"size":152,"mtime":1632549456718,"results":"35","hashOfConfig":"20"},{"size":16272,"mtime":1640083963902,"results":"36","hashOfConfig":"20"},{"size":1004,"mtime":1638803302579,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"lncne1",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/index.js",[],["81","82"],"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/App.js",[],"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/store/auth-context.js",["83"],"import React, { useState, useEffect, useCallback } from 'react';\n\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: (token) => {},\n  logout: () => {},\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n\n  const remainingDuration = adjExpirationTime - currentTime;\n  // const remainingDuration = 2880000000;\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n\n  const storedToken = localStorage.getItem('token');\n\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 5600)\n  {\n    localStorage.removeItem('email');\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingTime,\n  };\n};\n\nexport const AuthContextProvider = (props) => {\n  const tokenData = retrieveStoredToken();\n\n  let initialToken;\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n\n  const [token, setToken] = useState(initialToken);\n\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('email');\n    localStorage.removeItem('expirationTime');\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const loginHandler = (token, email, expirationTime) => {\n    setToken(token);\n\n    localStorage.setItem('token', token);\n    localStorage.setItem('email', email);\n\n    const expirationTime2 = new Date(\n      new Date().getTime() + 28800000\n      );\n\n      localStorage.setItem('expirationTime', expirationTime2);\n\n    const remainingTime = calculateRemainingTime(expirationTime2);\n\n\n    // localStorage.setItem('expirationTime', expirationTime);\n\n    // const remainingTime = calculateRemainingTime(expirationTime);\n\n    // logoutTimer = setTimeout(logoutHandler, remainingTime);\n    // logoutTimer = setTimeout(logoutHandler, remainingTime);\n\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      console.log(tokenData.duration);\n      // logoutTimer = setTimeout(logoutHandler);\n    }\n  }, [tokenData, logoutHandler]);\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/pages/HomePage.js",[],"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/pages/AuthPage.js",[],"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Layout/Layout.js",[],"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Profile/UserProfile.js",[],"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/ScrappedData/Details.js",[],"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/ScrappedData/EmployeeData.js",["84","85","86","87"],"import * as React from 'react';\nimport {useParams} from 'react-router-dom';\nimport { useEffect} from 'react';\nimport Grid from '@mui/material/Grid';\nimport Card from '../UI/Card';\nimport { styled} from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useState} from 'react';\nimport ButtonBase from '@mui/material/ButtonBase';\nimport DropDownFilter from \"./DropDownFilter\";\nimport { ngrokUrl } from '../../store/HostUrl';\nimport Pagination from '@material-ui/lab/Pagination';\n\n\nconst Img = styled('img')({\n  margin: 'auto',\n  display: 'block',\n  maxWidth: '100%',\n  maxHeight: '100%',\n  height:'237px'\n});\n\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  color: theme.palette.text.secondary,\n}));\n\nconst EmployeeData = (props) => {\n\n  const { id } = useParams();\n  console.log(id)\n  let heading_title;\n  let employee_details;\n  let founders_details;\n\n  const [designation2, setDesignation2] = useState([''])\n  const [state, setState] = useState('')\n  const [country, setCountry] = useState('')\n  const [city, setCity] = useState('')\n\n  const [isFetched, setIsFetched] = useState(false);\n  const [userData, setUserData] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [ userDataBackup,setUserDataBackup] = useState({})\n  const [totalPages, setTotalPages] = useState();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isFiltered, setIsFiltered] = useState(false);\n\n  useEffect(() => {\n      const axios = require('axios').default;\n\n      localStorage.removeItem('fcity')\n      localStorage.removeItem('fstate')\n      localStorage.removeItem('fcountry')\n      localStorage.removeItem('fdesignation')\n      try {\n        axios.get(`${ngrokUrl}/api/v1/companies/${id}`, {\n          headers:{\n            'X-USER-TOKEN': localStorage.getItem('token'),\n            \"X-USER-EMAIL\":localStorage.getItem('email')\n          },\n        })\n        .then(function (response) {\n          if (response.data.success === false)\n          {\n            // alert(response.data.message)\n            toast.error(response.data.message,  {\n              position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            });\n            // setIsFiltered(false)\n          }\n          else{\n            setUserData(response.data);\n            setUserDataBackup(response.data);\n            setIsFetched(true);\n            setTotalPages(response.data.pagination.total_pages);\n            // setIsFiltered(false);\n            setShowDetails(true);\n            setCurrentPage(response.data.pagination.current_page);\n          }\n            // setError(false);\n        })\n        .catch(function (error) {\n          console.log(error);\n          toast.error(error,  {\n            position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          });\n        })\n      } catch (error) {\n        console.error(error);\n        toast.error(error,  {\n          position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        });\n      }\n  }, [id]);\n\n  if (isFetched)\n  {\n    console.log(userData)\n    heading_title = (\n    <div>\n      <h2>{userData.company.name}</h2>\n      <p> {userData.company.tagline}</p>\n      <p>Followers:{userData.company.followers}</p>\n      <p>No of employees:{userData.company.no_of_employees}</p>\n       {/* <h2>Protonshub</h2>\n      <p> Tagline:</p>\n      <p>Followers:</p>\n      <p>No of employees:</p> */}\n\n    </div>\n    );\n    // company_name = userData.company_detail.name;\n\n    console.log(userData,\"deta\")\n\n    employee_details = userData.employee_details.map((user) => (\n      <Data user = {user}/>\n    ));\n\n    founders_details = userData.founders_details.map((user) => (\n      <Data user = {user}/>\n      ));\n\n  }\n\n  function Data(props){\n    return (<div>\n      <Card>\n        <Grid container spacing={0} >\n          <Grid item md={8}>\n            <Item><p><u><b>Name:</b></u>  {props.user.first_name + \" \" + props.user.last_name}</p></Item>\n            <Item><p><u><b>Designation:</b></u>  {props.user.designation}</p></Item>\n            <Item><p><u><b>City:</b></u>  {props.user.city}</p></Item>\n            <Item><p><u><b>Email:</b></u>  {props.user.email}</p></Item>\n            <Item><p><u><b>Phone:</b></u>  {props.user.mobile_no}</p></Item>\n            {/* <Item><p><u><b>Description:</b></u>  {props.user.description}</p></Item> */}\n          </Grid>\n          <Grid item>\n            <ButtonBase sx={{ width: 226 }}>\n              <Img alt=\"logo\" src={props.user.image} />\n            </ButtonBase>\n            </Grid>\n        </Grid>\n      </Card>\n    </div>)\n  }\n\n  console.log(userData)\n\n  let filteredData =(founderDetails,employeeDetails, pagination_details, fcity,fstate,fcountry,fdesignation2)=>{\n\n  let data = {}\n\n  data.founders_details = founderDetails\n  data.employee_details = employeeDetails\n  console.log(data.founders_details)\n\n  setUserData({company:userData.company,founders_details:founderDetails,employee_details:employeeDetails })\n  console.log(data.founders_details)\n  setTotalPages(pagination_details.total_pages);\n  setCity(fcity);\n  setState(fstate);\n  setCountry(fcountry);\n  setDesignation2(fdesignation2);\n  setIsFiltered(true);\n  console.log(founderDetails,employeeDetails)\n  // setUserData(userData.founders_details)\n  // userData.employee_details\n\n}\n\nuseEffect(()=>{\n  console.log(userData)\n},[userData])\n\n  const handleUserPagination = (event,value) => {\n    setCurrentPage(value);\n    console.log(\"After Value Changes\")\n    console.log(currentPage);\n    const axios = require('axios').default;\n\n    try {\n\n\n    //   axios.get(`${ngrokUrl}/api/v1/search`, {\n    //     headers:\n    // {\n    //         'X-USER-TOKEN': localStorage.getItem('token'),\n    //         \"X-USER-EMAIL\":localStorage.getItem('email')\n    //       },\n    //       params:{\n    //           id: id,\n    //           city:localStorage.getItem('fcity'),\n    //           state:localStorage.getItem('fstate'),\n    //           country:localStorage.getItem('fcountry'),\n    //           employee_types:localStorage.getItem('fdesignation').map(desig=>desig.value),\n    //           page:value\n    //       }\n    //   })\n\n\n        if (isFiltered)\n        {\n          const fcity = localStorage.getItem('fcity')\n          const fstate = localStorage.getItem('fstate')\n          const fcountry = localStorage.getItem('fcountry')\n          const employee_type = localStorage.getItem('fdesignation')\n\n          axios.get(`${ngrokUrl}/api/v1/search`, {\n            headers:\n              {\n                'X-USER-TOKEN': localStorage.getItem('token'),\n                \"X-USER-EMAIL\":localStorage.getItem('email')\n              },\n              params:{\n                id: id,\n                city:fcity,\n                state:fstate,\n                country:fcountry,\n                employee_types:employee_type,\n                page:value\n              }\n          })\n          .then(function (response) {\n            if (response.data.success === false)\n            {\n              // alert(response.data.message)\n              localStorage.removeItem('fcity')\n              localStorage.removeItem('fstate')\n              localStorage.removeItem('fcountry')\n              localStorage.removeItem('fdesignation')\n\n              toast.error(response.data.message,  {\n                position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n              });\n              // setIsFiltered(false)\n            }\n            else{\n\n              localStorage.removeItem('fcity')\n              localStorage.removeItem('fstate')\n              localStorage.removeItem('fcountry')\n              localStorage.removeItem('fdesignation')\n              setUserData(response.data);\n\n              setUserDataBackup(response.data);\n              setIsFetched(true);\n              setTotalPages(response.data.pagination.total_pages);\n              // setIsFiltered(false);\n              setShowDetails(true);\n              // setCurrentPage(response.data.pagination.current_page);\n            }\n              // setError(false);\n          })\n          .catch(function (error) {\n            console.log(error);\n            toast.error(error,  {\n              position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            });\n          })\n\n        }\n\n        else{\n          localStorage.removeItem('fcity')\n          localStorage.removeItem('fstate')\n          localStorage.removeItem('fcountry')\n          localStorage.removeItem('fdesignation')\n          axios.get(`${ngrokUrl}/api/v1/companies/${id}`, {\n            headers:{\n              'X-USER-TOKEN': localStorage.getItem('token'),\n              \"X-USER-EMAIL\":localStorage.getItem('email')\n            },\n            params:{\n              page: value\n            }\n          })\n          .then(function (response) {\n            if (response.data.success === false)\n            {\n              // alert(response.data.message)\n              toast.error(response.data.message,  {\n                position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n              });\n              // setIsFiltered(false)\n            }\n            else{\n              setUserData(response.data);\n\n              setUserDataBackup(response.data);\n              setIsFetched(true);\n              setTotalPages(response.data.pagination.total_pages);\n              // setIsFiltered(false);\n              setShowDetails(true);\n              // setCurrentPage(response.data.pagination.current_page);\n            }\n              // setError(false);\n          })\n          .catch(function (error) {\n            console.log(error);\n            toast.error(error,  {\n              position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            });\n          })\n        }\n\n    } catch (error) {\n      console.error(error);\n      toast.error(error,  {\n        position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      });\n    }\n\n\n  // this.setState({ setUserPage: value }, () => {\n  //   this.getUsersByBrand(this.state.selectedBrandId);\n  // });\n\n\n};\n\n  return (\n\n    <section >\n      <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justifyContent=\"center\">\n      </Grid>\n\n      {showDetails &&\n      <div>\n         <Card>\n            <ul><li>{heading_title}</li></ul>\n          </Card>\n      <Card>\n        <DropDownFilter   userData = {userDataBackup}  filteredData={filteredData} />\n      </Card>\n\n     {founders_details.length>0 ? <Card>\n      {/* <Pagination count={10} /> */}\n        <Grid container spacing={2}>\n\n    </Grid>\n\n      <ul><li><h2>Founders Details:</h2><br></br>{founders_details}</li></ul>\n      </Card>:null}\n\n     {employee_details.length>0 ? <Card>\n      {/* <Pagination count={10} /> */}\n      <ul><li><h2>Employee Details:</h2><br></br>{employee_details}</li></ul>\n      </Card>:null}\n      </div>}\n\n      <Pagination style={{marginTop:\"18px\", marginBottom:\"25px\"}}\n          count={totalPages}\n          variant=\"outlined\"\n          color=\"primary\"\n          page={currentPage}\n          onChange={handleUserPagination}\n        />\n\n      {/* {error &&\n        <span style={{ color: 'red' }}>{message}</span>} */}\n          <ToastContainer position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover/>\n\n    </section>\n  );\n}\n\nexport default EmployeeData\n","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/StartingPage/StartingPageContent.js",[],"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Profile/ProfileForm.js",["88","89","90","91","92","93","94","95"],"// import { useRef, useContext } from 'react';\nimport { useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\n\n// import AuthContext from '../../store/auth-context';\nimport classes from './ProfileForm.module.css';\nimport { ngrokUrl } from '../../store/HostUrl';\nimport PasswordField from 'material-ui-password-field'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { TextField, InputAdornment, IconButton } from \"@material-ui/core\";\nimport Visibility from \"@material-ui/icons/Visibility\";\n\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nconst eye = <FontAwesomeIcon icon={faEye} />;\n\n\n\nconst ProfileForm = () => {\n  const history = useHistory();\n\n  const newPasswordInputRef = useRef();\n  // const authCtx = useContext(AuthContext);\n  const submitHandler = (event) => {\n\n    event.preventDefault();\n    const enteredNewPassword = newPasswordInputRef.current.value;\n    const password = { update_password: enteredNewPassword };\n    const headers = {\n      'X-USER-TOKEN': localStorage.getItem('token'),\n      \"X-USER-EMAIL\":localStorage.getItem('email')\n    };\n    const axios = require('axios').default;\n    axios.put(`${ngrokUrl}/api/v1/change_password`, password, { headers })\n    .then((responseData) => { console.log(responseData);\n        toast.success(\"Password updated successfully\",  {\n          position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n          onClose: () => history.replace('/')\n        });\n    })\n    .catch((error) => { console.log(error); alert('Something Went Wrong') })\n  };\n\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClick = () => {\n    setShowPassword(!showPassword);\n  }\n\n\n  const [passwordShown, setPasswordShown] = useState(false);\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n\n  return (<>\n    <form className={classes.form} onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='new-password'>New Password</label>\n        <input type={passwordShown ? \"text\" : \"password\"} id='new-password' minLength=\"7\" required ref={newPasswordInputRef}\n        />\n        <i onClick={togglePasswordVisiblity}>{eye}</i>\n      </div>\n\n      {/* <PasswordField id='new-password' minLength=\"7\" required ref={newPasswordInputRef}  /> */}\n\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n      <ToastContainer position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover/>\n    </form>\n    </>\n  );\n};\n\nexport default ProfileForm;\n","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Layout/MainNavigation.js",[],"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Auth/AuthForm.js",["96"],"import { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\nimport {ngrokUrl } from '../../store/HostUrl';\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext);\n\n  const [isLogin, setIsLogin] = useState(true);\n  // const [isLoading, setIsLoading] = useState(false);\n\n\n  const [error, setError] = useState(false);\n  const[message, setMessage] = useState();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // if (enteredPassword.length < 5) {\n    //   alert('Password must contain atleast 5 characters');\n    //   return;\n    // }\n\n    // setIsLoading(true);\n    let url;\n\n    if (isLogin) {\n      // url ='https://react-fetch-detail.herokuapp.com/users/sign_in';\n        // url=`${ngrokUrl}/api/v1/auth/sign_in\"\n        url = `${ngrokUrl}/api/v1/users/sign_in`\n      } else {\n        // url ='https://react-fetch-detail.herokuapp.com/users';\n        // url=`${ngrokUrl}/api/v1/auth\"\n      url = `${ngrokUrl}/api/v1/users`\n    }\n\n    // if (url === \"https://react-fetch-detail.herokuapp.com/users\")\n    if (url === `${ngrokUrl}/api/v1/users`)\n    // if (url === \"http://460b-157-47-214-197.ngrok.io/api/v1/auth\")\n\n    {\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n          user:\n          {\n            email: enteredEmail,\n            password: enteredPassword,\n            password_confirmation: enteredPassword\n          }\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n      .then((res) => {\n        // setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = data.message;\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .catch((err) => {\n        alert(err.message);\n        setIsLogin(true);\n        history.replace('/auth');\n      });\n    }\n\n    else {\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        user:\n        {\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => {\n        // setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = data.message;\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n\n        const expirationTime = new Date(\n          new Date().getTime() + 28800000\n        );\n\n        // authCtx.login(data.user.auth_token, data.user.email, expirationTime.toISOString());\n        authCtx.login(data.user.auth_token, data.user.email);\n\n        history.replace('/');\n      })\n      .catch((err) => {\n        setError(true);\n        setMessage(err.message);\n        // alert(err.message);\n      });\n    }\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email' style={{float:'left'}}>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef}  />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password' style={{float:'left'}}>Your Password</label>\n          <input\n            type='password'\n            id='password'\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          { (\n            // <button>{isLogin ? 'Login' : 'Create Account'}</button>\n            <button>{isLogin ? 'Login' : 'Create Account'}</button>\n          )}\n          {/* {isLoading && <p>Sending request...</p>} */}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {/* {isLogin ? 'Create new account' : 'Login with existing account'} */}\n          </button>\n          {/* <Button variant=\"contained\">Hello World</Button> */}\n        </div>\n      </form>\n          {error &&\n            <span style={{ color: 'red' }}>{message}</span>}\n    </section>\n  );\n};\n\nexport default AuthForm;\n","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/store/HostUrl.js",[],"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/ScrappedData/AddData.js",["97","98","99"],"import { useTable, useFilters, useGlobalFilter, useAsyncDebounce, usePagination } from 'react-table'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// import { useEffect, useCallback } from 'react';\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@mui/material/Grid';\nimport Box from '@material-ui/core/Box';\nimport Input from '@mui/material/Input';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useHistory } from \"react-router-dom\";\nimport DatePicker from '@mui/lab/DatePicker';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport TextField from '@mui/material/TextField';\nimport { ngrokUrl } from '../../store/HostUrl';\nimport Select from 'react-select'\n\nconst ariaLabel = { 'aria-label': 'description' };\n\n// Define a default UI for filtering\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n}) {\n    const count = preGlobalFilteredRows.length\n    const [value, setValue] = React.useState(globalFilter)\n    const onChange = useAsyncDebounce(value => {\n        setGlobalFilter(value || undefined)\n    }, 200)\n\n    return (\n        <span style={{marginLeft:\"13px\"}}>\n            Search:{' '}\n            <input\n            style={{width:\"17%\", marginLeft:\"12px\"}}\n                className=\"form-control\"\n                value={value || \"\"}\n                onChange={e => {\n                    setValue(e.target.value);\n                    onChange(e.target.value);\n                }}\n                placeholder={`${count} records...`}\n            />\n        </span>\n    )\n}\n\nfunction DefaultColumnFilter({\n    column: { filterValue, preFilteredRows, setFilter },\n}) {\n    const count = preFilteredRows.length\n\n    return (\n        <input\n            className=\"form-control\"\n            value={filterValue || ''}\n            onChange={e => {\n                setFilter(e.target.value || undefined)\n            }}\n            placeholder={`Search ${count} records...`}\n        />\n    )\n}\n\nfunction Table({ columns, data }) {\n    const defaultColumn = React.useMemo(\n        () => ({\n            // Default Filter UI\n            Filter: DefaultColumnFilter,\n        }),\n        []\n    )\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        // rows,\n        page,\n        prepareRow,\n        // state,\n        preGlobalFilteredRows,\n        setGlobalFilter,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state,\n        state: { pageIndex, pageSize },\n\n    } = useTable(\n        {\n            columns,\n            data,\n            defaultColumn,\n        },\n        useFilters,\n        useGlobalFilter,\n        usePagination\n    )\n\n    return (\n        <div style={{marginTop:\"67px\"}}>\n            <GlobalFilter\n                preGlobalFilteredRows={preGlobalFilteredRows}\n                globalFilter={state.globalFilter}\n                setGlobalFilter={setGlobalFilter}\n            />\n            <table style={{marginTop:\"19px\"}} className=\"table\" {...getTableProps()}>\n                <thead>\n                    {headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map(column => (\n                                <th {...column.getHeaderProps()}>\n                                    {column.render('Header')}\n                                    {/* Render the columns filter UI */}\n                                    <div>{column.canFilter ? column.render('Filter') : null}</div>\n                                </th>\n                            ))}\n                        </tr>\n                    ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {page.map((row, i) => {\n                        prepareRow(row)\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {row.cells.map(cell => {\n                                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                })}\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n            <br />\n            <div className=\"pagination\">\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {'<<'}\n        </button>{' '}\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n          {'<'}\n        </button>{' '}\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n          {'>'}\n        </button>{' '}\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n          {'>>'}\n        </button>{' '}\n        <span>\n          Page{' '}\n          <strong>\n            {pageIndex + 1} of {pageOptions.length}\n          </strong>{' '}\n        </span>\n        <span>\n          | Go to page:{' '}\n          <input\n            type=\"number\"\n            defaultValue={pageIndex + 1}\n            onChange={e => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\n              gotoPage(page)\n            }}\n            style={{ width: '100px' }}\n          />\n        </span>{' '}\n        <select\n          value={pageSize}\n          onChange={e => {\n            setPageSize(Number(e.target.value))\n          }}\n        >\n          {[5, 10, 20, 30, 40, 50].map(pageSize => (\n            <option key={pageSize} value={pageSize}>\n              Show {pageSize}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n\n    )\n}\n\nfunction FilterTableComponent() {\n  const [resyncing, setResyncing] = useState(false);\n    const columns = React.useMemo(\n        () => [\n                    {\n                        Header: 'Name',\n                        accessor: 'name',\n                    },\n                    {\n                        Header: 'Type',\n                        accessor: 'company_type'\n                    },\n                   {\n                        Header: 'Url',\n                        accessor: 'url'\n                    },\n                    {\n                        Header: 'Foundation Year',\n                        accessor: 'foundation_year'\n                    },\n                    {\n                        Header: 'Posts',\n                        accessor: 'posts'\n                    },\n\n                    {\n                        filterable: false,\n                        Header: 'Details',\n                        accessor: 'link',\n                        disableFilters:true,\n                        Cell: ({ row }) =>\n                        <Button variant='outlined'\n                        style={{width:\"146px\"}}\n                        type='submit' sx = {{mt:20}}\n                        name= {row.original.id} onClick={ () => fetchCompanyDetail(row.original.id)}\n                      > Fetch Details</Button>\n                    },\n\n                    {\n                      filterable: false,\n                      disableFilters:true,\n                      Header: 'Sync',\n                      accessor: 'link2',\n                      Cell: ({ row }) =>\n                      <Button variant='outlined'\n                        type='submit' sx = {{mt:20}}\n                        disabled = {resyncing? true:false}\n                        name= {row.original.id}\n                        onClick={ () => resyncCompanyDetail(row.original.id)\n                      }\n                      >\n                        {/* {resyncing ? \"Resyncing\" : \"Resync\"} */}\n                        Resync\n                        </Button>\n                  },\n                  {\n                    filterable: false,\n                    disableFilters:true,\n                    Header: 'Delete',\n                    accessor: 'link3',\n                    Cell: ({ row }) =>\n                    <Button variant='outlined'\n                    type='submit' sx = {{mt:20}}\n                    name= {row.original.id} onClick={ () => destroyCompanyDetail(row.original.id)}\n                  > Destroy</Button>\n                },\n\n                {\n                  filterable: false,\n                  Header: 'Progress',\n                  accessor: 'resync_progress',\n                  disableFilters:true,\n\n                  Cell: s => (\n                    <span style={{color:\"red\"}}  className={\"RedColor\"}>\n                      {s.value}\n                    </span>\n                  ),\n\n              },\n\n\n\n        ],\n        []\n    )\n\n    // const [isFetched, setIsFetched] = useState(false);\n    const [url, setUrl] = useState('');\n    const [userData, setUserData] = useState([]);\n    const [name, setName] = useState('');\n    const [type, setType] = useState('');\n    const [count, setCount] = useState(0);\n    const [posts, setPosts] = useState([]);\n\n    const [value, setValue] = useState(new Date());\n\n    const destroyCompanyDetail = (id) => {\n      const axios = require('axios').default;\n\n      axios.delete(`${ngrokUrl}/api/v1/companies/${id}`, {\n        headers:{\n          'X-USER-TOKEN': localStorage.getItem('token'),\n          \"X-USER-EMAIL\":localStorage.getItem('email')\n        },\n      }).then(function(response){\n        if (response.data.success === true){\n          setCount(count+1);\n          toast.success(\"Delete Sucess\",{\n            position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          })\n          // const axios = require('axios').default;\n          axios.get(`${ngrokUrl}/api/v1/companies`, {\n            headers:{\n              'X-USER-TOKEN': localStorage.getItem('token'),\n              \"X-USER-EMAIL\":localStorage.getItem('email')\n            }\n          }).then(function(response){\n          if (response.data.success === true){\n            setUserData(response.data.companies);\n          }\n          else{\n          toast.error(response.data.message,  {\n            position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          });\n            }\n          })\n        }\n        else{\n      toast.error(response.data.message,  {\n        position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      });\n        }\n      })\n    }\n\n    useEffect(() => {\n      const axios = require('axios').default;\n      axios.get(`${ngrokUrl}/api/v1/companies`, {\n        headers:{\n          'X-USER-TOKEN': localStorage.getItem('token'),\n          \"X-USER-EMAIL\":localStorage.getItem('email')\n        }\n      }).then(function(response){\n        if (response.data.success === true){\n          setUserData(response.data.companies);\n        }\n        else{\n      toast.error(response.data.message,  {\n        position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      });\n        }\n      })\n  },[count]);\n\n  const [error, setError] = useState(false);\n\n    const switchDetailModeHandler = (event) => {\n      // let sent_url;\n      event.preventDefault();\n      if (value.getFullYear().toString().length < 4)\n      {\n        setError(true)\n      }\n      else\n      {\n        const axios = require('axios').default;\n        setError(false)\n          const headers = {\n            'X-USER-TOKEN': localStorage.getItem('token'),\n            \"X-USER-EMAIL\":localStorage.getItem('email')\n          }\n\n          const data = {\n            name:name,\n            company_type:type,\n            url:url,\n            foundation_year:value,\n            // posts:posts.map(post=>post.value)\n            posts:posts\n          }\n\n          axios.post(`${ngrokUrl}/api/v1/companies`,data, {\n              headers: headers\n            }).then(response => {\n            // setIsLoading(false);\n            console.log(\"String\");\n            console.log(response);\n            if (response.data.success === false)\n            {\n              toast.error(response.data.message,  {\n                position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n              });\n            //   setFilterCall(false);\n            //   // alert(response.data.message)\n            }\n            else{\n              axios.get(`${ngrokUrl}/api/v1/companies`, {\n                headers: headers\n              }\n              )\n              .then(function(response){\n                if (response.data.success === true){\n                  setUserData(response.data.companies);\n                }\n              })\n\n            // userData.push(response.data.company)\n            // setIsFetched(true);\n            // setFilterCall(false);\n            // setIsFiltered(false);\n            // setShowDetails(true);\n          }\n            // setError(false);\n          }).catch(function (error) {\n            console.log(error);\n            toast.error(\"Something Went Wrong\",  {\n              position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            })\n          })\n\n        }\n    };\n\n    const history = useHistory();\n    const fetchCompanyDetail =(id) =>{\n      console.log(id)\n\n\n      // const axios = require('axios').default;\n      // axios.get(`https://www.linkedin.com/in/rachit-verma-31912813b/`, {\n      // }).then(function(response){\n      //   console.log(response)\n      // })\n\n\n      history.push(`/details/${id}`)\n    }\n\n    const handlePostChange = (event)=>{\n\n      setPosts(event.target.value.split(\",\"))\n    }\n    const resyncCompanyDetail = (id) => {\n\n      // setResyncing(true);\n\n      // toast.success(\"Resync in progress\",  {\n      //   position: \"top-right\",\n      //   autoClose: 40000,\n      //   hideProgressBar: false,\n      //   closeOnClick: true,\n      //   pauseOnHover: true,\n      //   draggable: true,\n      //   progress: undefined,\n      // })\n      const axios = require('axios').default;\n      axios.get(`${ngrokUrl}/api/v1/companies/${id}/resyncing?resync_progress=syncing in progress`, {\n        headers:{\n          'X-USER-TOKEN': localStorage.getItem('token'),\n          \"X-USER-EMAIL\":localStorage.getItem('email')\n        },\n      }).then(function(response){\n        setUserData(response.data.companies)\n      })\n\n      console.log(`before 1st Resync = ${resyncing}`)\n\n\n\n      axios.get(`${ngrokUrl}/api/v1/resync?company_id=${id}`, {\n        headers:{\n          'X-USER-TOKEN': localStorage.getItem('token'),\n          \"X-USER-EMAIL\":localStorage.getItem('email')\n        },\n      }).then(function(response){\n\n        if (response.data.success === true){\n\n          axios.get(`${ngrokUrl}/api/v1/companies/${id}/resyncing?resync_progress=Synced`, {\n            headers:{\n              'X-USER-TOKEN': localStorage.getItem('token'),\n              \"X-USER-EMAIL\":localStorage.getItem('email')\n            },\n          }).then(function(response){\n            setUserData(response.data.companies)\n          })\n\n          console.log(`after 1st Resync = ${resyncing}`)\n          setResyncing(false);\n\n          console.log(`After Resync Success = ${resyncing}`)\n          toast.success(\"Resync Sucess\",{\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          })\n        }\n        else{\n          setResyncing(false);\n          axios.get(`${ngrokUrl}/api/v1/companies/${id}/resyncing?resync_progress=Synced`, {\n            headers:{\n              'X-USER-TOKEN': localStorage.getItem('token'),\n              \"X-USER-EMAIL\":localStorage.getItem('email')\n            },\n          }).then(function(response){\n            setUserData(response.data.companies)\n          })\n\n          console.log(`After Resync not success = ${resyncing}`)\n          toast.error(response.data.message,  {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          });\n          }\n        })\n    }\n\n    const options = [\n      { value: 'Product Based', label: 'Product Based' },\n      { value: 'Service Based', label: 'Service Based' },\n      { value: 'other', label: 'Other' }\n    ]\n\n    const post_options = [\n      { value: 'HUMAN RESOURCES', label: 'HR' },\n      { value: 'CEO', label: 'CEO' },\n      { value: 'COO', label: 'COO' },\n      { value: 'FOUNDER', label: 'FOUNDER' }\n    ]\n\n    return (\n      <section>\n      <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justifyContent=\"center\">\n\n          <form alignItems=\"center\" onSubmit={switchDetailModeHandler} >\n            <div >\n              <Input placeholder=\"Company Name *\" inputProps={ariaLabel} onChange={e => setName(e.target.value)} required style={{width:\"500px\"}}  />\n            </div>\n            <div >\n              <Input placeholder=\"Company Url *\" inputProps={ariaLabel} required onChange={e => setUrl(e.target.value)}   style={{width:\"500px\", marginTop:\"10px\"}}  />\n            </div>\n\n            <div style = {{marginLeft:\"-17px\"}}>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <Box m={2} >\n                <DatePicker\n                  inputFormat=\"yyyy\"\n                  views={['year']}\n                  label=\"Foundation Year\"\n                  minDate={new Date('1900-03-01')}\n                  maxDate={new Date('2023-06-01')}\n                  value={value}\n                  onChange={setValue}\n                  renderInput={(params) => <TextField style={{width:\"500px\"}} {...params} helperText={null} />}\n                />\n                {error && (<p>InValid Year</p>) }\n              </Box>\n            </LocalizationProvider>\n          </div>\n\n          <div style={{width:\"500px\", marginTop:\"12px\"}}>\n\n              {/* <Input placeholder=\"Company Type\" inputProps={ariaLabel} required onChange={e => setType(e.target.value)}  style={{width:\"500px\", marginTop:\"10px\"}}  /> */}\n\n\n              {/* <Select placeholder = \"Company Type\" options={options}  required onChange={e => setType(e.target.value)} /> */}\n\n              <Select placeholder = \"Company Type\" options={options}  required onChange={e => setType(e.value)} />\n\n          </div>\n\n          <div style={{width:\"500px\", marginTop:\"12px\"}}>\n          {/* <Select placeholder = \"Posts\" isMulti options={post_options}  required onChange={handlePostChange} /> */}\n\n          <Input placeholder=\"Posts *\" required inputProps={ariaLabel} onChange={handlePostChange} required style={{width:\"500px\"}}  />\n\n\n          </div>\n\n              <Grid container spacing={2}>\n                <Grid item>\n                  <Box pt={2}>\n                    <Button variant='outlined'\n                        type='submit' sx = {{mt:20}} style = {{width:'217px', position:'absolute', left:'42%'}}\n                        name=\"Fetch\"\n                      >\n                        {/* {showDetails ? 'Hide Details' : 'Fetch Detais'} */}\n                        Add\n                      </Button>\n                  </Box>\n                </Grid>\n              </Grid>\n            </form>\n          </Grid>\n          <ToastContainer position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover/>\n\n        {< Table columns={columns} data={userData} />}\n      </section>\n    )\n  }\n\nexport default FilterTableComponent;\n","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/UI/Card.js",[],"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/ScrappedData/DropDownFilter.js",["100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122"],"import SearchIcon from '@mui/icons-material/Search';\nimport { useState } from 'react';\nimport InputBase from '@mui/material/InputBase';\nimport { styled, alpha } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\n\nimport { useLocation } from 'react-router-dom';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Country, State, City } from 'country-state-city';\nimport Csv from './ExportCsv';\n\nimport { ngrokUrl } from '../../store/HostUrl';\n\nimport Select2 from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport classes from './DropDownFilter.module.css';\n\n\nconst animatedComponents = makeAnimated();\n// import { company_name } from './AddData';\nlet company_name = \"\"\nconst Search = styled('div')(({ theme }) => ({\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n    },\n}));\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(0),\n    color: theme.palette.text.secondary,\n}));\n\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n}));\n\nconst customStyles = {\n  control: (base) => ({\n    ...base,\n    height: 57,\n    minHeight: 57,\n\t\tmarginTop: -2\n  })\n};\n\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: 'inherit',\n    '& .MuiInputBase-input': {\n        padding: theme.spacing(1, 1, 1, 0),\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '12ch',\n        },\n    },\n}));\n\nexport let dataFiltered = null;\n\nexport default function DropDownFilter(props) {\n\n    //   const [firstName, setUserFirstName] = useState();\n    //   const[filteredCompany, setFilteredCompany] = useState();\n    //   const[filterCall, setFilterCall] = useState(false);\n\n    const [company, setCompany] = useState('');\n    const [designation, setDesignation] = useState('')\n    const [designation2, setDesignation2] = useState([''])\n    const [state, setState] = useState('')\n    const [country, setCountry] = useState('')\n    const [selectedCountry, setSelectedCountry] = useState('')\n    const [city, setCity] = useState('')\n    const [state2, setState2] = useState('')\n\t\tconst [showName, setShowName] = useState(false)\n    let countryData = Country.getAllCountries()\n\n    let selectedCountryStates = State.getStatesOfCountry(country)\n    console.log(\"Selected State=\")\n    console.log(selectedCountryStates)\n    console.log(\"State=\")\n    console.log(state)\n\t\tconsole.log(\"State2=\")\n\t\tconsole.log(state2)\n\n    let selectedCity = City.getCitiesOfState(country, state2)\n    console.log(\"Selected City=\")\n    console.log(selectedCity)\n\n\n    let countryMatcher = (iso)=>{\n        let countryCodesMatcher = countryData.filter(item=> item.isoCode == iso)\n        return countryCodesMatcher[0][\"name\"]\n    }\n\n\n    let stateMatcher = (iso)=>{\n        // let stateCodesMatcher = selectedCountryStates.filter(item=>item.name == iso)\n        let stateCodesMatcher = selectedCountryStates.filter(item=>item.isoCode == iso)\n            return stateCodesMatcher[0][\"name\"]\n    }\n\n\tconst Location = useLocation();\n\n\tlet FilterHandler2 = () =>\n\t{\n\n\t\tlet catchedCountry = '';\n        console.log(\"Filter Designation 2=\")\n        console.log(designation2)\n        let catchedState=''\n\n\t\tif (country && country!==\"\")\n        {\n            catchedCountry = countryMatcher(country)\n        }\n\n        if(state && state!==\"\")\n        {\n            catchedState= stateMatcher(state)\n        }\n\n        let EmployeeDetails = props.userData.employee_details\n        let FoundersDetails = props.userData.founders_details\n\n        let filterFinalEmployees =  []\n\n        let filterFinalFounders = []\n\n        const axios = require('axios').default;\n\n\t\ttry\n\t\t{\n\t\t  let id = Location.pathname.split(\"/details/\")[1];\n          let docState = document.getElementById('demo-state').firstChild.nodeValue\n          let docCountry = document.getElementById('demo-Country').firstChild.nodeValue\n\t\t  axios.get(`${ngrokUrl}/api/v1/search`, {\n          headers:\n\t\t\t{\n              'X-USER-TOKEN': localStorage.getItem('token'),\n              \"X-USER-EMAIL\":localStorage.getItem('email')\n            },\n            params:{\n\t\t\t\tid: id,\n                city:city,\n                state: docState,\n\t\t\t\tcountry:docCountry,\n                employee_types:designation2.map(desig=>desig.value)\n            }\n        })\n\n        .then(function (response) {\n        if (response.data.success === false)\n        {\n          // alert(response.data.message)\n          toast.error(response.data.message,  {\n            position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          });\n          // setIsFiltered(false)\n        }\n        else{\n            filterFinalEmployees = response.data.employee_details;\n            filterFinalFounders = response.data.founder_details;\n            localStorage.removeItem('fcity',city);\n            localStorage.removeItem('fstate',state);\n            localStorage.removeItem('fcountry',country);\n            localStorage.removeItem('fdesignation',designation2);\n            localStorage.removeItem('id', id)\n            let docState2 = document.getElementById('demo-state').firstChild.nodeValue\n            let docCountry2 = document.getElementById('demo-Country').firstChild.nodeValue\n            localStorage.setItem('fcity',city);\n            localStorage.setItem('fstate',docState2);\n            localStorage.setItem('fcountry',docCountry2);\n            localStorage.setItem('fdesignation',designation2.map(desig=>desig.value));\n            localStorage.setItem('id', id)\n            props.filteredData(filterFinalFounders,filterFinalEmployees,response.data.pagination,city,state,country,designation2);\n        }\n          // setError(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n        toast.error(error,  {\n          position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        });\n      })\n    }catch (error) {\n      console.error(error);\n      toast.error(error,  {\n        position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      });\n    }\n}\n\n\tlet FilterHandler = ()=>{\n\n\t\tlet catchedCountry = '';\n        console.log(\"Filter Designation 2=\")\n        console.log(designation2)\n        let catchedState=''\n\n\t\tif(country  && country !== \"\")\n\t\t{\n\t\t\tcatchedCountry = countryMatcher(country)\n\t\t}\n\n\t\tif(state && state!==\"\")\n\t\t {\n    \tcatchedState= stateMatcher(state)\n\t\t}\n\n    let EmployeeDetails = props.userData.employee_details\n    let FoundersDetails = props.userData.founders_details\n\n    let filterFinalEmployees =  []\n\n\t\tlet filterFinalFounders =  FoundersDetails.filter(employ=> employ.city.includes(catchedCountry) && employ.city.includes(catchedState) &&employ[\"city\"].includes(city)&&employ.designation.includes(designation) )\n\n    // if(designation !==\"Employees\"){\n\n    //     filterFinalEmployees= EmployeeDetails.filter(employ=> employ.city.includes(catchedCountry) && employ.city.includes(catchedState) &&employ[\"city\"].includes(city)&&employ.designation.includes(designation) )\n\n    // }\n\n    // else\n    // {\n    //     filterFinalEmployees= EmployeeDetails.filter(employ=> employ.city.includes(catchedCountry) && employ.city.includes(catchedState) &&employ[\"city\"].includes(city) )\n    // }\n\n    let ades = []\n\n    if (designation2)\n    {\n        console.log(\"bedore ades = \")\n        console.log(ades)\n\n        designation2.map(designat =>\n            ades.push(EmployeeDetails.filter(employ=> employ.designation.includes(designat.value)))\n            )\n            console.log(\"after ades=\")\n            console.log(ades)\n\n        // filterFinalEmployees= EmployeeDetails.filter(employ=> employ.city.includes(catchedCountry) && employ.city.includes(catchedState) &&employ[\"city\"].includes(city)&&employ.designation.includes(designation2) )\n\n    }\n\n    props.filteredData(filterFinalFounders,filterFinalEmployees)\n    console.log(designation)\n\n}\n\n    const handleDesignation = (event) => {\n        console.log(\"Before Designation2=\")\n        console.log(designation2)\n        console.log(event)\n        setDesignation2(event)\n        console.log(\"After Designation2=\")\n        console.log(designation2)\n    }\n\n\n    const handleChange = (event) => {\n        console.log(event.target.name, \"harish\")\n        if (event.target.name == \"Company\") {\n            setCompany(event.target.value);\n\n        } else if (event.target.name == \"Designation\") {\n            setDesignation(event.target.value)\n        } else if (event.target.name == \"State\") {\n                setShowName(false)\n            if (event.target.value.name){\n            setState(event.target.value.name)\n            setState2(event.target.value.isoCode)\n            }\n            else if (event.target.value)\n            {\n                setState(event.target.value)\n                setState2(event.target.value)\n            }\n                    setShowName(true)\n            setCity(\"\")\n\n        } else if (event.target.name == \"Country\") {\n            setCountry(event.target.value)\n            setState(\"\")\n            setCity(\"\")\n            setState2(\"\")\n\n        } else if (event.target.name == \"City\") {\n\t\t\t\t\tconsole.log(\"Before City=\")\n\t\t\t\t\tconsole.log(city)\n\t\t\t\t\tsetCity(event.target.value)\n\t\t\t\t\tconsole.log(\"After City=\")\n\t\t\t\t\tconsole.log(city)\n        }\n\n        // else if (event.target.name == \"Designation2\") {\n        //     setDesignation2(event.target.value)\n        // }\n\n    };\n\n\n\n//  let extractedLocations = EmployeeDataLocation.map(employee =>{\n//    let splitLocation =  employee.city.split(\",\")\n\n//      let EmployeeCity = splitLocation[0]\n//      let EmployeeState = splitLocation[1]\n//      let EmployeeCountry = splitLocation[2]\n\n//      console.log(EmployeeCity,EmployeeState)\n\n\n//  })\n\n    //   const handleDesignationChange = (event) => {\n    //     setDesignation(event.target.value);\n    //   };\n\n    //   const handleStateCompanyChange = (event) => {\n    //     setState(event.target.value);\n    //   };\n\n    //   const handlecountryCompanyChange = (event) => {\n    //     setCountry(event.target.value);\n    //   };\n\n\n    //   const firstNameChangeHandler = (event) => {\n    //     setUserFirstName(event.target.value);\n    //   };\n\n    //   const [lastName, setUserLastName] = useState();\n\n    //   const lastNameChangeHandler = (event) => {\n    //     setUserLastName(event.target.value);\n    //   };\n\n    //   const [email, setUserEmail] = useState();\n\n    //   const emailChangeHandler = (event) => {\n    //     setUserEmail(event.target.value);\n    //   };\n\n    //   const [city, setUserCity] = useState();\n\n    //   const cityChangeHandler = (event) => {\n    //     setUserCity(event.target.value);\n    //   };\n\n    //   const [designation, setUserDesignation] = useState();\n\n    //   const designationChangeHandler = (event) => {\n    //     setUserDesignation(event.target.value);\n    //   };\n\n    const options = [\n        { value: 'Human Resource', label: 'HR' },\n        { value: 'Chief Executive Officer', label: 'CEO' },\n        { value: 'Chief Technology Officer', label: 'CTO' },\n        { value: 'Chief Operating Officer', label: 'COO' },\n        { value: 'Employees', label: 'Employees' },\n\t\t\t\t{ value: 'Founder', label: 'Founder' }\n      ]\n\n\t\treturn (<>\n\n        <Grid container spacing={2}>\n\n            <Grid item xs={6}>\n                <Item>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"Country\">Country</InputLabel>\n                        <Select\n                            labelId=\"Country\"\n                            id=\"demo-Country\"\n                            value={country}\n                            label=\"country\"\n                            name=\"Country\"\n                            onChange={handleChange}\n                        >\n                            <MenuItem value={\"\"} > Select</MenuItem>\n                            {countryData.map(count => {\n                                // console.log(count.isoCode)\n                                return   <MenuItem value={count.isoCode}>{count.name}</MenuItem>\n                            })}\n\n                        </Select>\n\n                    </FormControl>\n                </Item>\n            </Grid>\n\n            <Grid item xs={6} >\n                <Item>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"State\">State</InputLabel>\n                        <Select\n                            labelId=\"State\"\n                            id=\"demo-state\"\n                            value={state}\n                            label=\"state\"\n                            name=\"State\"\n                            onChange={handleChange}\n                        >\n                        <MenuItem value={\"\"}  > Select</MenuItem>\n\n                        {selectedCountryStates.map(IndivState => {\n                        // console.log(IndivState.isoCode)\n\n                        // return <MenuItem value={ showName ? IndivState.name : IndivState}>{IndivState.name}</MenuItem>\n                        return <MenuItem value={ IndivState.isoCode}>{IndivState.name}</MenuItem>\n\n                        })}\n\n                        </Select>\n                    </FormControl>\n                </Item>\n            </Grid>\n\n            <Grid item xs={6}>\n                <Item>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"City\" >City</InputLabel>\n\n                        <Select\n                            labelId=\"City\"\n                            id=\"demo-City\"\n                            value={city}\n                            label=\"City\"\n                            name=\"City\"\n                            onChange={handleChange}\n                        >\n\n                            <MenuItem value={\"\"} >Select</MenuItem>\n\n                            {selectedCity.map(cities => {\n                                return <MenuItem value={cities.name}>{cities.name}</MenuItem>\n                            })}\n\n                        </Select>\n                    </FormControl>\n                </Item>\n            </Grid>\n\n\t\t\t<Grid item xs={6} >\n\n\t\t\t\t<Item >\n\t\t\t\t\t<FormControl  fullWidth >\n\t\t\t\t\t\t<Select2 name=\"Designation2\" placeholder = \"Designation\" styles={customStyles}\n\t\t\t\t\t\t\t\tcloseMenuOnSelect={false}  classNamePrefix=\"select\"\n\t\t\t\t\t\t\t\t// components={animatedComponents}\n\t\t\t\t\t\t\t\tisMulti\n\t\t\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\t\t\tonChange={handleDesignation}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FormControl>\n\t\t\t\t</Item>\n\n\t\t\t</Grid>\n\n\t\t\t</Grid>\n\n\t\t\t<Grid item mt={2} container spacing={0} direction=\"column\" alignItems=\"center\" justifyContent=\"center\" >\n\n\t\t\t\t<Button variant=\"contained\" onClick={FilterHandler2 } style={{ width: '240px' }}>Filter</Button>\n\n\t\t\t</Grid>\n\n\t\t    <Grid item xs={6} mt={2} spacing={0} direction=\"column\" alignItems=\"center\" justifyContent=\"center\"><Csv/></Grid>\n\n\t\t\t\t\t<ToastContainer position=\"top-right\"\n\t\t\t\t\t\t\tautoClose={5000}\n\t\t\t\t\t\t\thideProgressBar={false}\n\t\t\t\t\t\t\tnewestOnTop={false}\n\t\t\t\t\t\t\tcloseOnClick\n\t\t\t\t\t\t\trtl={false}\n\t\t\t\t\t\t\tpauseOnFocusLoss\n\t\t\t\t\t\t\tdraggable\n\t\t\t\t\t\t\tpauseOnHover />\n\n\t\t\t</>\n    )\n}","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/ScrappedData/ExportCsv.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":78,"column":11,"nodeType":"129","messageId":"130","endLine":78,"endColumn":24},{"ruleId":"127","severity":1,"message":"131","line":40,"column":10,"nodeType":"129","messageId":"130","endLine":40,"endColumn":22},{"ruleId":"127","severity":1,"message":"132","line":41,"column":10,"nodeType":"129","messageId":"130","endLine":41,"endColumn":15},{"ruleId":"127","severity":1,"message":"133","line":42,"column":10,"nodeType":"129","messageId":"130","endLine":42,"endColumn":17},{"ruleId":"127","severity":1,"message":"134","line":43,"column":10,"nodeType":"129","messageId":"130","endLine":43,"endColumn":14},{"ruleId":"127","severity":1,"message":"135","line":4,"column":27,"nodeType":"129","messageId":"130","endLine":4,"endColumn":36},{"ruleId":"127","severity":1,"message":"136","line":9,"column":8,"nodeType":"129","messageId":"130","endLine":9,"endColumn":21},{"ruleId":"127","severity":1,"message":"137","line":13,"column":10,"nodeType":"129","messageId":"130","endLine":13,"endColumn":19},{"ruleId":"127","severity":1,"message":"138","line":13,"column":21,"nodeType":"129","messageId":"130","endLine":13,"endColumn":35},{"ruleId":"127","severity":1,"message":"139","line":13,"column":37,"nodeType":"129","messageId":"130","endLine":13,"endColumn":47},{"ruleId":"127","severity":1,"message":"140","line":14,"column":8,"nodeType":"129","messageId":"130","endLine":14,"endColumn":18},{"ruleId":"127","severity":1,"message":"141","line":16,"column":8,"nodeType":"129","messageId":"130","endLine":16,"endColumn":21},{"ruleId":"127","severity":1,"message":"142","line":58,"column":9,"nodeType":"129","messageId":"130","endLine":58,"endColumn":20},{"ruleId":"127","severity":1,"message":"143","line":115,"column":15,"nodeType":"129","messageId":"130","endLine":115,"endColumn":29},{"ruleId":"144","severity":1,"message":"145","line":278,"column":9,"nodeType":"146","endLine":278,"endColumn":11,"suggestions":"147"},{"ruleId":"127","severity":1,"message":"148","line":562,"column":11,"nodeType":"129","messageId":"130","endLine":562,"endColumn":23},{"ruleId":"149","severity":1,"message":"150","line":613,"column":100,"nodeType":"151","messageId":"152","endLine":613,"endColumn":108},{"ruleId":"127","severity":1,"message":"153","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":18},{"ruleId":"127","severity":1,"message":"154","line":21,"column":8,"nodeType":"129","messageId":"130","endLine":21,"endColumn":15},{"ruleId":"127","severity":1,"message":"155","line":24,"column":7,"nodeType":"129","messageId":"130","endLine":24,"endColumn":25},{"ruleId":"127","severity":1,"message":"156","line":26,"column":5,"nodeType":"129","messageId":"130","endLine":26,"endColumn":17},{"ruleId":"127","severity":1,"message":"157","line":27,"column":7,"nodeType":"129","messageId":"130","endLine":27,"endColumn":13},{"ruleId":"127","severity":1,"message":"158","line":50,"column":7,"nodeType":"129","messageId":"130","endLine":50,"endColumn":24},{"ruleId":"127","severity":1,"message":"159","line":70,"column":7,"nodeType":"129","messageId":"130","endLine":70,"endColumn":22},{"ruleId":"127","severity":1,"message":"160","line":91,"column":12,"nodeType":"129","messageId":"130","endLine":91,"endColumn":19},{"ruleId":"127","severity":1,"message":"161","line":96,"column":12,"nodeType":"129","messageId":"130","endLine":96,"endColumn":27},{"ruleId":"127","severity":1,"message":"162","line":96,"column":29,"nodeType":"129","messageId":"130","endLine":96,"endColumn":47},{"ruleId":"127","severity":1,"message":"163","line":99,"column":10,"nodeType":"129","messageId":"130","endLine":99,"endColumn":18},{"ruleId":"164","severity":1,"message":"165","line":116,"column":74,"nodeType":"166","messageId":"167","endLine":116,"endColumn":76},{"ruleId":"164","severity":1,"message":"165","line":123,"column":81,"nodeType":"166","messageId":"167","endLine":123,"endColumn":83},{"ruleId":"127","severity":1,"message":"168","line":139,"column":13,"nodeType":"129","messageId":"130","endLine":139,"endColumn":27},{"ruleId":"127","severity":1,"message":"169","line":144,"column":13,"nodeType":"129","messageId":"130","endLine":144,"endColumn":25},{"ruleId":"127","severity":1,"message":"170","line":147,"column":13,"nodeType":"129","messageId":"130","endLine":147,"endColumn":28},{"ruleId":"127","severity":1,"message":"171","line":148,"column":13,"nodeType":"129","messageId":"130","endLine":148,"endColumn":28},{"ruleId":"127","severity":1,"message":"172","line":236,"column":6,"nodeType":"129","messageId":"130","endLine":236,"endColumn":19},{"ruleId":"164","severity":1,"message":"165","line":305,"column":31,"nodeType":"166","messageId":"167","endLine":305,"endColumn":33},{"ruleId":"164","severity":1,"message":"165","line":308,"column":38,"nodeType":"166","messageId":"167","endLine":308,"endColumn":40},{"ruleId":"164","severity":1,"message":"165","line":310,"column":38,"nodeType":"166","messageId":"167","endLine":310,"endColumn":40},{"ruleId":"164","severity":1,"message":"165","line":324,"column":38,"nodeType":"166","messageId":"167","endLine":324,"endColumn":40},{"ruleId":"164","severity":1,"message":"165","line":330,"column":38,"nodeType":"166","messageId":"167","endLine":330,"endColumn":40},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"no-unused-vars","'remainingTime' is assigned a value but never used.","Identifier","unusedVar","'designation2' is assigned a value but never used.","'state' is assigned a value but never used.","'country' is assigned a value but never used.","'city' is assigned a value but never used.","'useEffect' is defined but never used.","'PasswordField' is defined but never used.","'TextField' is defined but never used.","'InputAdornment' is defined but never used.","'IconButton' is defined but never used.","'Visibility' is defined but never used.","'VisibilityOff' is defined but never used.","'handleClick' is assigned a value but never used.","'expirationTime' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useMemo has missing dependencies: 'destroyCompanyDetail', 'fetchCompanyDetail', 'resyncCompanyDetail', and 'resyncing'. Either include them or remove the dependency array.","ArrayExpression",["175"],"'post_options' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'SearchIcon' is defined but never used.","'classes' is defined but never used.","'animatedComponents' is assigned a value but never used.","'company_name' is assigned a value but never used.","'Search' is assigned a value but never used.","'SearchIconWrapper' is assigned a value but never used.","'StyledInputBase' is assigned a value but never used.","'company' is assigned a value but never used.","'selectedCountry' is assigned a value but never used.","'setSelectedCountry' is assigned a value but never used.","'showName' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'catchedCountry' is assigned a value but never used.","'catchedState' is assigned a value but never used.","'EmployeeDetails' is assigned a value but never used.","'FoundersDetails' is assigned a value but never used.","'FilterHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},"Update the dependencies array to be: [destroyCompanyDetail, fetchCompanyDetail, resyncCompanyDetail, resyncing]",{"range":"178","text":"179"},[8872,8874],"[destroyCompanyDetail, fetchCompanyDetail, resyncCompanyDetail, resyncing]"]