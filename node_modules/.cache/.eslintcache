[{"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\index.js":"1","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\App.js":"2","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\store\\auth-context.js":"3","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\pages\\AuthPage.js":"4","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\pages\\HomePage.js":"5","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Profile\\UserProfile.js":"6","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\Details.js":"7","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\EmployeeData.js":"8","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Layout\\Layout.js":"9","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\AddData.js":"10","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\store\\HostUrl.js":"11","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Profile\\ProfileForm.js":"12","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\DropDownFilter.js":"13","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Layout\\MainNavigation.js":"14","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Auth\\AuthForm.js":"15","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\StartingPage\\StartingPageContent.js":"16","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\UI\\Card.js":"17","E:\\WebScrapper1\\src\\index.js":"18","E:\\WebScrapper1\\src\\App.js":"19","E:\\WebScrapper1\\src\\store\\auth-context.js":"20","E:\\WebScrapper1\\src\\pages\\AuthPage.js":"21","E:\\WebScrapper1\\src\\pages\\HomePage.js":"22","E:\\WebScrapper1\\src\\components\\Layout\\Layout.js":"23","E:\\WebScrapper1\\src\\components\\ScrappedData\\Details.js":"24","E:\\WebScrapper1\\src\\components\\ScrappedData\\EmployeeData.js":"25","E:\\WebScrapper1\\src\\components\\Profile\\UserProfile.js":"26","E:\\WebScrapper1\\src\\components\\Layout\\MainNavigation.js":"27","E:\\WebScrapper1\\src\\components\\ScrappedData\\AddData.js":"28","E:\\WebScrapper1\\src\\components\\ScrappedData\\DropDownFilter.js":"29","E:\\WebScrapper1\\src\\store\\HostUrl.js":"30","E:\\WebScrapper1\\src\\components\\Auth\\AuthForm.js":"31","E:\\WebScrapper1\\src\\components\\Profile\\ProfileForm.js":"32","E:\\WebScrapper1\\src\\components\\StartingPage\\StartingPageContent.js":"33","E:\\WebScrapper1\\src\\components\\UI\\Card.js":"34"},{"size":367,"mtime":1636971952228,"results":"35","hashOfConfig":"36"},{"size":1235,"mtime":1637064348468,"results":"37","hashOfConfig":"36"},{"size":2394,"mtime":1636971952285,"results":"38","hashOfConfig":"36"},{"size":137,"mtime":1636971952233,"results":"39","hashOfConfig":"36"},{"size":178,"mtime":1636971952234,"results":"40","hashOfConfig":"36"},{"size":257,"mtime":1636971952116,"results":"41","hashOfConfig":"36"},{"size":197,"mtime":1636993274627,"results":"42","hashOfConfig":"36"},{"size":8532,"mtime":1637173752024,"results":"43","hashOfConfig":"36"},{"size":260,"mtime":1636971952095,"results":"44","hashOfConfig":"36"},{"size":15310,"mtime":1637157303864,"results":"45","hashOfConfig":"36"},{"size":112,"mtime":1637156909512,"results":"46","hashOfConfig":"36"},{"size":2112,"mtime":1637157266410,"results":"47","hashOfConfig":"36"},{"size":11179,"mtime":1637208369989,"results":"48","hashOfConfig":"36"},{"size":2236,"mtime":1636971952109,"results":"49","hashOfConfig":"36"},{"size":4854,"mtime":1637157239353,"results":"50","hashOfConfig":"36"},{"size":242,"mtime":1636971952210,"results":"51","hashOfConfig":"36"},{"size":158,"mtime":1636971952215,"results":"52","hashOfConfig":"36"},{"size":367,"mtime":1637218771313,"results":"53","hashOfConfig":"54"},{"size":1235,"mtime":1637218771133,"results":"55","hashOfConfig":"54"},{"size":2394,"mtime":1637218771367,"results":"56","hashOfConfig":"54"},{"size":137,"mtime":1637218771318,"results":"57","hashOfConfig":"54"},{"size":178,"mtime":1637218771319,"results":"58","hashOfConfig":"54"},{"size":260,"mtime":1637218771187,"results":"59","hashOfConfig":"54"},{"size":197,"mtime":1637218771248,"results":"60","hashOfConfig":"54"},{"size":8532,"mtime":1637219079232,"results":"61","hashOfConfig":"54"},{"size":257,"mtime":1637218771194,"results":"62","hashOfConfig":"54"},{"size":2236,"mtime":1637218771189,"results":"63","hashOfConfig":"54"},{"size":15310,"mtime":1637218771202,"results":"64","hashOfConfig":"54"},{"size":11179,"mtime":1637219108851,"results":"65","hashOfConfig":"54"},{"size":112,"mtime":1637219968119,"results":"66","hashOfConfig":"54"},{"size":4854,"mtime":1637218771183,"results":"67","hashOfConfig":"54"},{"size":2112,"mtime":1637218771191,"results":"68","hashOfConfig":"54"},{"size":242,"mtime":1637218771285,"results":"69","hashOfConfig":"54"},{"size":158,"mtime":1637218771289,"results":"70","hashOfConfig":"54"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"hw9xiw",{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"73"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},"bgxdme",{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"109"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"109"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\index.js",[],["143","144"],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\App.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\store\\auth-context.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\pages\\AuthPage.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\pages\\HomePage.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Profile\\UserProfile.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\Details.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\EmployeeData.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Layout\\Layout.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\AddData.js",["145"],"\r\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// import { useEffect, useCallback } from 'react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Input from '@mui/material/Input';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport TextField from '@mui/material/TextField';\r\nimport { ngrokUrl } from '../../store/HostUrl';\r\n\r\n\r\n\r\n\r\nconst ariaLabel = { 'aria-label': 'description' };\r\n\r\n\r\n// Define a default UI for filtering\r\nfunction GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n}) {\r\n    const count = preGlobalFilteredRows.length\r\n    const [value, setValue] = React.useState(globalFilter)\r\n    const onChange = useAsyncDebounce(value => {\r\n        setGlobalFilter(value || undefined)\r\n    }, 200)\r\n\r\n    return (\r\n        <span style={{marginLeft:\"13px\"}}>\r\n            Search:{' '}\r\n            <input\r\n            style={{width:\"17%\", marginLeft:\"12px\"}}\r\n                className=\"form-control\"\r\n                value={value || \"\"}\r\n                onChange={e => {\r\n                    setValue(e.target.value);\r\n                    onChange(e.target.value);\r\n                }}\r\n                placeholder={`${count} records...`}\r\n            />\r\n        </span>\r\n    )\r\n}\r\n\r\nfunction DefaultColumnFilter({\r\n    column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n    const count = preFilteredRows.length\r\n\r\n    return (\r\n        <input\r\n            className=\"form-control\"\r\n            value={filterValue || ''}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined)\r\n            }}\r\n            placeholder={`Search ${count} records...`}\r\n        />\r\n    )\r\n}\r\n\r\nfunction Table({ columns, data }) {\r\n\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    )\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        state,\r\n        preGlobalFilteredRows,\r\n        setGlobalFilter,\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n            defaultColumn,\r\n        },\r\n        useFilters,\r\n        useGlobalFilter\r\n    )\r\n\r\n    return (\r\n        <div style={{marginTop:\"67px\"}}>\r\n            <GlobalFilter\r\n                preGlobalFilteredRows={preGlobalFilteredRows}\r\n                globalFilter={state.globalFilter}\r\n                setGlobalFilter={setGlobalFilter}\r\n            />\r\n            <table style={{marginTop:\"19px\"}} className=\"table\" {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                                <th {...column.getHeaderProps()}>\r\n                                    {column.render('Header')}\r\n                                    {/* Render the columns filter UI */}\r\n                                    <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {rows.map((row, i) => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map(cell => {\r\n                                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                })}\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            <br />\r\n          </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction FilterTableComponent() {\r\n    const columns = React.useMemo(\r\n        () => [\r\n                    {\r\n                        Header: 'Name',\r\n                        accessor: 'name',\r\n                    },\r\n                    {\r\n                        Header: 'Type',\r\n                        accessor: 'company_type'\r\n                    },\r\n                   {\r\n                        Header: 'Url',\r\n                        accessor: 'url'\r\n                    },\r\n                    {\r\n                        Header: 'Foundation Year',\r\n                        accessor: 'foundation_year'\r\n                    },\r\n                    {\r\n                        filterable: false,\r\n                        Header: 'Details',\r\n                        accessor: 'link',\r\n                        disableFilters:true,\r\n                        Cell: ({ row }) =>\r\n                        <Button variant='outlined'\r\n                        style={{width:\"146px\"}}\r\n                        type='submit' sx = {{mt:20}}\r\n                        name= {row.original.id} onClick={ () => fetchCompanyDetail(row.original.id)}\r\n                      > Fetch Details</Button>\r\n                    },\r\n\r\n                    {\r\n                      filterable: false,\r\n                      disableFilters:true,\r\n                      Header: 'Sync',\r\n                      accessor: 'link2',\r\n                      Cell: ({ row }) =>\r\n                      <Button variant='outlined'\r\n                        type='submit' sx = {{mt:20}}\r\n                        // disabled = {resyncing}\r\n                        name= {row.original.id} onClick={ () => resyncCompanyDetail(row.original.id)}\r\n                      >\r\n                        {/* {resyncing ? \"Resyncing\" : \"Resync\"} */}\r\n                        Resync\r\n                        </Button>\r\n                  },\r\n                  {\r\n                    filterable: false,\r\n                    disableFilters:true,\r\n                    Header: 'Delete',\r\n                    accessor: 'link3',\r\n                    Cell: ({ row }) =>\r\n                    <Button variant='outlined'\r\n                    type='submit' sx = {{mt:20}}\r\n                    name= {row.original.id} onClick={ () => destroyCompanyDetail(row.original.id)}\r\n                  > Destroy</Button>\r\n                },\r\n        ],\r\n        []\r\n    )\r\n\r\n    // const [isFetched, setIsFetched] = useState(false);\r\n    const [url, setUrl] = useState('');\r\n    const [userData, setUserData] = useState([]);\r\n    const [name, setName] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [count, setCount] = useState(0);\r\n\r\n    const [value, setValue] = useState(new Date());\r\n\r\n    const destroyCompanyDetail = (id) => {\r\n      const axios = require('axios').default;\r\n\r\n      axios.delete(`${ngrokUrl}/api/v1/companies/${id}`, {\r\n        headers:{\r\n          'X-USER-TOKEN': localStorage.getItem('token'),\r\n          \"X-USER-EMAIL\":localStorage.getItem('email')\r\n        },\r\n      }).then(function(response){\r\n        if (response.data.success === true){\r\n          setCount(count+1);\r\n          toast.success(\"Delete Sucess\",{\r\n            position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          })\r\n          // const axios = require('axios').default;\r\n          axios.get(`${ngrokUrl}/api/v1/companies`, {\r\n            headers:{\r\n              'X-USER-TOKEN': localStorage.getItem('token'),\r\n              \"X-USER-EMAIL\":localStorage.getItem('email')\r\n            }\r\n          }).then(function(response){\r\n            if (response.data.success === true){\r\n              setUserData(response.data.companies);\r\n            }\r\n            else{\r\n          toast.error(response.data.message,  {\r\n            position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          });\r\n            }\r\n          })\r\n        }\r\n        else{\r\n      toast.error(response.data.message,  {\r\n        position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      });\r\n        }\r\n      })\r\n    }\r\n\r\n    useEffect(() => {\r\n      const axios = require('axios').default;\r\n      axios.get(`${ngrokUrl}/api/v1/companies`, {\r\n        headers:{\r\n          'X-USER-TOKEN': localStorage.getItem('token'),\r\n          \"X-USER-EMAIL\":localStorage.getItem('email')\r\n        }\r\n      }).then(function(response){\r\n        if (response.data.success === true){\r\n          setUserData(response.data.companies);\r\n        }\r\n        else{\r\n      toast.error(response.data.message,  {\r\n        position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      });\r\n        }\r\n      })\r\n  },[count]);\r\n\r\n\r\n    const switchDetailModeHandler = (event) => {\r\n      // let sent_url;\r\n      event.preventDefault();\r\n      const axios = require('axios').default;\r\n\r\n        const headers = {\r\n          'X-USER-TOKEN': localStorage.getItem('token'),\r\n          \"X-USER-EMAIL\":localStorage.getItem('email')\r\n        }\r\n\r\n        const data = {\r\n          name:name,\r\n          company_type:type,\r\n          url:url,\r\n          foundation_year:value\r\n        }\r\n\r\n        axios.post(`${ngrokUrl}/api/v1/companies`,data, {\r\n            headers: headers\r\n          }).then(response => {\r\n          // setIsLoading(false);\r\n          console.log(\"String\");\r\n          console.log(response);\r\n          if (response.data.success === false)\r\n          {\r\n            toast.error(response.data.message,  {\r\n              position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            });\r\n          //   setFilterCall(false);\r\n          //   // alert(response.data.message)\r\n          }\r\n          else{\r\n            axios.get(`${ngrokUrl}/api/v1/companies`, {\r\n              headers: headers\r\n            }\r\n            )\r\n            .then(function(response){\r\n              if (response.data.success === true){\r\n                setUserData(response.data.companies);\r\n              }\r\n            })\r\n\r\n          // userData.push(response.data.company)\r\n          // setIsFetched(true);\r\n          // setFilterCall(false);\r\n          // setIsFiltered(false);\r\n          // setShowDetails(true);\r\n        }\r\n          // setError(false);\r\n        }).catch(function (error) {\r\n          console.log(error);\r\n          toast.error(\"Something Went Wrong\",  {\r\n            position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          })\r\n        })\r\n\r\n\r\n    };\r\n\r\n    const history = useHistory();\r\n    const fetchCompanyDetail =(id) =>{\r\n      console.log(id)\r\n      history.push(`/details/${id}`)\r\n    }\r\n    const resyncCompanyDetail = (id) => {\r\n      const axios = require('axios').default;\r\n\r\n      // setResyncing(true);\r\n\r\n      axios.get(`${ngrokUrl}/api/v1/resync?company_id=${id}`, {\r\n        headers:{\r\n          'X-USER-TOKEN': localStorage.getItem('token'),\r\n          \"X-USER-EMAIL\":localStorage.getItem('email')\r\n        },\r\n      }).then(function(response){\r\n        if (response.data.success === true){\r\n          // setResyncing(false);\r\n          toast.success(\"Resync Sucess\",{\r\n            position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          })\r\n        }\r\n        else{\r\n          // setResyncing(false);\r\n      toast.error(response.data.message,  {\r\n        position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      });\r\n        }\r\n      })\r\n    }\r\n\r\n    return (\r\n      <section>\r\n      <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n\r\n          <form alignItems=\"center\" onSubmit={switchDetailModeHandler} >\r\n            <div >\r\n              <Input placeholder=\"Name\" inputProps={ariaLabel} onChange={e => setName(e.target.value)} required style={{width:\"500px\"}}  />\r\n            </div>\r\n            <div >\r\n              <Input placeholder=\"Url\" inputProps={ariaLabel} required onChange={e => setUrl(e.target.value)}   style={{width:\"500px\", marginTop:\"10px\"}}  />\r\n            </div>\r\n            <div >\r\n              <Input placeholder=\"Type\" inputProps={ariaLabel} required onChange={e => setType(e.target.value)}  style={{width:\"500px\", marginTop:\"10px\"}}  />\r\n            </div>\r\n\r\n          <div style = {{marginLeft:\"-17px\"}}>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n              <Box m={2} >\r\n                <DatePicker\r\n                  inputFormat=\"yyyy\"\r\n                  views={['year']}\r\n                  label=\"Foundation Year\"\r\n                  minDate={new Date('1900-03-01')}\r\n                  maxDate={new Date('2023-06-01')}\r\n                  value={value}\r\n                  onChange={setValue}\r\n\r\n                  renderInput={(params) => <TextField style={{width:\"500px\"}} {...params} helperText={null} />}\r\n                />\r\n              </Box>\r\n            </LocalizationProvider>\r\n          </div>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid item>\r\n                <Box pt={2}>\r\n                  <Button variant='outlined'\r\n                      type='submit' sx = {{mt:20}} style = {{width:'217px', position:'absolute', left:'42%'}}\r\n                      name=\"Fetch\"\r\n                    >\r\n                      {/* {showDetails ? 'Hide Details' : 'Fetch Detais'} */}\r\n                      Add\r\n                    </Button>\r\n                </Box>\r\n              </Grid>\r\n\r\n            </Grid>\r\n          </form>\r\n          </Grid>\r\n          <ToastContainer position=\"top-right\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover/>\r\n        {< Table columns={columns} data={userData} />}\r\n      </section>\r\n    )\r\n}\r\n\r\nexport default FilterTableComponent;","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\store\\HostUrl.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Profile\\ProfileForm.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\DropDownFilter.js",["146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162"],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Layout\\MainNavigation.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Auth\\AuthForm.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\StartingPage\\StartingPageContent.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\UI\\Card.js",[],"E:\\WebScrapper1\\src\\index.js",[],["163","164"],"E:\\WebScrapper1\\src\\App.js",[],"E:\\WebScrapper1\\src\\store\\auth-context.js",[],"E:\\WebScrapper1\\src\\pages\\AuthPage.js",[],"E:\\WebScrapper1\\src\\pages\\HomePage.js",[],"E:\\WebScrapper1\\src\\components\\Layout\\Layout.js",[],"E:\\WebScrapper1\\src\\components\\ScrappedData\\Details.js",[],"E:\\WebScrapper1\\src\\components\\ScrappedData\\EmployeeData.js",[],"E:\\WebScrapper1\\src\\components\\Profile\\UserProfile.js",[],"E:\\WebScrapper1\\src\\components\\Layout\\MainNavigation.js",[],"E:\\WebScrapper1\\src\\components\\ScrappedData\\AddData.js",["165"],"E:\\WebScrapper1\\src\\components\\ScrappedData\\DropDownFilter.js",["166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182"],"import SearchIcon from '@mui/icons-material/Search';\r\nimport { useState } from 'react';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport { FormControl, InputLabel, Select, MenuItem } from '@mui/material';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Country, State, City } from 'country-state-city';\r\n\r\n\r\n// import { company_name } from './AddData';\r\nlet company_name = \"\"\r\nconst Search = styled('div')(({ theme }) => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n    },\r\n}));\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(0),\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n}));\r\n\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: 'inherit',\r\n    '& .MuiInputBase-input': {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '12ch',\r\n        },\r\n    },\r\n}));\r\n\r\nexport let dataFiltered = null;\r\n\r\nexport default function DropDownFilter(props) {\r\n\r\n    //   const [firstName, setUserFirstName] = useState();\r\n    //   const[filteredCompany, setFilteredCompany] = useState();\r\n    //   const[filterCall, setFilterCall] = useState(false);\r\n\r\n    const [company, setCompany] = useState('');\r\n    const [designation, setDesignation] = useState('')\r\n    const [state, setState] = useState('')\r\n    const [country, setCountry] = useState('')\r\n    const [selectedCountry, setSelectedCountry] = useState('')\r\n    const [city, setCity] = useState('')\r\n    \r\n\r\n\r\n    let countryData = Country.getAllCountries()\r\n    \r\n    let selectedCountryStates = State.getStatesOfCountry(country)\r\n    let selectedCity = City.getCitiesOfState(country, state)\r\n    console.log(selectedCity)\r\n\r\n\r\n\r\nlet countryMatcher = (iso)=>{\r\n    let countryCodesMatcher = countryData.filter(item=> item.isoCode == iso)\r\n        return countryCodesMatcher[0][\"name\"]\r\n    \r\n}\r\n\r\n\r\nlet stateMatcher = (iso)=>{\r\n    let stateCodesMatcher = selectedCountryStates.filter(item=>item.isoCode ==iso)\r\n         return stateCodesMatcher[0][\"name\"]\r\n}\r\n\r\n\r\n\r\nlet FilterHandler = ()=>{\r\n    let catchedCountry = '';\r\n    let catchedState=''\r\n if(country  && country !== \"\"){ \r\n   catchedCountry = countryMatcher(country)}\r\n if(state && state!==\"\"){\r\n    catchedState= stateMatcher(state)}\r\n\r\n\r\n    let EmployeeDetails = props.userData.employee_details\r\n    let FoundersDetails = props.userData.founders_details\r\n  \r\n    let filterFinalEmployees =  []\r\n    let filterFinalFounders =  FoundersDetails.filter(employ=> employ.city.includes(catchedCountry) && employ.city.includes(catchedState) &&employ[\"city\"].includes(city)&&employ.designation.includes(designation) ) \r\n            \r\n    if(designation==\"Human Resources\"){\r\n\r\n        filterFinalEmployees= EmployeeDetails.filter(employ=> employ.city.includes(catchedCountry) && employ.city.includes(catchedState) &&employ[\"city\"].includes(city)&&employ.designation.includes(designation) )\r\n\r\n    }else{\r\n        filterFinalEmployees= EmployeeDetails.filter(employ=> employ.city.includes(catchedCountry) && employ.city.includes(catchedState) &&employ[\"city\"].includes(city) )\r\n    }\r\n\r\n        \r\n    props.filteredData(filterFinalFounders,filterFinalEmployees)\r\n    console.log(designation)    \r\n    \r\n    \r\n}\r\n\r\n\r\n    const handleChange = (event) => {\r\n        console.log(event.target.name, \"harish\")\r\n        if (event.target.name == \"Company\") {\r\n            setCompany(event.target.value);\r\n\r\n        } else if (event.target.name == \"Designation\") {\r\n            setDesignation(event.target.value)\r\n        } else if (event.target.name == \"State\") {\r\n            setState(event.target.value)\r\n        } else if (event.target.name == \"Country\") {\r\n            setCountry(event.target.value)\r\n        } else if (event.target.name == \"City\") {\r\n            setCity(event.target.value)\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n \r\n\r\n//  let extractedLocations = EmployeeDataLocation.map(employee =>{\r\n//    let splitLocation =  employee.city.split(\",\")\r\n    \r\n//      let EmployeeCity = splitLocation[0]\r\n//      let EmployeeState = splitLocation[1]\r\n//      let EmployeeCountry = splitLocation[2]\r\n\r\n//      console.log(EmployeeCity,EmployeeState)\r\n  \r\n\r\n//  })\r\n\r\n    //   const handleDesignationChange = (event) => {\r\n    //     setDesignation(event.target.value);\r\n    //   };\r\n\r\n    //   const handleStateCompanyChange = (event) => {\r\n    //     setState(event.target.value);\r\n    //   };\r\n\r\n    //   const handlecountryCompanyChange = (event) => {\r\n    //     setCountry(event.target.value);\r\n    //   };\r\n\r\n\r\n    //   const firstNameChangeHandler = (event) => {\r\n    //     setUserFirstName(event.target.value);\r\n    //   };\r\n\r\n    //   const [lastName, setUserLastName] = useState();\r\n\r\n    //   const lastNameChangeHandler = (event) => {\r\n    //     setUserLastName(event.target.value);\r\n    //   };\r\n\r\n    //   const [email, setUserEmail] = useState();\r\n\r\n    //   const emailChangeHandler = (event) => {\r\n    //     setUserEmail(event.target.value);\r\n    //   };\r\n\r\n    //   const [city, setUserCity] = useState();\r\n\r\n    //   const cityChangeHandler = (event) => {\r\n    //     setUserCity(event.target.value);\r\n    //   };\r\n\r\n    //   const [designation, setUserDesignation] = useState();\r\n\r\n    //   const designationChangeHandler = (event) => {\r\n    //     setUserDesignation(event.target.value);\r\n    //   };\r\n\r\n\r\n\r\n\r\n\r\n    return (<>\r\n\r\n        <Grid container spacing={2}>\r\n\r\n     \r\n\r\n            <Grid item xs={6}>\r\n                <Item>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"Country\">Country</InputLabel>\r\n                        <Select\r\n                            labelId=\"Country\"\r\n                            id=\"demo-Country\"\r\n                            value={country}\r\n                            label=\"country\"\r\n                            name=\"Country\"\r\n                            onChange={handleChange}\r\n                        >\r\n                            {countryData.map(count => {\r\n                                // console.log(count.isoCode)\r\n                                return <MenuItem value={count.isoCode}>{count.name}</MenuItem>\r\n                            })}\r\n\r\n                        </Select>\r\n                    </FormControl>\r\n                </Item>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n                <Item>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"State\">State</InputLabel>\r\n                        <Select\r\n                            labelId=\"State\"\r\n                            id=\"demo-state\"\r\n                            value={state}\r\n                            label=\"state\"\r\n                            name=\"State\"\r\n                            onChange={handleChange}\r\n                        >\r\n                            {selectedCountryStates.map(IndivState => {\r\n                                // console.log(IndivState.isoCode)\r\n                                return <MenuItem value={IndivState.isoCode}>{IndivState.name}</MenuItem>\r\n\r\n                            })}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Item>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n                <Item>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"City\">City</InputLabel>\r\n                        <Select\r\n                            labelId=\"City\"\r\n                            id=\"demo-City\"\r\n                            value={city}\r\n                            label=\"City\"\r\n                            name=\"City\"\r\n                            onChange={handleChange}\r\n                        >\r\n                            {selectedCity.map(cities => {\r\n                           \r\n                                return <MenuItem value={cities.name}>{cities.name}</MenuItem>\r\n\r\n                            })}\r\n\r\n                        </Select>\r\n                    </FormControl>\r\n                </Item>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n                <Item>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"Designation\">Designation</InputLabel>\r\n                        <Select\r\n                            labelId=\"Designation\"\r\n                            id=\"demo-designation\"\r\n                            value={designation}\r\n                            label=\"Designation\"\r\n                            name=\"Designation\"\r\n                            onChange={handleChange}\r\n                        >\r\n                            <MenuItem value={\"Chief Executive Officer\"}>CEO</MenuItem>\r\n                            <MenuItem value={\"Founder \"}>Founder</MenuItem>\r\n                            <MenuItem value={\"CTO\"}>CTO</MenuItem>\r\n                            <MenuItem value={\"COO\"}>COO</MenuItem>   \r\n                            <MenuItem value={\"CXO\"}>CXO</MenuItem>                            \r\n                            {/* <MenuItem value={\"Software Engineer\"}>Software Engineer</MenuItem>\r\n                            <MenuItem value={\"Developer\"}>Developer</MenuItem>\r\n                            <MenuItem value={\"Business Development\"}>Business Development</MenuItem> */}\r\n                            <MenuItem value={\"Human Resources\"}>Human Resources</MenuItem>\r\n                            {/* <MenuItem value={\"Designer\"}>Designer</MenuItem> */}\r\n                            \r\n\r\n\r\n\r\n\r\n                        </Select>\r\n                    </FormControl>\r\n                </Item>\r\n            </Grid>\r\n        </Grid>\r\n\r\n        <Grid item mt={2} container spacing={0} direction=\"column\" alignItems=\"center\" justifyContent=\"center\" >\r\n            <Button variant=\"contained\"   onClick={FilterHandler } style={{ width: '240px' }}>Filter</Button>\r\n        </Grid>\r\n        <ToastContainer position=\"top-right\"\r\n            autoClose={5000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover />\r\n\r\n    </>\r\n    )\r\n}","E:\\WebScrapper1\\src\\store\\HostUrl.js",[],"E:\\WebScrapper1\\src\\components\\Auth\\AuthForm.js",[],"E:\\WebScrapper1\\src\\components\\Profile\\ProfileForm.js",[],"E:\\WebScrapper1\\src\\components\\StartingPage\\StartingPageContent.js",[],"E:\\WebScrapper1\\src\\components\\UI\\Card.js",[],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":200,"column":9,"nodeType":"189","endLine":200,"endColumn":11,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":8,"nodeType":"193","messageId":"194","endLine":1,"endColumn":18},{"ruleId":"191","severity":1,"message":"195","line":10,"column":26,"nodeType":"193","messageId":"194","endLine":10,"endColumn":31},{"ruleId":"191","severity":1,"message":"196","line":16,"column":5,"nodeType":"193","messageId":"194","endLine":16,"endColumn":17},{"ruleId":"191","severity":1,"message":"197","line":17,"column":7,"nodeType":"193","messageId":"194","endLine":17,"endColumn":13},{"ruleId":"191","severity":1,"message":"198","line":40,"column":7,"nodeType":"193","messageId":"194","endLine":40,"endColumn":24},{"ruleId":"191","severity":1,"message":"199","line":51,"column":7,"nodeType":"193","messageId":"194","endLine":51,"endColumn":22},{"ruleId":"191","severity":1,"message":"200","line":72,"column":12,"nodeType":"193","messageId":"194","endLine":72,"endColumn":19},{"ruleId":"191","severity":1,"message":"201","line":76,"column":12,"nodeType":"193","messageId":"194","endLine":76,"endColumn":27},{"ruleId":"191","severity":1,"message":"202","line":76,"column":29,"nodeType":"193","messageId":"194","endLine":76,"endColumn":47},{"ruleId":"203","severity":1,"message":"204","line":90,"column":70,"nodeType":"205","messageId":"206","endLine":90,"endColumn":72},{"ruleId":"203","severity":1,"message":"204","line":97,"column":77,"nodeType":"205","messageId":"206","endLine":97,"endColumn":79},{"ruleId":"203","severity":1,"message":"204","line":118,"column":19,"nodeType":"205","messageId":"206","endLine":118,"endColumn":21},{"ruleId":"203","severity":1,"message":"204","line":136,"column":31,"nodeType":"205","messageId":"206","endLine":136,"endColumn":33},{"ruleId":"203","severity":1,"message":"204","line":139,"column":38,"nodeType":"205","messageId":"206","endLine":139,"endColumn":40},{"ruleId":"203","severity":1,"message":"204","line":141,"column":38,"nodeType":"205","messageId":"206","endLine":141,"endColumn":40},{"ruleId":"203","severity":1,"message":"204","line":143,"column":38,"nodeType":"205","messageId":"206","endLine":143,"endColumn":40},{"ruleId":"203","severity":1,"message":"204","line":145,"column":38,"nodeType":"205","messageId":"206","endLine":145,"endColumn":40},{"ruleId":"183","replacedBy":"207"},{"ruleId":"185","replacedBy":"208"},{"ruleId":"187","severity":1,"message":"188","line":200,"column":9,"nodeType":"189","endLine":200,"endColumn":11,"suggestions":"209"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":8,"nodeType":"193","messageId":"194","endLine":1,"endColumn":18},{"ruleId":"191","severity":1,"message":"195","line":10,"column":26,"nodeType":"193","messageId":"194","endLine":10,"endColumn":31},{"ruleId":"191","severity":1,"message":"196","line":16,"column":5,"nodeType":"193","messageId":"194","endLine":16,"endColumn":17},{"ruleId":"191","severity":1,"message":"197","line":17,"column":7,"nodeType":"193","messageId":"194","endLine":17,"endColumn":13},{"ruleId":"191","severity":1,"message":"198","line":40,"column":7,"nodeType":"193","messageId":"194","endLine":40,"endColumn":24},{"ruleId":"191","severity":1,"message":"199","line":51,"column":7,"nodeType":"193","messageId":"194","endLine":51,"endColumn":22},{"ruleId":"191","severity":1,"message":"200","line":72,"column":12,"nodeType":"193","messageId":"194","endLine":72,"endColumn":19},{"ruleId":"191","severity":1,"message":"201","line":76,"column":12,"nodeType":"193","messageId":"194","endLine":76,"endColumn":27},{"ruleId":"191","severity":1,"message":"202","line":76,"column":29,"nodeType":"193","messageId":"194","endLine":76,"endColumn":47},{"ruleId":"203","severity":1,"message":"204","line":90,"column":70,"nodeType":"205","messageId":"206","endLine":90,"endColumn":72},{"ruleId":"203","severity":1,"message":"204","line":97,"column":77,"nodeType":"205","messageId":"206","endLine":97,"endColumn":79},{"ruleId":"203","severity":1,"message":"204","line":118,"column":19,"nodeType":"205","messageId":"206","endLine":118,"endColumn":21},{"ruleId":"203","severity":1,"message":"204","line":136,"column":31,"nodeType":"205","messageId":"206","endLine":136,"endColumn":33},{"ruleId":"203","severity":1,"message":"204","line":139,"column":38,"nodeType":"205","messageId":"206","endLine":139,"endColumn":40},{"ruleId":"203","severity":1,"message":"204","line":141,"column":38,"nodeType":"205","messageId":"206","endLine":141,"endColumn":40},{"ruleId":"203","severity":1,"message":"204","line":143,"column":38,"nodeType":"205","messageId":"206","endLine":143,"endColumn":40},{"ruleId":"203","severity":1,"message":"204","line":145,"column":38,"nodeType":"205","messageId":"206","endLine":145,"endColumn":40},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],"react-hooks/exhaustive-deps","React Hook React.useMemo has missing dependencies: 'destroyCompanyDetail' and 'fetchCompanyDetail'. Either include them or remove the dependency array.","ArrayExpression",["212"],"no-unused-vars","'SearchIcon' is defined but never used.","Identifier","unusedVar","'toast' is defined but never used.","'company_name' is assigned a value but never used.","'Search' is assigned a value but never used.","'SearchIconWrapper' is assigned a value but never used.","'StyledInputBase' is assigned a value but never used.","'company' is assigned a value but never used.","'selectedCountry' is assigned a value but never used.","'setSelectedCountry' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["210"],["211"],["213"],"no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},{"desc":"214","fix":"216"},"Update the dependencies array to be: [destroyCompanyDetail, fetchCompanyDetail]",{"range":"217","text":"218"},{"range":"219","text":"218"},[6807,6809],"[destroyCompanyDetail, fetchCompanyDetail]",[6807,6809]]