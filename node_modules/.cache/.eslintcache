[{"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/index.js":"1","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/App.js":"2","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/store/auth-context.js":"3","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/pages/HomePage.js":"4","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/pages/AuthPage.js":"5","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Layout/Layout.js":"6","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Profile/UserProfile.js":"7","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/ScrappedData/Details.js":"8","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/ScrappedData/EmployeeData.js":"9","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/StartingPage/StartingPageContent.js":"10","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Profile/ProfileForm.js":"11","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Layout/MainNavigation.js":"12","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Auth/AuthForm.js":"13","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/store/HostUrl.js":"14","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/ScrappedData/AddData.js":"15","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/UI/Card.js":"16","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/ScrappedData/DropDownFilter.js":"17","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/ScrappedData/ExportCsv.js":"18"},{"size":352,"mtime":1632221863031,"results":"19","hashOfConfig":"20"},{"size":1192,"mtime":1636724877427,"results":"21","hashOfConfig":"20"},{"size":2616,"mtime":1638854635961,"results":"22","hashOfConfig":"20"},{"size":171,"mtime":1632221863035,"results":"23","hashOfConfig":"20"},{"size":130,"mtime":1632221863035,"results":"24","hashOfConfig":"20"},{"size":246,"mtime":1632221863031,"results":"25","hashOfConfig":"20"},{"size":245,"mtime":1634736243102,"results":"26","hashOfConfig":"20"},{"size":185,"mtime":1636708531458,"results":"27","hashOfConfig":"20"},{"size":12755,"mtime":1639645800823,"results":"28","hashOfConfig":"20"},{"size":231,"mtime":1632484514506,"results":"29","hashOfConfig":"20"},{"size":3074,"mtime":1637304703827,"results":"30","hashOfConfig":"20"},{"size":2163,"mtime":1638505344749,"results":"31","hashOfConfig":"20"},{"size":4753,"mtime":1638785102593,"results":"32","hashOfConfig":"20"},{"size":161,"mtime":1639648233648,"results":"33","hashOfConfig":"20"},{"size":20513,"mtime":1639636557651,"results":"34","hashOfConfig":"20"},{"size":152,"mtime":1632549456718,"results":"35","hashOfConfig":"20"},{"size":16276,"mtime":1638804317064,"results":"36","hashOfConfig":"20"},{"size":1004,"mtime":1638803302579,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"lncne1",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/index.js",[],["79","80"],"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/App.js",[],"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/store/auth-context.js",["81"],"import React, { useState, useEffect, useCallback } from 'react';\n\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: (token) => {},\n  logout: () => {},\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n\n  const remainingDuration = adjExpirationTime - currentTime;\n  // const remainingDuration = 2880000000;\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n\n  const storedToken = localStorage.getItem('token');\n\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 5600)\n  {\n    localStorage.removeItem('email');\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingTime,\n  };\n};\n\nexport const AuthContextProvider = (props) => {\n  const tokenData = retrieveStoredToken();\n\n  let initialToken;\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n\n  const [token, setToken] = useState(initialToken);\n\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('email');\n    localStorage.removeItem('expirationTime');\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const loginHandler = (token, email, expirationTime) => {\n    setToken(token);\n\n    localStorage.setItem('token', token);\n    localStorage.setItem('email', email);\n\n    const expirationTime2 = new Date(\n      new Date().getTime() + 28800000\n      );\n\n      localStorage.setItem('expirationTime', expirationTime2);\n\n    const remainingTime = calculateRemainingTime(expirationTime2);\n\n\n    // localStorage.setItem('expirationTime', expirationTime);\n\n    // const remainingTime = calculateRemainingTime(expirationTime);\n\n    // logoutTimer = setTimeout(logoutHandler, remainingTime);\n    // logoutTimer = setTimeout(logoutHandler, remainingTime);\n\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      console.log(tokenData.duration);\n      // logoutTimer = setTimeout(logoutHandler);\n    }\n  }, [tokenData, logoutHandler]);\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/pages/HomePage.js",[],"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/pages/AuthPage.js",[],"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Layout/Layout.js",[],"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Profile/UserProfile.js",[],"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/ScrappedData/Details.js",[],"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/ScrappedData/EmployeeData.js",["82","83","84","85"],"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/StartingPage/StartingPageContent.js",[],"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Profile/ProfileForm.js",["86","87","88","89","90","91","92","93"],"// import { useRef, useContext } from 'react';\nimport { useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\n\n// import AuthContext from '../../store/auth-context';\nimport classes from './ProfileForm.module.css';\nimport { ngrokUrl } from '../../store/HostUrl';\nimport PasswordField from 'material-ui-password-field'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { TextField, InputAdornment, IconButton } from \"@material-ui/core\";\nimport Visibility from \"@material-ui/icons/Visibility\";\n\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nconst eye = <FontAwesomeIcon icon={faEye} />;\n\n\n\nconst ProfileForm = () => {\n  const history = useHistory();\n\n  const newPasswordInputRef = useRef();\n  // const authCtx = useContext(AuthContext);\n  const submitHandler = (event) => {\n\n    event.preventDefault();\n    const enteredNewPassword = newPasswordInputRef.current.value;\n    const password = { update_password: enteredNewPassword };\n    const headers = {\n      'X-USER-TOKEN': localStorage.getItem('token'),\n      \"X-USER-EMAIL\":localStorage.getItem('email')\n    };\n    const axios = require('axios').default;\n    axios.put(`${ngrokUrl}/api/v1/change_password`, password, { headers })\n    .then((responseData) => { console.log(responseData);\n        toast.success(\"Password updated successfully\",  {\n          position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n          onClose: () => history.replace('/')\n        });\n    })\n    .catch((error) => { console.log(error); alert('Something Went Wrong') })\n  };\n\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClick = () => {\n    setShowPassword(!showPassword);\n  }\n\n\n  const [passwordShown, setPasswordShown] = useState(false);\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n\n  return (<>\n    <form className={classes.form} onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='new-password'>New Password</label>\n        <input type={passwordShown ? \"text\" : \"password\"} id='new-password' minLength=\"7\" required ref={newPasswordInputRef}\n        />\n        <i onClick={togglePasswordVisiblity}>{eye}</i>\n      </div>\n\n      {/* <PasswordField id='new-password' minLength=\"7\" required ref={newPasswordInputRef}  /> */}\n\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n      <ToastContainer position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover/>\n    </form>\n    </>\n  );\n};\n\nexport default ProfileForm;\n","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Layout/MainNavigation.js",[],"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Auth/AuthForm.js",["94"],"import { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\nimport {ngrokUrl } from '../../store/HostUrl';\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext);\n\n  const [isLogin, setIsLogin] = useState(true);\n  // const [isLoading, setIsLoading] = useState(false);\n\n\n  const [error, setError] = useState(false);\n  const[message, setMessage] = useState();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // if (enteredPassword.length < 5) {\n    //   alert('Password must contain atleast 5 characters');\n    //   return;\n    // }\n\n    // setIsLoading(true);\n    let url;\n\n    if (isLogin) {\n      // url ='https://react-fetch-detail.herokuapp.com/users/sign_in';\n        // url=`${ngrokUrl}/api/v1/auth/sign_in\"\n        url = `${ngrokUrl}/api/v1/users/sign_in`\n      } else {\n        // url ='https://react-fetch-detail.herokuapp.com/users';\n        // url=`${ngrokUrl}/api/v1/auth\"\n      url = `${ngrokUrl}/api/v1/users`\n    }\n\n    // if (url === \"https://react-fetch-detail.herokuapp.com/users\")\n    if (url === `${ngrokUrl}/api/v1/users`)\n    // if (url === \"http://460b-157-47-214-197.ngrok.io/api/v1/auth\")\n\n    {\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n          user:\n          {\n            email: enteredEmail,\n            password: enteredPassword,\n            password_confirmation: enteredPassword\n          }\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n      .then((res) => {\n        // setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = data.message;\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .catch((err) => {\n        alert(err.message);\n        setIsLogin(true);\n        history.replace('/auth');\n      });\n    }\n\n    else {\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        user:\n        {\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => {\n        // setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = data.message;\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n\n        const expirationTime = new Date(\n          new Date().getTime() + 28800000\n        );\n\n        // authCtx.login(data.user.auth_token, data.user.email, expirationTime.toISOString());\n        authCtx.login(data.user.auth_token, data.user.email);\n\n        history.replace('/');\n      })\n      .catch((err) => {\n        setError(true);\n        setMessage(err.message);\n        // alert(err.message);\n      });\n    }\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email' style={{float:'left'}}>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef}  />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password' style={{float:'left'}}>Your Password</label>\n          <input\n            type='password'\n            id='password'\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          { (\n            // <button>{isLogin ? 'Login' : 'Create Account'}</button>\n            <button>{isLogin ? 'Login' : 'Create Account'}</button>\n          )}\n          {/* {isLoading && <p>Sending request...</p>} */}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {/* {isLogin ? 'Create new account' : 'Login with existing account'} */}\n          </button>\n          {/* <Button variant=\"contained\">Hello World</Button> */}\n        </div>\n      </form>\n          {error &&\n            <span style={{ color: 'red' }}>{message}</span>}\n    </section>\n  );\n};\n\nexport default AuthForm;\n","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/store/HostUrl.js",[],"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/ScrappedData/AddData.js",["95","96","97"],"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/UI/Card.js",[],"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/ScrappedData/DropDownFilter.js",["98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120"],"import SearchIcon from '@mui/icons-material/Search';\nimport { useState } from 'react';\nimport InputBase from '@mui/material/InputBase';\nimport { styled, alpha } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\n\nimport { useLocation } from 'react-router-dom';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Country, State, City } from 'country-state-city';\nimport Csv from './ExportCsv';\n\nimport { ngrokUrl } from '../../store/HostUrl';\n\nimport Select2 from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport classes from './DropDownFilter.module.css';\n\n\nconst animatedComponents = makeAnimated();\n// import { company_name } from './AddData';\nlet company_name = \"\"\nconst Search = styled('div')(({ theme }) => ({\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n    },\n}));\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(0),\n    color: theme.palette.text.secondary,\n}));\n\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n}));\n\nconst customStyles = {\n  control: (base) => ({\n    ...base,\n    height: 57,\n    minHeight: 57,\n\t\tmarginTop: -2\n  })\n};\n\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: 'inherit',\n    '& .MuiInputBase-input': {\n        padding: theme.spacing(1, 1, 1, 0),\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '12ch',\n        },\n    },\n}));\n\nexport let dataFiltered = null;\n\nexport default function DropDownFilter(props) {\n\n    //   const [firstName, setUserFirstName] = useState();\n    //   const[filteredCompany, setFilteredCompany] = useState();\n    //   const[filterCall, setFilterCall] = useState(false);\n\n    const [company, setCompany] = useState('');\n    const [designation, setDesignation] = useState('')\n    const [designation2, setDesignation2] = useState([''])\n    const [state, setState] = useState('')\n    const [country, setCountry] = useState('')\n    const [selectedCountry, setSelectedCountry] = useState('')\n    const [city, setCity] = useState('')\n    const [state2, setState2] = useState('')\n\t\tconst [showName, setShowName] = useState(false)\n    let countryData = Country.getAllCountries()\n\n    let selectedCountryStates = State.getStatesOfCountry(country)\n    console.log(\"Selected State=\")\n    console.log(selectedCountryStates)\n    console.log(\"State=\")\n    console.log(state)\n\t\tconsole.log(\"State2=\")\n\t\tconsole.log(state2)\n\n    let selectedCity = City.getCitiesOfState(country, state2)\n    console.log(\"Selected City=\")\n    console.log(selectedCity)\n\n\n    let countryMatcher = (iso)=>{\n        let countryCodesMatcher = countryData.filter(item=> item.isoCode == iso)\n        return countryCodesMatcher[0][\"name\"]\n    }\n\n\n    let stateMatcher = (iso)=>{\n        // let stateCodesMatcher = selectedCountryStates.filter(item=>item.name == iso)\n        let stateCodesMatcher = selectedCountryStates.filter(item=>item.isoCode == iso)\n            return stateCodesMatcher[0][\"name\"]\n    }\n\n\tconst Location = useLocation();\n\n\tlet FilterHandler2 = () =>\n\t{\n\n\t\tlet catchedCountry = '';\n        console.log(\"Filter Designation 2=\")\n        console.log(designation2)\n        let catchedState=''\n\n\t\tif (country && country!==\"\")\n        {\n            catchedCountry = countryMatcher(country)\n        }\n\n        if(state && state!==\"\")\n        {\n            catchedState= stateMatcher(state)\n        }\n\n        let EmployeeDetails = props.userData.employee_details\n        let FoundersDetails = props.userData.founders_details\n\n        let filterFinalEmployees =  []\n\n        let filterFinalFounders = []\n\n        const axios = require('axios').default;\n\n\t\ttry\n\t\t{\n\t\t  let id = Location.pathname.split(\"/details/\")[1];\n          let docState = document.getElementById('demo-state').firstChild.nodeValue\n          let docCountry = document.getElementById('demo-Country').firstChild.nodeValue\n\t\t  axios.get(`${ngrokUrl}/api/v1/search`, {\n          headers:\n\t\t\t{\n              'X-USER-TOKEN': localStorage.getItem('token'),\n              \"X-USER-EMAIL\":localStorage.getItem('email')\n            },\n            params:{\n\t\t\t\tid: id,\n                city:city,\n                state: docState,\n\t\t\t\tcountry:docCountry,\n                employee_types:designation2.map(desig=>desig.value)\n            }\n        })\n\n        .then(function (response) {\n        if (response.data.success === false)\n        {\n          // alert(response.data.message)\n          toast.error(response.data.message,  {\n            position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          });\n          // setIsFiltered(false)\n        }\n        else{\n            filterFinalEmployees = response.data.employee_details;\n            filterFinalFounders = response.data.founder_details;\n            localStorage.removeItem('fcity',city);\n            localStorage.removeItem('fstate',state);\n            localStorage.removeItem('fcountry',country);\n            localStorage.removeItem('fdesignation',designation2);\n            localStorage.removeItem('id', id)\n            let docState2 = document.getElementById('demo-state').firstChild.nodeValue\n            let docCountry2 = document.getElementById('demo-Country').firstChild.nodeValue\n            localStorage.setItem('fcity',city);\n            localStorage.setItem('fstate',docState2);\n            localStorage.setItem('fcountry',docCountry2);\n            localStorage.setItem('fdesignation',designation2.map(desig=>desig.value));\n            localStorage.setItem('id', id)\n            props.filteredData(filterFinalFounders,filterFinalEmployees,response.data.pagination,city,state,country,designation2);\n        }\n          // setError(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n        toast.error(error,  {\n          position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        });\n      })\n    }catch (error) {\n      console.error(error);\n      toast.error(error,  {\n        position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      });\n    }\n}\n\n\tlet FilterHandler = ()=>{\n\n\t\tlet catchedCountry = '';\n        console.log(\"Filter Designation 2=\")\n        console.log(designation2)\n        let catchedState=''\n\n\t\tif(country  && country !== \"\")\n\t\t{\n\t\t\tcatchedCountry = countryMatcher(country)\n\t\t}\n\n\t\tif(state && state!==\"\")\n\t\t {\n    \tcatchedState= stateMatcher(state)\n\t\t}\n\n    let EmployeeDetails = props.userData.employee_details\n    let FoundersDetails = props.userData.founders_details\n\n    let filterFinalEmployees =  []\n\n\t\tlet filterFinalFounders =  FoundersDetails.filter(employ=> employ.city.includes(catchedCountry) && employ.city.includes(catchedState) &&employ[\"city\"].includes(city)&&employ.designation.includes(designation) )\n\n    // if(designation !==\"Employees\"){\n\n    //     filterFinalEmployees= EmployeeDetails.filter(employ=> employ.city.includes(catchedCountry) && employ.city.includes(catchedState) &&employ[\"city\"].includes(city)&&employ.designation.includes(designation) )\n\n    // }\n\n    // else\n    // {\n    //     filterFinalEmployees= EmployeeDetails.filter(employ=> employ.city.includes(catchedCountry) && employ.city.includes(catchedState) &&employ[\"city\"].includes(city) )\n    // }\n\n    let ades = []\n\n    if (designation2)\n    {\n        console.log(\"bedore ades = \")\n        console.log(ades)\n\n        designation2.map(designat =>\n            ades.push(EmployeeDetails.filter(employ=> employ.designation.includes(designat.value)))\n            )\n            console.log(\"after ades=\")\n            console.log(ades)\n\n        // filterFinalEmployees= EmployeeDetails.filter(employ=> employ.city.includes(catchedCountry) && employ.city.includes(catchedState) &&employ[\"city\"].includes(city)&&employ.designation.includes(designation2) )\n\n    }\n\n    props.filteredData(filterFinalFounders,filterFinalEmployees)\n    console.log(designation)\n\n}\n\n    const handleDesignation = (event) => {\n        console.log(\"Before Designation2=\")\n        console.log(designation2)\n        // console.log(event)\n        setDesignation2(event)\n        console.log(\"After Designation2=\")\n        console.log(designation2)\n    }\n\n\n    const handleChange = (event) => {\n        console.log(event.target.name, \"harish\")\n        if (event.target.name == \"Company\") {\n            setCompany(event.target.value);\n\n        } else if (event.target.name == \"Designation\") {\n            setDesignation(event.target.value)\n        } else if (event.target.name == \"State\") {\n                setShowName(false)\n            if (event.target.value.name){\n            setState(event.target.value.name)\n            setState2(event.target.value.isoCode)\n            }\n            else if (event.target.value)\n            {\n                setState(event.target.value)\n                setState2(event.target.value)\n            }\n                    setShowName(true)\n            setCity(\"\")\n\n        } else if (event.target.name == \"Country\") {\n            setCountry(event.target.value)\n            setState(\"\")\n            setCity(\"\")\n            setState2(\"\")\n\n        } else if (event.target.name == \"City\") {\n\t\t\t\t\tconsole.log(\"Before City=\")\n\t\t\t\t\tconsole.log(city)\n\t\t\t\t\tsetCity(event.target.value)\n\t\t\t\t\tconsole.log(\"After City=\")\n\t\t\t\t\tconsole.log(city)\n        }\n\n        // else if (event.target.name == \"Designation2\") {\n        //     setDesignation2(event.target.value)\n        // }\n\n    };\n\n\n\n//  let extractedLocations = EmployeeDataLocation.map(employee =>{\n//    let splitLocation =  employee.city.split(\",\")\n\n//      let EmployeeCity = splitLocation[0]\n//      let EmployeeState = splitLocation[1]\n//      let EmployeeCountry = splitLocation[2]\n\n//      console.log(EmployeeCity,EmployeeState)\n\n\n//  })\n\n    //   const handleDesignationChange = (event) => {\n    //     setDesignation(event.target.value);\n    //   };\n\n    //   const handleStateCompanyChange = (event) => {\n    //     setState(event.target.value);\n    //   };\n\n    //   const handlecountryCompanyChange = (event) => {\n    //     setCountry(event.target.value);\n    //   };\n\n\n    //   const firstNameChangeHandler = (event) => {\n    //     setUserFirstName(event.target.value);\n    //   };\n\n    //   const [lastName, setUserLastName] = useState();\n\n    //   const lastNameChangeHandler = (event) => {\n    //     setUserLastName(event.target.value);\n    //   };\n\n    //   const [email, setUserEmail] = useState();\n\n    //   const emailChangeHandler = (event) => {\n    //     setUserEmail(event.target.value);\n    //   };\n\n    //   const [city, setUserCity] = useState();\n\n    //   const cityChangeHandler = (event) => {\n    //     setUserCity(event.target.value);\n    //   };\n\n    //   const [designation, setUserDesignation] = useState();\n\n    //   const designationChangeHandler = (event) => {\n    //     setUserDesignation(event.target.value);\n    //   };\n\n\n    const options = [\n        { value: 'Human Resource', label: 'HR' },\n        { value: 'Chief Executive Officer', label: 'CEO' },\n        { value: 'Chief Technology Officer', label: 'CTO' },\n        { value: 'Chief Operating Officer', label: 'COO' },\n        { value: 'Employees', label: 'Employees' },\n\t\t\t\t{ value: 'Founder', label: 'Founder' }\n      ]\n\n\t\treturn (<>\n\n        <Grid container spacing={2}>\n\n            <Grid item xs={6}>\n                <Item>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"Country\">Country</InputLabel>\n                        <Select\n                            labelId=\"Country\"\n                            id=\"demo-Country\"\n                            value={country}\n                            label=\"country\"\n                            name=\"Country\"\n                            onChange={handleChange}\n                        >\n                            <MenuItem value={\"\"} > Select</MenuItem>\n                            {countryData.map(count => {\n                                // console.log(count.isoCode)\n                                return   <MenuItem value={count.isoCode}>{count.name}</MenuItem>\n                            })}\n\n                        </Select>\n\n                    </FormControl>\n                </Item>\n            </Grid>\n\n            <Grid item xs={6} >\n                <Item>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"State\">State</InputLabel>\n                        <Select\n                            labelId=\"State\"\n                            id=\"demo-state\"\n                            value={state}\n                            label=\"state\"\n                            name=\"State\"\n                            onChange={handleChange}\n                        >\n                        <MenuItem value={\"\"}  > Select</MenuItem>\n\n                        {selectedCountryStates.map(IndivState => {\n                        // console.log(IndivState.isoCode)\n\n                        // return <MenuItem value={ showName ? IndivState.name : IndivState}>{IndivState.name}</MenuItem>\n                        return <MenuItem value={ IndivState.isoCode}>{IndivState.name}</MenuItem>\n\n                        })}\n\n                        </Select>\n                    </FormControl>\n                </Item>\n            </Grid>\n\n            <Grid item xs={6}>\n                <Item>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"City\" >City</InputLabel>\n\n                        <Select\n                            labelId=\"City\"\n                            id=\"demo-City\"\n                            value={city}\n                            label=\"City\"\n                            name=\"City\"\n                            onChange={handleChange}\n                        >\n\n                            <MenuItem value={\"\"} >Select</MenuItem>\n\n                            {selectedCity.map(cities => {\n                                return <MenuItem value={cities.name}>{cities.name}</MenuItem>\n                            })}\n\n                        </Select>\n                    </FormControl>\n                </Item>\n            </Grid>\n\n\t\t\t<Grid item xs={6} >\n\n\t\t\t\t<Item >\n\t\t\t\t\t<FormControl  fullWidth >\n\t\t\t\t\t\t<Select2 name=\"Designation2\" placeholder = \"Designation\" styles={customStyles}\n\t\t\t\t\t\t\t\tcloseMenuOnSelect={false}  classNamePrefix=\"select\"\n\t\t\t\t\t\t\t\t// components={animatedComponents}\n\t\t\t\t\t\t\t\tisMulti\n\t\t\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\t\t\tonChange={handleDesignation}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FormControl>\n\t\t\t\t</Item>\n\n\t\t\t</Grid>\n\n\t\t\t</Grid>\n\n\t\t\t<Grid item mt={2} container spacing={0} direction=\"column\" alignItems=\"center\" justifyContent=\"center\" >\n\n\t\t\t\t<Button variant=\"contained\" onClick={FilterHandler2 } style={{ width: '240px' }}>Filter</Button>\n\n\t\t\t</Grid>\n\n\t\t    <Grid item xs={6} mt={2} spacing={0} direction=\"column\" alignItems=\"center\" justifyContent=\"center\"><Csv/></Grid>\n\n\t\t\t\t\t<ToastContainer position=\"top-right\"\n\t\t\t\t\t\t\tautoClose={5000}\n\t\t\t\t\t\t\thideProgressBar={false}\n\t\t\t\t\t\t\tnewestOnTop={false}\n\t\t\t\t\t\t\tcloseOnClick\n\t\t\t\t\t\t\trtl={false}\n\t\t\t\t\t\t\tpauseOnFocusLoss\n\t\t\t\t\t\t\tdraggable\n\t\t\t\t\t\t\tpauseOnHover />\n\n\t\t\t</>\n    )\n}","/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/ScrappedData/ExportCsv.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":78,"column":11,"nodeType":"127","messageId":"128","endLine":78,"endColumn":24},{"ruleId":"125","severity":1,"message":"129","line":40,"column":10,"nodeType":"127","messageId":"128","endLine":40,"endColumn":22},{"ruleId":"125","severity":1,"message":"130","line":41,"column":10,"nodeType":"127","messageId":"128","endLine":41,"endColumn":15},{"ruleId":"125","severity":1,"message":"131","line":42,"column":10,"nodeType":"127","messageId":"128","endLine":42,"endColumn":17},{"ruleId":"125","severity":1,"message":"132","line":43,"column":10,"nodeType":"127","messageId":"128","endLine":43,"endColumn":14},{"ruleId":"125","severity":1,"message":"133","line":4,"column":27,"nodeType":"127","messageId":"128","endLine":4,"endColumn":36},{"ruleId":"125","severity":1,"message":"134","line":9,"column":8,"nodeType":"127","messageId":"128","endLine":9,"endColumn":21},{"ruleId":"125","severity":1,"message":"135","line":13,"column":10,"nodeType":"127","messageId":"128","endLine":13,"endColumn":19},{"ruleId":"125","severity":1,"message":"136","line":13,"column":21,"nodeType":"127","messageId":"128","endLine":13,"endColumn":35},{"ruleId":"125","severity":1,"message":"137","line":13,"column":37,"nodeType":"127","messageId":"128","endLine":13,"endColumn":47},{"ruleId":"125","severity":1,"message":"138","line":14,"column":8,"nodeType":"127","messageId":"128","endLine":14,"endColumn":18},{"ruleId":"125","severity":1,"message":"139","line":16,"column":8,"nodeType":"127","messageId":"128","endLine":16,"endColumn":21},{"ruleId":"125","severity":1,"message":"140","line":58,"column":9,"nodeType":"127","messageId":"128","endLine":58,"endColumn":20},{"ruleId":"125","severity":1,"message":"141","line":115,"column":15,"nodeType":"127","messageId":"128","endLine":115,"endColumn":29},{"ruleId":"142","severity":1,"message":"143","line":278,"column":9,"nodeType":"144","endLine":278,"endColumn":11,"suggestions":"145"},{"ruleId":"125","severity":1,"message":"146","line":562,"column":11,"nodeType":"127","messageId":"128","endLine":562,"endColumn":23},{"ruleId":"147","severity":1,"message":"148","line":613,"column":100,"nodeType":"149","messageId":"150","endLine":613,"endColumn":108},{"ruleId":"125","severity":1,"message":"151","line":1,"column":8,"nodeType":"127","messageId":"128","endLine":1,"endColumn":18},{"ruleId":"125","severity":1,"message":"152","line":21,"column":8,"nodeType":"127","messageId":"128","endLine":21,"endColumn":15},{"ruleId":"125","severity":1,"message":"153","line":24,"column":7,"nodeType":"127","messageId":"128","endLine":24,"endColumn":25},{"ruleId":"125","severity":1,"message":"154","line":26,"column":5,"nodeType":"127","messageId":"128","endLine":26,"endColumn":17},{"ruleId":"125","severity":1,"message":"155","line":27,"column":7,"nodeType":"127","messageId":"128","endLine":27,"endColumn":13},{"ruleId":"125","severity":1,"message":"156","line":50,"column":7,"nodeType":"127","messageId":"128","endLine":50,"endColumn":24},{"ruleId":"125","severity":1,"message":"157","line":70,"column":7,"nodeType":"127","messageId":"128","endLine":70,"endColumn":22},{"ruleId":"125","severity":1,"message":"158","line":91,"column":12,"nodeType":"127","messageId":"128","endLine":91,"endColumn":19},{"ruleId":"125","severity":1,"message":"159","line":96,"column":12,"nodeType":"127","messageId":"128","endLine":96,"endColumn":27},{"ruleId":"125","severity":1,"message":"160","line":96,"column":29,"nodeType":"127","messageId":"128","endLine":96,"endColumn":47},{"ruleId":"125","severity":1,"message":"161","line":99,"column":10,"nodeType":"127","messageId":"128","endLine":99,"endColumn":18},{"ruleId":"162","severity":1,"message":"163","line":116,"column":74,"nodeType":"164","messageId":"165","endLine":116,"endColumn":76},{"ruleId":"162","severity":1,"message":"163","line":123,"column":81,"nodeType":"164","messageId":"165","endLine":123,"endColumn":83},{"ruleId":"125","severity":1,"message":"166","line":139,"column":13,"nodeType":"127","messageId":"128","endLine":139,"endColumn":27},{"ruleId":"125","severity":1,"message":"167","line":144,"column":13,"nodeType":"127","messageId":"128","endLine":144,"endColumn":25},{"ruleId":"125","severity":1,"message":"168","line":147,"column":13,"nodeType":"127","messageId":"128","endLine":147,"endColumn":28},{"ruleId":"125","severity":1,"message":"169","line":148,"column":13,"nodeType":"127","messageId":"128","endLine":148,"endColumn":28},{"ruleId":"125","severity":1,"message":"170","line":236,"column":6,"nodeType":"127","messageId":"128","endLine":236,"endColumn":19},{"ruleId":"162","severity":1,"message":"163","line":305,"column":31,"nodeType":"164","messageId":"165","endLine":305,"endColumn":33},{"ruleId":"162","severity":1,"message":"163","line":308,"column":38,"nodeType":"164","messageId":"165","endLine":308,"endColumn":40},{"ruleId":"162","severity":1,"message":"163","line":310,"column":38,"nodeType":"164","messageId":"165","endLine":310,"endColumn":40},{"ruleId":"162","severity":1,"message":"163","line":324,"column":38,"nodeType":"164","messageId":"165","endLine":324,"endColumn":40},{"ruleId":"162","severity":1,"message":"163","line":330,"column":38,"nodeType":"164","messageId":"165","endLine":330,"endColumn":40},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'remainingTime' is assigned a value but never used.","Identifier","unusedVar","'designation2' is assigned a value but never used.","'state' is assigned a value but never used.","'country' is assigned a value but never used.","'city' is assigned a value but never used.","'useEffect' is defined but never used.","'PasswordField' is defined but never used.","'TextField' is defined but never used.","'InputAdornment' is defined but never used.","'IconButton' is defined but never used.","'Visibility' is defined but never used.","'VisibilityOff' is defined but never used.","'handleClick' is assigned a value but never used.","'expirationTime' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useMemo has missing dependencies: 'destroyCompanyDetail', 'fetchCompanyDetail', 'resyncCompanyDetail', and 'resyncing'. Either include them or remove the dependency array.","ArrayExpression",["173"],"'post_options' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'SearchIcon' is defined but never used.","'classes' is defined but never used.","'animatedComponents' is assigned a value but never used.","'company_name' is assigned a value but never used.","'Search' is assigned a value but never used.","'SearchIconWrapper' is assigned a value but never used.","'StyledInputBase' is assigned a value but never used.","'company' is assigned a value but never used.","'selectedCountry' is assigned a value but never used.","'setSelectedCountry' is assigned a value but never used.","'showName' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'catchedCountry' is assigned a value but never used.","'catchedState' is assigned a value but never used.","'EmployeeDetails' is assigned a value but never used.","'FoundersDetails' is assigned a value but never used.","'FilterHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},"Update the dependencies array to be: [destroyCompanyDetail, fetchCompanyDetail, resyncCompanyDetail, resyncing]",{"range":"176","text":"177"},[8872,8874],"[destroyCompanyDetail, fetchCompanyDetail, resyncCompanyDetail, resyncing]"]