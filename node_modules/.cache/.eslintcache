[{"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\index.js":"1","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\App.js":"2","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\store\\auth-context.js":"3","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\pages\\AuthPage.js":"4","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\pages\\HomePage.js":"5","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Profile\\UserProfile.js":"6","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\Details.js":"7","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\EmployeeData.js":"8","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Layout\\Layout.js":"9","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\AddData.js":"10","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\store\\HostUrl.js":"11","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Profile\\ProfileForm.js":"12","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\DropDownFilter.js":"13","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Layout\\MainNavigation.js":"14","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Auth\\AuthForm.js":"15","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\StartingPage\\StartingPageContent.js":"16","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\UI\\Card.js":"17"},{"size":367,"mtime":1636971952228,"results":"18","hashOfConfig":"19"},{"size":1235,"mtime":1637064348468,"results":"20","hashOfConfig":"19"},{"size":2394,"mtime":1636971952285,"results":"21","hashOfConfig":"19"},{"size":137,"mtime":1636971952233,"results":"22","hashOfConfig":"19"},{"size":178,"mtime":1636971952234,"results":"23","hashOfConfig":"19"},{"size":257,"mtime":1636971952116,"results":"24","hashOfConfig":"19"},{"size":197,"mtime":1636993274627,"results":"25","hashOfConfig":"19"},{"size":8532,"mtime":1637173752024,"results":"26","hashOfConfig":"19"},{"size":260,"mtime":1636971952095,"results":"27","hashOfConfig":"19"},{"size":15310,"mtime":1637157303864,"results":"28","hashOfConfig":"19"},{"size":112,"mtime":1637156909512,"results":"29","hashOfConfig":"19"},{"size":2112,"mtime":1637157266410,"results":"30","hashOfConfig":"19"},{"size":11179,"mtime":1637208369989,"results":"31","hashOfConfig":"19"},{"size":2236,"mtime":1636971952109,"results":"32","hashOfConfig":"19"},{"size":4854,"mtime":1637157239353,"results":"33","hashOfConfig":"19"},{"size":242,"mtime":1636971952210,"results":"34","hashOfConfig":"19"},{"size":158,"mtime":1636971952215,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"hw9xiw",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\index.js",[],["72","73"],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\App.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\store\\auth-context.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\pages\\AuthPage.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\pages\\HomePage.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Profile\\UserProfile.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\Details.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\EmployeeData.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Layout\\Layout.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\AddData.js",["74"],"\r\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// import { useEffect, useCallback } from 'react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Input from '@mui/material/Input';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport TextField from '@mui/material/TextField';\r\nimport { ngrokUrl } from '../../store/HostUrl';\r\n\r\n\r\n\r\n\r\nconst ariaLabel = { 'aria-label': 'description' };\r\n\r\n\r\n// Define a default UI for filtering\r\nfunction GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n}) {\r\n    const count = preGlobalFilteredRows.length\r\n    const [value, setValue] = React.useState(globalFilter)\r\n    const onChange = useAsyncDebounce(value => {\r\n        setGlobalFilter(value || undefined)\r\n    }, 200)\r\n\r\n    return (\r\n        <span style={{marginLeft:\"13px\"}}>\r\n            Search:{' '}\r\n            <input\r\n            style={{width:\"17%\", marginLeft:\"12px\"}}\r\n                className=\"form-control\"\r\n                value={value || \"\"}\r\n                onChange={e => {\r\n                    setValue(e.target.value);\r\n                    onChange(e.target.value);\r\n                }}\r\n                placeholder={`${count} records...`}\r\n            />\r\n        </span>\r\n    )\r\n}\r\n\r\nfunction DefaultColumnFilter({\r\n    column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n    const count = preFilteredRows.length\r\n\r\n    return (\r\n        <input\r\n            className=\"form-control\"\r\n            value={filterValue || ''}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined)\r\n            }}\r\n            placeholder={`Search ${count} records...`}\r\n        />\r\n    )\r\n}\r\n\r\nfunction Table({ columns, data }) {\r\n\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    )\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        state,\r\n        preGlobalFilteredRows,\r\n        setGlobalFilter,\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n            defaultColumn,\r\n        },\r\n        useFilters,\r\n        useGlobalFilter\r\n    )\r\n\r\n    return (\r\n        <div style={{marginTop:\"67px\"}}>\r\n            <GlobalFilter\r\n                preGlobalFilteredRows={preGlobalFilteredRows}\r\n                globalFilter={state.globalFilter}\r\n                setGlobalFilter={setGlobalFilter}\r\n            />\r\n            <table style={{marginTop:\"19px\"}} className=\"table\" {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                                <th {...column.getHeaderProps()}>\r\n                                    {column.render('Header')}\r\n                                    {/* Render the columns filter UI */}\r\n                                    <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {rows.map((row, i) => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map(cell => {\r\n                                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                })}\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            <br />\r\n          </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction FilterTableComponent() {\r\n    const columns = React.useMemo(\r\n        () => [\r\n                    {\r\n                        Header: 'Name',\r\n                        accessor: 'name',\r\n                    },\r\n                    {\r\n                        Header: 'Type',\r\n                        accessor: 'company_type'\r\n                    },\r\n                   {\r\n                        Header: 'Url',\r\n                        accessor: 'url'\r\n                    },\r\n                    {\r\n                        Header: 'Foundation Year',\r\n                        accessor: 'foundation_year'\r\n                    },\r\n                    {\r\n                        filterable: false,\r\n                        Header: 'Details',\r\n                        accessor: 'link',\r\n                        disableFilters:true,\r\n                        Cell: ({ row }) =>\r\n                        <Button variant='outlined'\r\n                        style={{width:\"146px\"}}\r\n                        type='submit' sx = {{mt:20}}\r\n                        name= {row.original.id} onClick={ () => fetchCompanyDetail(row.original.id)}\r\n                      > Fetch Details</Button>\r\n                    },\r\n\r\n                    {\r\n                      filterable: false,\r\n                      disableFilters:true,\r\n                      Header: 'Sync',\r\n                      accessor: 'link2',\r\n                      Cell: ({ row }) =>\r\n                      <Button variant='outlined'\r\n                        type='submit' sx = {{mt:20}}\r\n                        // disabled = {resyncing}\r\n                        name= {row.original.id} onClick={ () => resyncCompanyDetail(row.original.id)}\r\n                      >\r\n                        {/* {resyncing ? \"Resyncing\" : \"Resync\"} */}\r\n                        Resync\r\n                        </Button>\r\n                  },\r\n                  {\r\n                    filterable: false,\r\n                    disableFilters:true,\r\n                    Header: 'Delete',\r\n                    accessor: 'link3',\r\n                    Cell: ({ row }) =>\r\n                    <Button variant='outlined'\r\n                    type='submit' sx = {{mt:20}}\r\n                    name= {row.original.id} onClick={ () => destroyCompanyDetail(row.original.id)}\r\n                  > Destroy</Button>\r\n                },\r\n        ],\r\n        []\r\n    )\r\n\r\n    // const [isFetched, setIsFetched] = useState(false);\r\n    const [url, setUrl] = useState('');\r\n    const [userData, setUserData] = useState([]);\r\n    const [name, setName] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [count, setCount] = useState(0);\r\n\r\n    const [value, setValue] = useState(new Date());\r\n\r\n    const destroyCompanyDetail = (id) => {\r\n      const axios = require('axios').default;\r\n\r\n      axios.delete(`${ngrokUrl}/api/v1/companies/${id}`, {\r\n        headers:{\r\n          'X-USER-TOKEN': localStorage.getItem('token'),\r\n          \"X-USER-EMAIL\":localStorage.getItem('email')\r\n        },\r\n      }).then(function(response){\r\n        if (response.data.success === true){\r\n          setCount(count+1);\r\n          toast.success(\"Delete Sucess\",{\r\n            position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          })\r\n          // const axios = require('axios').default;\r\n          axios.get(`${ngrokUrl}/api/v1/companies`, {\r\n            headers:{\r\n              'X-USER-TOKEN': localStorage.getItem('token'),\r\n              \"X-USER-EMAIL\":localStorage.getItem('email')\r\n            }\r\n          }).then(function(response){\r\n            if (response.data.success === true){\r\n              setUserData(response.data.companies);\r\n            }\r\n            else{\r\n          toast.error(response.data.message,  {\r\n            position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          });\r\n            }\r\n          })\r\n        }\r\n        else{\r\n      toast.error(response.data.message,  {\r\n        position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      });\r\n        }\r\n      })\r\n    }\r\n\r\n    useEffect(() => {\r\n      const axios = require('axios').default;\r\n      axios.get(`${ngrokUrl}/api/v1/companies`, {\r\n        headers:{\r\n          'X-USER-TOKEN': localStorage.getItem('token'),\r\n          \"X-USER-EMAIL\":localStorage.getItem('email')\r\n        }\r\n      }).then(function(response){\r\n        if (response.data.success === true){\r\n          setUserData(response.data.companies);\r\n        }\r\n        else{\r\n      toast.error(response.data.message,  {\r\n        position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      });\r\n        }\r\n      })\r\n  },[count]);\r\n\r\n\r\n    const switchDetailModeHandler = (event) => {\r\n      // let sent_url;\r\n      event.preventDefault();\r\n      const axios = require('axios').default;\r\n\r\n        const headers = {\r\n          'X-USER-TOKEN': localStorage.getItem('token'),\r\n          \"X-USER-EMAIL\":localStorage.getItem('email')\r\n        }\r\n\r\n        const data = {\r\n          name:name,\r\n          company_type:type,\r\n          url:url,\r\n          foundation_year:value\r\n        }\r\n\r\n        axios.post(`${ngrokUrl}/api/v1/companies`,data, {\r\n            headers: headers\r\n          }).then(response => {\r\n          // setIsLoading(false);\r\n          console.log(\"String\");\r\n          console.log(response);\r\n          if (response.data.success === false)\r\n          {\r\n            toast.error(response.data.message,  {\r\n              position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            });\r\n          //   setFilterCall(false);\r\n          //   // alert(response.data.message)\r\n          }\r\n          else{\r\n            axios.get(`${ngrokUrl}/api/v1/companies`, {\r\n              headers: headers\r\n            }\r\n            )\r\n            .then(function(response){\r\n              if (response.data.success === true){\r\n                setUserData(response.data.companies);\r\n              }\r\n            })\r\n\r\n          // userData.push(response.data.company)\r\n          // setIsFetched(true);\r\n          // setFilterCall(false);\r\n          // setIsFiltered(false);\r\n          // setShowDetails(true);\r\n        }\r\n          // setError(false);\r\n        }).catch(function (error) {\r\n          console.log(error);\r\n          toast.error(\"Something Went Wrong\",  {\r\n            position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          })\r\n        })\r\n\r\n\r\n    };\r\n\r\n    const history = useHistory();\r\n    const fetchCompanyDetail =(id) =>{\r\n      console.log(id)\r\n      history.push(`/details/${id}`)\r\n    }\r\n    const resyncCompanyDetail = (id) => {\r\n      const axios = require('axios').default;\r\n\r\n      // setResyncing(true);\r\n\r\n      axios.get(`${ngrokUrl}/api/v1/resync?company_id=${id}`, {\r\n        headers:{\r\n          'X-USER-TOKEN': localStorage.getItem('token'),\r\n          \"X-USER-EMAIL\":localStorage.getItem('email')\r\n        },\r\n      }).then(function(response){\r\n        if (response.data.success === true){\r\n          // setResyncing(false);\r\n          toast.success(\"Resync Sucess\",{\r\n            position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          })\r\n        }\r\n        else{\r\n          // setResyncing(false);\r\n      toast.error(response.data.message,  {\r\n        position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      });\r\n        }\r\n      })\r\n    }\r\n\r\n    return (\r\n      <section>\r\n      <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n\r\n          <form alignItems=\"center\" onSubmit={switchDetailModeHandler} >\r\n            <div >\r\n              <Input placeholder=\"Name\" inputProps={ariaLabel} onChange={e => setName(e.target.value)} required style={{width:\"500px\"}}  />\r\n            </div>\r\n            <div >\r\n              <Input placeholder=\"Url\" inputProps={ariaLabel} required onChange={e => setUrl(e.target.value)}   style={{width:\"500px\", marginTop:\"10px\"}}  />\r\n            </div>\r\n            <div >\r\n              <Input placeholder=\"Type\" inputProps={ariaLabel} required onChange={e => setType(e.target.value)}  style={{width:\"500px\", marginTop:\"10px\"}}  />\r\n            </div>\r\n\r\n          <div style = {{marginLeft:\"-17px\"}}>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n              <Box m={2} >\r\n                <DatePicker\r\n                  inputFormat=\"yyyy\"\r\n                  views={['year']}\r\n                  label=\"Foundation Year\"\r\n                  minDate={new Date('1900-03-01')}\r\n                  maxDate={new Date('2023-06-01')}\r\n                  value={value}\r\n                  onChange={setValue}\r\n\r\n                  renderInput={(params) => <TextField style={{width:\"500px\"}} {...params} helperText={null} />}\r\n                />\r\n              </Box>\r\n            </LocalizationProvider>\r\n          </div>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid item>\r\n                <Box pt={2}>\r\n                  <Button variant='outlined'\r\n                      type='submit' sx = {{mt:20}} style = {{width:'217px', position:'absolute', left:'42%'}}\r\n                      name=\"Fetch\"\r\n                    >\r\n                      {/* {showDetails ? 'Hide Details' : 'Fetch Detais'} */}\r\n                      Add\r\n                    </Button>\r\n                </Box>\r\n              </Grid>\r\n\r\n            </Grid>\r\n          </form>\r\n          </Grid>\r\n          <ToastContainer position=\"top-right\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover/>\r\n        {< Table columns={columns} data={userData} />}\r\n      </section>\r\n    )\r\n}\r\n\r\nexport default FilterTableComponent;","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\store\\HostUrl.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Profile\\ProfileForm.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\DropDownFilter.js",["75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91"],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Layout\\MainNavigation.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Auth\\AuthForm.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\StartingPage\\StartingPageContent.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\UI\\Card.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":200,"column":9,"nodeType":"98","endLine":200,"endColumn":11,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":18},{"ruleId":"100","severity":1,"message":"104","line":10,"column":26,"nodeType":"102","messageId":"103","endLine":10,"endColumn":31},{"ruleId":"100","severity":1,"message":"105","line":16,"column":5,"nodeType":"102","messageId":"103","endLine":16,"endColumn":17},{"ruleId":"100","severity":1,"message":"106","line":17,"column":7,"nodeType":"102","messageId":"103","endLine":17,"endColumn":13},{"ruleId":"100","severity":1,"message":"107","line":40,"column":7,"nodeType":"102","messageId":"103","endLine":40,"endColumn":24},{"ruleId":"100","severity":1,"message":"108","line":51,"column":7,"nodeType":"102","messageId":"103","endLine":51,"endColumn":22},{"ruleId":"100","severity":1,"message":"109","line":72,"column":12,"nodeType":"102","messageId":"103","endLine":72,"endColumn":19},{"ruleId":"100","severity":1,"message":"110","line":76,"column":12,"nodeType":"102","messageId":"103","endLine":76,"endColumn":27},{"ruleId":"100","severity":1,"message":"111","line":76,"column":29,"nodeType":"102","messageId":"103","endLine":76,"endColumn":47},{"ruleId":"112","severity":1,"message":"113","line":90,"column":70,"nodeType":"114","messageId":"115","endLine":90,"endColumn":72},{"ruleId":"112","severity":1,"message":"113","line":97,"column":77,"nodeType":"114","messageId":"115","endLine":97,"endColumn":79},{"ruleId":"112","severity":1,"message":"113","line":118,"column":19,"nodeType":"114","messageId":"115","endLine":118,"endColumn":21},{"ruleId":"112","severity":1,"message":"113","line":136,"column":31,"nodeType":"114","messageId":"115","endLine":136,"endColumn":33},{"ruleId":"112","severity":1,"message":"113","line":139,"column":38,"nodeType":"114","messageId":"115","endLine":139,"endColumn":40},{"ruleId":"112","severity":1,"message":"113","line":141,"column":38,"nodeType":"114","messageId":"115","endLine":141,"endColumn":40},{"ruleId":"112","severity":1,"message":"113","line":143,"column":38,"nodeType":"114","messageId":"115","endLine":143,"endColumn":40},{"ruleId":"112","severity":1,"message":"113","line":145,"column":38,"nodeType":"114","messageId":"115","endLine":145,"endColumn":40},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"react-hooks/exhaustive-deps","React Hook React.useMemo has missing dependencies: 'destroyCompanyDetail' and 'fetchCompanyDetail'. Either include them or remove the dependency array.","ArrayExpression",["118"],"no-unused-vars","'SearchIcon' is defined but never used.","Identifier","unusedVar","'toast' is defined but never used.","'company_name' is assigned a value but never used.","'Search' is assigned a value but never used.","'SearchIconWrapper' is assigned a value but never used.","'StyledInputBase' is assigned a value but never used.","'company' is assigned a value but never used.","'selectedCountry' is assigned a value but never used.","'setSelectedCountry' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [destroyCompanyDetail, fetchCompanyDetail]",{"range":"121","text":"122"},[6807,6809],"[destroyCompanyDetail, fetchCompanyDetail]"]