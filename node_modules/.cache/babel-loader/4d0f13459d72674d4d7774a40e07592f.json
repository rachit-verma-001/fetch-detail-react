{"ast":null,"code":"var _jsxFileName = \"E:\\\\WebScrapper1\\\\src\\\\components\\\\ScrappedData\\\\DropDownFilter.js\",\n    _s = $RefreshSig$();\n\nimport SearchIcon from '@mui/icons-material/Search';\nimport { useState } from 'react';\nimport InputBase from '@mui/material/InputBase';\nimport { styled, alpha } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport { FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Country, State, City } from 'country-state-city'; // import { company_name } from './AddData';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet company_name = \"\";\nconst Search = styled('div')(({\n  theme\n}) => ({\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.common.white, 0.25)\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: '100%',\n  [theme.breakpoints.up('sm')]: {\n    marginLeft: theme.spacing(3),\n    width: 'auto'\n  }\n}));\nconst Item = styled(Paper)(({\n  theme\n}) => ({ ...theme.typography.body2,\n  padding: theme.spacing(0),\n  color: theme.palette.text.secondary\n}));\nconst SearchIconWrapper = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 2),\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center'\n}));\nconst StyledInputBase = styled(InputBase)(({\n  theme\n}) => ({\n  color: 'inherit',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '12ch'\n    }\n  }\n}));\nexport let dataFiltered = null;\nexport default function DropDownFilter(props) {\n  _s();\n\n  //   const [firstName, setUserFirstName] = useState();\n  //   const[filteredCompany, setFilteredCompany] = useState();\n  //   const[filterCall, setFilterCall] = useState(false);\n  const [company, setCompany] = useState('');\n  const [designation, setDesignation] = useState('');\n  const [state, setState] = useState('');\n  const [country, setCountry] = useState('');\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [city, setCity] = useState('');\n  let countryData = Country.getAllCountries();\n  let selectedCountryStates = State.getStatesOfCountry(country);\n  let selectedCity = City.getCitiesOfState(country, state);\n  console.log(selectedCity);\n\n  let countryMatcher = iso => {\n    let countryCodesMatcher = countryData.filter(item => item.isoCode == iso);\n    return countryCodesMatcher[0][\"name\"];\n  };\n\n  let stateMatcher = iso => {\n    let stateCodesMatcher = selectedCountryStates.filter(item => item.isoCode == iso);\n    return stateCodesMatcher[0][\"name\"];\n  };\n\n  let FilterHandler = () => {\n    let catchedCountry = '';\n    let catchedState = '';\n\n    if (country && country !== \"\") {\n      catchedCountry = countryMatcher(country);\n    }\n\n    if (state && state !== \"\") {\n      catchedState = stateMatcher(state);\n    }\n\n    let EmployeeDetails = props.userData.employee_details;\n    let FoundersDetails = props.userData.founders_details;\n    let filterFinalEmployees = [];\n    let filterFinalFounders = FoundersDetails.filter(employ => employ.city.includes(catchedCountry) && employ.city.includes(catchedState) && employ[\"city\"].includes(city) && employ.designation.includes(designation));\n\n    if (designation == \"Human Resources\") {\n      filterFinalEmployees = EmployeeDetails.filter(employ => employ.city.includes(catchedCountry) && employ.city.includes(catchedState) && employ[\"city\"].includes(city) && employ.designation.includes(designation));\n    } else {\n      filterFinalEmployees = EmployeeDetails.filter(employ => employ.city.includes(catchedCountry) && employ.city.includes(catchedState) && employ[\"city\"].includes(city));\n    }\n\n    props.filteredData(filterFinalFounders, filterFinalEmployees);\n    console.log(designation);\n  };\n\n  const handleChange = event => {\n    console.log(event.target.name, \"harish\");\n\n    if (event.target.name == \"Company\") {\n      setCompany(event.target.value);\n    } else if (event.target.name == \"Designation\") {\n      setDesignation(event.target.value);\n    } else if (event.target.name == \"State\") {\n      setState(event.target.value);\n      setCity(\"\");\n    } else if (event.target.name == \"Country\") {\n      setCountry(event.target.value);\n      setState(\"\");\n      setCity(\"\");\n    } else if (event.target.name == \"City\") {\n      setCity(event.target.value);\n    }\n  }; //  let extractedLocations = EmployeeDataLocation.map(employee =>{\n  //    let splitLocation =  employee.city.split(\",\")\n  //      let EmployeeCity = splitLocation[0]\n  //      let EmployeeState = splitLocation[1]\n  //      let EmployeeCountry = splitLocation[2]\n  //      console.log(EmployeeCity,EmployeeState)\n  //  })\n  //   const handleDesignationChange = (event) => {\n  //     setDesignation(event.target.value);\n  //   };\n  //   const handleStateCompanyChange = (event) => {\n  //     setState(event.target.value);\n  //   };\n  //   const handlecountryCompanyChange = (event) => {\n  //     setCountry(event.target.value);\n  //   };\n  //   const firstNameChangeHandler = (event) => {\n  //     setUserFirstName(event.target.value);\n  //   };\n  //   const [lastName, setUserLastName] = useState();\n  //   const lastNameChangeHandler = (event) => {\n  //     setUserLastName(event.target.value);\n  //   };\n  //   const [email, setUserEmail] = useState();\n  //   const emailChangeHandler = (event) => {\n  //     setUserEmail(event.target.value);\n  //   };\n  //   const [city, setUserCity] = useState();\n  //   const cityChangeHandler = (event) => {\n  //     setUserCity(event.target.value);\n  //   };\n  //   const [designation, setUserDesignation] = useState();\n  //   const designationChangeHandler = (event) => {\n  //     setUserDesignation(event.target.value);\n  //   };\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"Country\",\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"Country\",\n              id: \"demo-Country\",\n              value: country,\n              label: \"country\",\n              name: \"Country\",\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \" Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 29\n              }, this), countryData.map(count => {\n                // console.log(count.isoCode)\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: count.isoCode,\n                  children: count.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 42\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"State\",\n              children: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"State\",\n              id: \"demo-state\",\n              value: state,\n              label: \"state\",\n              name: \"State\",\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \" Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 30\n              }, this), selectedCountryStates.map(IndivState => {\n                // console.log(IndivState.isoCode)\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: IndivState.isoCode,\n                  children: IndivState.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 40\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"City\",\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"City\",\n              id: \"demo-City\",\n              value: city,\n              label: \"City\",\n              name: \"City\",\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \" Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 29\n              }, this), selectedCity.map(cities => {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: cities.name,\n                  children: cities.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 48\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"Designation\",\n              children: \"Designation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"Designation\",\n              id: \"demo-designation\",\n              value: designation,\n              label: \"Designation\",\n              name: \"Designation\",\n              onChange: handleChange,\n              placeHolder: \"Select\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \" Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Chief Executive Officer\",\n                children: \"CEO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Founder \",\n                children: \"Founder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"CTO\",\n                children: \"CTO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"COO\",\n                children: \"COO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"CXO\",\n                children: \"CXO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Employees\",\n                children: \"Employees\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Human Resources\",\n                children: \"Human Resources\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      mt: 2,\n      container: true,\n      spacing: 0,\n      direction: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: FilterHandler,\n        style: {\n          width: '240px'\n        },\n        children: \"Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      pauseOnHover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DropDownFilter, \"Mve7Uo8MnZ5mdMayxUwL/EJ1PeM=\");\n\n_c = DropDownFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropDownFilter\");","map":{"version":3,"sources":["E:/WebScrapper1/src/components/ScrappedData/DropDownFilter.js"],"names":["SearchIcon","useState","InputBase","styled","alpha","Grid","Paper","Button","FormControl","InputLabel","Select","MenuItem","ToastContainer","toast","Country","State","City","company_name","Search","theme","position","borderRadius","shape","backgroundColor","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","Item","typography","body2","padding","color","text","secondary","SearchIconWrapper","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","paddingLeft","transition","transitions","create","dataFiltered","DropDownFilter","props","company","setCompany","designation","setDesignation","state","setState","country","setCountry","selectedCountry","setSelectedCountry","city","setCity","countryData","getAllCountries","selectedCountryStates","getStatesOfCountry","selectedCity","getCitiesOfState","console","log","countryMatcher","iso","countryCodesMatcher","filter","item","isoCode","stateMatcher","stateCodesMatcher","FilterHandler","catchedCountry","catchedState","EmployeeDetails","userData","employee_details","FoundersDetails","founders_details","filterFinalEmployees","filterFinalFounders","employ","includes","filteredData","handleChange","event","target","name","value","map","count","IndivState","cities"],"mappings":"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","sourcesContent":["import SearchIcon from '@mui/icons-material/Search';\r\nimport { useState } from 'react';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport { FormControl, InputLabel, Select, MenuItem } from '@mui/material';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Country, State, City } from 'country-state-city';\r\n\r\n\r\n// import { company_name } from './AddData';\r\nlet company_name = \"\"\r\nconst Search = styled('div')(({ theme }) => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n    },\r\n}));\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(0),\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n}));\r\n\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: 'inherit',\r\n    '& .MuiInputBase-input': {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '12ch',\r\n        },\r\n    },\r\n}));\r\n\r\nexport let dataFiltered = null;\r\n\r\nexport default function DropDownFilter(props) {\r\n\r\n    //   const [firstName, setUserFirstName] = useState();\r\n    //   const[filteredCompany, setFilteredCompany] = useState();\r\n    //   const[filterCall, setFilterCall] = useState(false);\r\n\r\n    const [company, setCompany] = useState('');\r\n    const [designation, setDesignation] = useState('')\r\n    const [state, setState] = useState('')\r\n    const [country, setCountry] = useState('')\r\n    const [selectedCountry, setSelectedCountry] = useState('')\r\n    const [city, setCity] = useState('')\r\n    \r\n\r\n\r\n    let countryData = Country.getAllCountries()\r\n    \r\n    let selectedCountryStates = State.getStatesOfCountry(country)\r\n    let selectedCity = City.getCitiesOfState(country, state)\r\n    console.log(selectedCity)\r\n\r\n\r\n\r\nlet countryMatcher = (iso)=>{\r\n    let countryCodesMatcher = countryData.filter(item=> item.isoCode == iso)\r\n        return countryCodesMatcher[0][\"name\"]\r\n    \r\n}\r\n\r\n\r\nlet stateMatcher = (iso)=>{\r\n    let stateCodesMatcher = selectedCountryStates.filter(item=>item.isoCode ==iso)\r\n         return stateCodesMatcher[0][\"name\"]\r\n}\r\n\r\n\r\n\r\nlet FilterHandler = ()=>{\r\n    let catchedCountry = '';\r\n    let catchedState=''\r\n if(country  && country !== \"\"){ \r\n   catchedCountry = countryMatcher(country)}\r\n if(state && state!==\"\"){\r\n    catchedState= stateMatcher(state)}\r\n\r\n\r\n    let EmployeeDetails = props.userData.employee_details\r\n    let FoundersDetails = props.userData.founders_details\r\n  \r\n    let filterFinalEmployees =  []\r\n    let filterFinalFounders =  FoundersDetails.filter(employ=> employ.city.includes(catchedCountry) && employ.city.includes(catchedState) &&employ[\"city\"].includes(city)&&employ.designation.includes(designation) ) \r\n            \r\n    if(designation==\"Human Resources\"){\r\n\r\n        filterFinalEmployees= EmployeeDetails.filter(employ=> employ.city.includes(catchedCountry) && employ.city.includes(catchedState) &&employ[\"city\"].includes(city)&&employ.designation.includes(designation) )\r\n\r\n    }else{\r\n        filterFinalEmployees= EmployeeDetails.filter(employ=> employ.city.includes(catchedCountry) && employ.city.includes(catchedState) &&employ[\"city\"].includes(city) )\r\n    }\r\n\r\n        \r\n    props.filteredData(filterFinalFounders,filterFinalEmployees)\r\n    console.log(designation)    \r\n    \r\n    \r\n}\r\n\r\n\r\n    const handleChange = (event) => {\r\n        console.log(event.target.name, \"harish\")\r\n        if (event.target.name == \"Company\") {\r\n            setCompany(event.target.value);\r\n\r\n        } else if (event.target.name == \"Designation\") {\r\n            setDesignation(event.target.value)\r\n        } else if (event.target.name == \"State\") {\r\n            setState(event.target.value)\r\n            setCity(\"\")\r\n\r\n        } else if (event.target.name == \"Country\") {\r\n            setCountry(event.target.value)\r\n            setState(\"\")\r\n            setCity(\"\")\r\n            \r\n        } else if (event.target.name == \"City\") {\r\n            setCity(event.target.value)\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n \r\n\r\n//  let extractedLocations = EmployeeDataLocation.map(employee =>{\r\n//    let splitLocation =  employee.city.split(\",\")\r\n    \r\n//      let EmployeeCity = splitLocation[0]\r\n//      let EmployeeState = splitLocation[1]\r\n//      let EmployeeCountry = splitLocation[2]\r\n\r\n//      console.log(EmployeeCity,EmployeeState)\r\n  \r\n\r\n//  })\r\n\r\n    //   const handleDesignationChange = (event) => {\r\n    //     setDesignation(event.target.value);\r\n    //   };\r\n\r\n    //   const handleStateCompanyChange = (event) => {\r\n    //     setState(event.target.value);\r\n    //   };\r\n\r\n    //   const handlecountryCompanyChange = (event) => {\r\n    //     setCountry(event.target.value);\r\n    //   };\r\n\r\n\r\n    //   const firstNameChangeHandler = (event) => {\r\n    //     setUserFirstName(event.target.value);\r\n    //   };\r\n\r\n    //   const [lastName, setUserLastName] = useState();\r\n\r\n    //   const lastNameChangeHandler = (event) => {\r\n    //     setUserLastName(event.target.value);\r\n    //   };\r\n\r\n    //   const [email, setUserEmail] = useState();\r\n\r\n    //   const emailChangeHandler = (event) => {\r\n    //     setUserEmail(event.target.value);\r\n    //   };\r\n\r\n    //   const [city, setUserCity] = useState();\r\n\r\n    //   const cityChangeHandler = (event) => {\r\n    //     setUserCity(event.target.value);\r\n    //   };\r\n\r\n    //   const [designation, setUserDesignation] = useState();\r\n\r\n    //   const designationChangeHandler = (event) => {\r\n    //     setUserDesignation(event.target.value);\r\n    //   };\r\n\r\n\r\n\r\n\r\n\r\n    return (<>\r\n\r\n        <Grid container spacing={2}>\r\n\r\n     \r\n\r\n            <Grid item xs={6}>\r\n                <Item>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"Country\">Country</InputLabel>\r\n                        <Select\r\n                            labelId=\"Country\"\r\n                            id=\"demo-Country\"\r\n                            value={country}\r\n                            label=\"country\"\r\n                            name=\"Country\"\r\n                            onChange={handleChange}\r\n                        >\r\n                            <MenuItem value={\"\"} > Select</MenuItem>\r\n                            {countryData.map(count => {\r\n                                // console.log(count.isoCode)\r\n\r\n                                                            \r\n                                return   <MenuItem value={count.isoCode}>{count.name}</MenuItem>\r\n                                \r\n                            })}\r\n\r\n                        </Select>\r\n                    </FormControl>\r\n                </Item>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n                <Item>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"State\">State</InputLabel>\r\n                        <Select\r\n                            labelId=\"State\"\r\n                            id=\"demo-state\"\r\n                            value={state}\r\n                            label=\"state\"\r\n                            name=\"State\"\r\n                            onChange={handleChange}\r\n                        >\r\n                             <MenuItem value={\"\"}  > Select</MenuItem>\r\n                            {selectedCountryStates.map(IndivState => {\r\n                                // console.log(IndivState.isoCode)\r\n\r\n                                \r\n                               \r\n                                return <MenuItem value={IndivState.isoCode}>{IndivState.name}</MenuItem>\r\n                                 \r\n\r\n                            })}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Item>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n                <Item>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"City\">City</InputLabel>\r\n                        <Select\r\n                            labelId=\"City\"\r\n                            id=\"demo-City\"\r\n                            value={city}\r\n                            label=\"City\"\r\n                            name=\"City\"\r\n                            onChange={handleChange}\r\n                        >\r\n                            <MenuItem value={\"\"} > Select</MenuItem>\r\n                            {selectedCity.map(cities => {\r\n                                    \r\n                                \r\n                                \r\n                                    return     <MenuItem value={cities.name}>{cities.name}</MenuItem>\r\n                                \r\n\r\n                            })}\r\n\r\n                        </Select>\r\n                    </FormControl>\r\n                </Item>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n                <Item>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"Designation\">Designation</InputLabel>\r\n                        <Select\r\n                            labelId=\"Designation\"\r\n                            id=\"demo-designation\"\r\n                            value={designation}\r\n                            label=\"Designation\"\r\n                            name=\"Designation\"\r\n                            onChange={handleChange}\r\n                            placeHolder = \"Select\"\r\n                        >\r\n                            <MenuItem value={\"\"}  > Select</MenuItem>\r\n                            <MenuItem value={\"Chief Executive Officer\"}>CEO</MenuItem>\r\n                            <MenuItem value={\"Founder \"}>Founder</MenuItem>\r\n                            <MenuItem value={\"CTO\"}>CTO</MenuItem>\r\n                            <MenuItem value={\"COO\"}>COO</MenuItem>   \r\n                            <MenuItem value={\"CXO\"}>CXO</MenuItem>\r\n                            <MenuItem value={\"Employees\"}>Employees</MenuItem>   \r\n                                                     \r\n                            {/* <MenuItem value={\"Software Engineer\"}>Software Engineer</MenuItem>\r\n                            <MenuItem value={\"Developer\"}>Developer</MenuItem>\r\n                            <MenuItem value={\"Business Development\"}>Business Development</MenuItem> */}\r\n                            <MenuItem value={\"Human Resources\"}>Human Resources</MenuItem>\r\n                            {/* <MenuItem value={\"Designer\"}>Designer</MenuItem> */}\r\n                            \r\n\r\n\r\n\r\n\r\n                        </Select>\r\n                    </FormControl>\r\n                </Item>\r\n            </Grid>\r\n        </Grid>\r\n\r\n        <Grid item mt={2} container spacing={0} direction=\"column\" alignItems=\"center\" justifyContent=\"center\" >\r\n            <Button variant=\"contained\"   onClick={FilterHandler } style={{ width: '240px' }}>Filter</Button>\r\n        </Grid>\r\n        <ToastContainer position=\"top-right\"\r\n            autoClose={5000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover />\r\n\r\n    </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}