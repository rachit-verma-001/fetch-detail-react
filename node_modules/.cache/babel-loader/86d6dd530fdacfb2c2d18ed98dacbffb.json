{"ast":null,"code":"var _jsxFileName = \"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: (token, email) => {},\n  logout: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedEmail = localStorage.getItem('email');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 3600) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('email');\n    localStorage.removeItem('expirationTime');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    email: storedEmail,\n    duration: remainingTime\n  };\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const tokenData = retrieveStoredToken();\n  let initialToken;\n\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem('email');\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const loginHandler = (token, email, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n    localStorage.setItem('email', email);\n    localStorage.setItem('expirationTime', expirationTime);\n    const remainingTime = calculateRemainingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"Lh1CfGbFk5nTLZoGW/pEiX6CFRc=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/store/auth-context.js"],"names":["React","useState","useEffect","useCallback","logoutTimer","AuthContext","createContext","token","isLoggedIn","login","email","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","retrieveStoredToken","storedToken","localStorage","getItem","storedEmail","storedExpirationDate","remainingTime","removeItem","duration","AuthContextProvider","props","tokenData","initialToken","setToken","userIsLoggedIn","logoutHandler","clearTimeout","loginHandler","setItem","setTimeout","console","log","contextValue","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: (token, email) => {},\n  logout: () => {},\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n\n  const remainingDuration = adjExpirationTime - currentTime;\n\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n\n  const storedToken = localStorage.getItem('token');\n  const storedEmail = localStorage.getItem('email');\n\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 3600) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('email');\n    localStorage.removeItem('expirationTime');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    email: storedEmail,\n    duration: remainingTime,\n  };\n};\n\nexport const AuthContextProvider = (props) => {\n  const tokenData = retrieveStoredToken();\n  let initialToken;\n\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n\n  const [token, setToken] = useState(initialToken);\n\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem('email');\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const loginHandler = (token, email, expirationTime) => {\n    setToken(token);\n\n    localStorage.setItem('token', token);\n    localStorage.setItem('email',email);\n    localStorage.setItem('expirationTime', expirationTime);\n\n    const remainingTime = calculateRemainingTime(expirationTime);\n\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}