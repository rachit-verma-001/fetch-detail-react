{"ast":null,"code":"var _jsxFileName = \"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent'; // import CardMedia from '@mui/material/CardMedia';\n\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography'; // import { FormControl } from '@mui/material';\n\nimport AuthContext from '../../store/auth-context';\nimport { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthForm() {\n  _s();\n\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    if (enteredPassword.length < 5) {\n      alert('Password must contain atleast 5 characters');\n      return;\n    }\n\n    setIsLoading(true);\n    let url;\n\n    if (isLogin) {\n      // url =\n      // 'https://react-fetch-detail.herokuapp.com/users/sign_in';\n      // url=\"http://localhost:4000/api/v1/auth\"\n      url = 'http://localhost:4000/users/sign_in';\n    } else {\n      // url =\n      // 'https://react-fetch-detail.herokuapp.com/users';\n      // url=\"http://localhost:4000/api/v1/auth/sign_in\"\n      url = 'http://localhost:4000/users';\n    } // if (url === \"https://react-fetch-detail.herokuapp.com/users\")\n\n\n    if (url === \"http://localhost:4000/users\") // if (url === \"http://localhost:4000/api/v1/auth/sign_in\")\n      {\n        fetch(url, {\n          method: 'POST',\n          body: JSON.stringify({\n            user: {\n              email: enteredEmail,\n              password: enteredPassword\n            }\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(res => {\n          setIsLoading(false);\n\n          if (res.ok) {\n            return res.json();\n          } else {\n            return res.json().then(data => {\n              let errorMessage = data.message;\n              throw new Error(errorMessage);\n            });\n          }\n        }).catch(err => {\n          alert(err.message);\n          setIsLogin(true);\n          history.replace('/auth');\n        });\n      } else {\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n          user: {\n            email: enteredEmail,\n            password: enteredPassword,\n            returnSecureToken: true\n          }\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        setIsLoading(false);\n\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then(data => {\n            let errorMessage = data.message;\n            throw new Error(errorMessage);\n          });\n        }\n      }).then(data => {\n        const expirationTime = new Date(new Date().getTime() + 365 * 1000);\n        authCtx.login(data.user.auth_token, expirationTime.toISOString());\n        history.replace('/');\n      }).catch(err => {\n        alert(err.message);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      m: 3,\n      width: 1 / 2,\n      ml: '383px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        m: 3,\n        width: 1 / 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"div\",\n        align: \"center\",\n        children: \"Lizard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: isLogin ? 'Login' : 'Sign Up'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Your Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              required: true,\n              ref: emailInputRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Your Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              required: true,\n              ref: passwordInputRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.actions,\n            children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n              children: isLogin ? 'Login' : 'Create Account'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Sending request...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: classes.toggle,\n              onClick: switchAuthModeHandler,\n              children: isLogin ? 'Create new account' : 'Login with existing account'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        children: \"Share\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        children: \"Learn More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthForm, \"V9mgLlHICzGobfscsxv8TBwG27I=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Auth/AuthForm.js"],"names":["React","Card","CardActions","CardContent","Button","Typography","AuthContext","useState","useRef","useContext","useHistory","AuthForm","history","emailInputRef","passwordInputRef","authCtx","isLogin","setIsLogin","isLoading","setIsLoading","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","length","alert","url","fetch","method","body","JSON","stringify","user","email","password","headers","then","res","ok","json","data","errorMessage","message","Error","catch","err","replace","returnSecureToken","expirationTime","Date","getTime","login","auth_token","toISOString","m","width","ml","classes","actions","toggle"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\n// import CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n// import { FormControl } from '@mui/material';\nimport AuthContext from '../../store/auth-context';\nimport { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n\n\nexport default function AuthForm() {\n\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext);\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    if (enteredPassword.length < 5) {\n      alert('Password must contain atleast 5 characters');\n      return;\n    }\n\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      // url =\n        // 'https://react-fetch-detail.herokuapp.com/users/sign_in';\n        // url=\"http://localhost:4000/api/v1/auth\"\n      url = 'http://localhost:4000/users/sign_in'\n    } else {\n      // url =\n        // 'https://react-fetch-detail.herokuapp.com/users';\n        // url=\"http://localhost:4000/api/v1/auth/sign_in\"\n      url = 'http://localhost:4000/users'\n    }\n    // if (url === \"https://react-fetch-detail.herokuapp.com/users\")\n    if (url === \"http://localhost:4000/users\")\n    // if (url === \"http://localhost:4000/api/v1/auth/sign_in\")\n\n    {\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n          user:\n          {\n            email: enteredEmail,\n            password: enteredPassword,\n          }\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = data.message;\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .catch((err) => {\n        alert(err.message);\n        setIsLogin(true);\n        history.replace('/auth');\n      });\n    }\n\n    else {\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        user:\n        {\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = data.message;\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        const expirationTime = new Date(\n          new Date().getTime() + 365*1000\n        );\n        authCtx.login(data.user.auth_token, expirationTime.toISOString());\n        history.replace('/');\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n    }\n  };\n\n\n\n  return (\n    <Card sx={{ m: 3, width:1/2, ml:'383px'}}>\n      <CardContent sx={{  m: 3,\n      width: 1/2}}>\n        <Typography gutterBottom variant=\"h5\" component=\"div\" align=\"center\">\n          Lizard\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n\n        <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n          <form onSubmit={submitHandler}>\n            <div>\n              <label htmlFor='email'>Your Email</label>\n              <input type='email' id='email' required ref={emailInputRef} />\n            </div>\n            <div>\n              <label htmlFor='password'>Your Password</label>\n              <input\n                type='password'\n                id='password'\n                required\n                ref={passwordInputRef}\n              />\n            </div>\n            <div className={classes.actions}>\n              {!isLoading && (\n                <button>{isLogin ? 'Login' : 'Create Account'}</button>\n              )}\n              {isLoading && <p>Sending request...</p>}\n              <button\n                type='button'\n                className={classes.toggle}\n                onClick={switchAuthModeHandler}\n              >\n                {isLogin ? 'Create new account' : 'Login with existing account'}\n              </button>\n              {/* <Button variant=\"contained\">Hello World</Button> */}\n            </div>\n          </form>\n        </Typography>\n        {/* <FormControl>\n          <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n          <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n          <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n        </FormControl> */}\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\">Share</Button>\n        <Button size=\"small\">Learn More</Button>\n      </CardActions>\n    </Card>\n\n\n\n  );\n}"]},"metadata":{},"sourceType":"module"}