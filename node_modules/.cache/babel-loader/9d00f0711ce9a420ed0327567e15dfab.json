{"ast":null,"code":"var _jsxFileName = \"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Profile/ProfileForm.js\",\n    _s = $RefreshSig$();\n\n// import { useRef, useContext } from 'react';\nimport { useRef } from 'react';\nimport { useHistory } from 'react-router-dom'; // import AuthContext from '../../store/auth-context';\n\nimport classes from './ProfileForm.module.css';\nimport { ngrokUrl } from '../../store/HostUrl';\nimport PasswordField from 'material-ui-password-field';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProfileForm = () => {\n  _s();\n\n  const history = useHistory();\n  const newPasswordInputRef = useRef(); // const authCtx = useContext(AuthContext);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredNewPassword = newPasswordInputRef.current.value;\n    const password = {\n      update_password: enteredNewPassword\n    };\n    const headers = {\n      'X-USER-TOKEN': localStorage.getItem('token'),\n      \"X-USER-EMAIL\": localStorage.getItem('email')\n    };\n\n    const axios = require('axios').default;\n\n    axios.put(`${ngrokUrl}/api/v1/change_password`, password, {\n      headers\n    }).then(responseData => {\n      console.log(responseData);\n      toast.success(\"Password updated successfully\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        onClose: () => history.replace('/')\n      });\n    }).catch(error => {\n      console.log(error);\n      alert('Something Went Wrong');\n    });\n  };\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClick = () => setShowPassword(!showPassword);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"new-password\",\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"new-password\",\n          minLength: \"7\",\n          required: true,\n          ref: newPasswordInputRef,\n          InputProps: {\n            endAdornment: item.type ? 'password'( /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleClick,\n                edge: \"end\",\n                children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 37\n                }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 54\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)) : null\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.action,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        newestOnTop: false,\n        closeOnClick: true,\n        rtl: false,\n        pauseOnFocusLoss: true,\n        draggable: true,\n        pauseOnHover: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(ProfileForm, \"KVgc9GMNE3+bcpMPfZfReShOWWc=\", false, function () {\n  return [useHistory];\n});\n\n_c = ProfileForm;\nexport default ProfileForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileForm\");","map":{"version":3,"sources":["/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Profile/ProfileForm.js"],"names":["useRef","useHistory","classes","ngrokUrl","PasswordField","ToastContainer","toast","ProfileForm","history","newPasswordInputRef","submitHandler","event","preventDefault","enteredNewPassword","current","value","password","update_password","headers","localStorage","getItem","axios","require","default","put","then","responseData","console","log","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","onClose","replace","catch","error","alert","showPassword","setShowPassword","useState","handleClick","form","control","endAdornment","item","type","action"],"mappings":"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","sourcesContent":["// import { useRef, useContext } from 'react';\nimport { useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\n// import AuthContext from '../../store/auth-context';\nimport classes from './ProfileForm.module.css';\nimport { ngrokUrl } from '../../store/HostUrl';\nimport PasswordField from 'material-ui-password-field'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst ProfileForm = () => {\n  const history = useHistory();\n\n  const newPasswordInputRef = useRef();\n  // const authCtx = useContext(AuthContext);\n  const submitHandler = (event) => {\n\n    event.preventDefault();\n    const enteredNewPassword = newPasswordInputRef.current.value;\n    const password = { update_password: enteredNewPassword };\n    const headers = {\n      'X-USER-TOKEN': localStorage.getItem('token'),\n      \"X-USER-EMAIL\":localStorage.getItem('email')\n    };\n    const axios = require('axios').default;\n    axios.put(`${ngrokUrl}/api/v1/change_password`, password, { headers })\n    .then((responseData) => { console.log(responseData);\n        toast.success(\"Password updated successfully\",  {\n          position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n          onClose: () => history.replace('/')\n        });\n    })\n    .catch((error) => { console.log(error); alert('Something Went Wrong') })\n  };\n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClick = () => setShowPassword(!showPassword);\n\n  return (<>\n    <form className={classes.form} onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='new-password'>New Password</label>\n        <input type='password' id='new-password' minLength=\"7\" required ref={newPasswordInputRef}\n\n            InputProps={{\n              endAdornment: item.type ? 'password' (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={handleClick}\n                    edge=\"end\"\n                  >\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              ) : null\n            }}\n        />\n\n\n\n\n\n\n      </div>\n\n      {/* <PasswordField id='new-password' minLength=\"7\" required ref={newPasswordInputRef}  /> */}\n\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    <ToastContainer position=\"top-right\"\nautoClose={5000}\nhideProgressBar={false}\nnewestOnTop={false}\ncloseOnClick\nrtl={false}\npauseOnFocusLoss\ndraggable\npauseOnHover/>\n    </form>\n    </>\n  );\n};\n\nexport default ProfileForm;\n"]},"metadata":{},"sourceType":"module"}