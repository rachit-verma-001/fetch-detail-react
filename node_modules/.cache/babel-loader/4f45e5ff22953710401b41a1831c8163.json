{"ast":null,"code":"var _jsxFileName = \"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useContext } from 'react';\nimport { Grid, Paper, TextField, Button, Typography, Link } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom'; // import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = ({\n  handleChange\n}) => {\n  _s();\n\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    if (enteredPassword.length < 5) {\n      alert('Password must contain atleast 5 characters');\n      return;\n    }\n\n    setIsLoading(true);\n    let url;\n\n    if (isLogin) {\n      // url =\n      // 'https://react-fetch-detail.herokuapp.com/users/sign_in';\n      // url=\"http://localhost:4000/api/v1/auth\"\n      url = 'http://localhost:4000/users/sign_in';\n    } else {\n      // url =\n      // 'https://react-fetch-detail.herokuapp.com/users';\n      // url=\"http://localhost:4000/api/v1/auth/sign_in\"\n      url = 'http://localhost:4000/users';\n    } // if (url === \"https://react-fetch-detail.herokuapp.com/users\")\n\n\n    if (url === \"http://localhost:4000/users\") // if (url === \"http://localhost:4000/api/v1/auth/sign_in\")\n      {\n        fetch(url, {\n          method: 'POST',\n          body: JSON.stringify({\n            user: {\n              email: enteredEmail,\n              password: enteredPassword\n            }\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(res => {\n          setIsLoading(false);\n\n          if (res.ok) {\n            return res.json();\n          } else {\n            return res.json().then(data => {\n              let errorMessage = data.message;\n              throw new Error(errorMessage);\n            });\n          }\n        }).catch(err => {\n          alert(err.message);\n          setIsLogin(true);\n          history.replace('/auth');\n        });\n      } else {\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n          user: {\n            email: enteredEmail,\n            password: enteredPassword,\n            returnSecureToken: true\n          }\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        setIsLoading(false);\n\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then(data => {\n            let errorMessage = data.message;\n            throw new Error(errorMessage);\n          });\n        }\n      }).then(data => {\n        const expirationTime = new Date(new Date().getTime() + 365 * 1000);\n        authCtx.login(data.user.auth_token, expirationTime.toISOString());\n        history.replace('/');\n      }).catch(err => {\n        alert(err.message);\n      });\n    }\n  };\n\n  const paperStyle = {\n    padding: 20,\n    height: '48vh',\n    width: 300,\n    margin: \"96px auto\",\n    borderTop: '3px solid #4bacfe'\n  }; // const avatarStyle={backgroundColor:'#1bbd7e'}\n\n  const btnstyle = {\n    margin: '8px 0'\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      style: paperStyle,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Username\",\n        placeholder: \"Enter username\",\n        fullWidth: true,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Password\",\n        placeholder: \"Enter password\",\n        type: \"password\",\n        fullWidth: true,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        variant: \"contained\",\n        style: btnstyle,\n        fullWidth: true,\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"#\",\n          children: \"Forgot password ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthForm, \"V9mgLlHICzGobfscsxv8TBwG27I=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/Auth/AuthForm.js"],"names":["useState","useRef","useContext","Grid","Paper","TextField","Button","Typography","Link","useHistory","AuthForm","handleChange","history","emailInputRef","passwordInputRef","authCtx","AuthContext","isLogin","setIsLogin","isLoading","setIsLoading","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","length","alert","url","fetch","method","body","JSON","stringify","user","email","password","headers","then","res","ok","json","data","errorMessage","message","Error","catch","err","replace","returnSecureToken","expirationTime","Date","getTime","login","auth_token","toISOString","paperStyle","padding","height","width","margin","borderTop","btnstyle"],"mappings":"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","sourcesContent":["\nimport { useState, useRef, useContext } from 'react';\nimport { Grid,Paper, TextField, Button, Typography,Link } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom';\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\nconst AuthForm=({handleChange})=>{\n\n\n\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext);\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    if (enteredPassword.length < 5) {\n      alert('Password must contain atleast 5 characters');\n      return;\n    }\n\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      // url =\n        // 'https://react-fetch-detail.herokuapp.com/users/sign_in';\n        // url=\"http://localhost:4000/api/v1/auth\"\n      url = 'http://localhost:4000/users/sign_in'\n    } else {\n      // url =\n        // 'https://react-fetch-detail.herokuapp.com/users';\n        // url=\"http://localhost:4000/api/v1/auth/sign_in\"\n      url = 'http://localhost:4000/users'\n    }\n    // if (url === \"https://react-fetch-detail.herokuapp.com/users\")\n    if (url === \"http://localhost:4000/users\")\n    // if (url === \"http://localhost:4000/api/v1/auth/sign_in\")\n\n    {\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n          user:\n          {\n            email: enteredEmail,\n            password: enteredPassword,\n          }\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = data.message;\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .catch((err) => {\n        alert(err.message);\n        setIsLogin(true);\n        history.replace('/auth');\n      });\n    }\n\n    else {\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        user:\n        {\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = data.message;\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        const expirationTime = new Date(\n          new Date().getTime() + 365*1000\n        );\n        authCtx.login(data.user.auth_token, expirationTime.toISOString());\n        history.replace('/');\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n    }\n  };\n\n\n\n\n\n\n    const paperStyle={padding :20,height:'48vh',width:300, margin:\"96px auto\", borderTop:'3px solid #4bacfe'}\n    // const avatarStyle={backgroundColor:'#1bbd7e'}\n    const btnstyle={margin:'8px 0'}\n    return(\n        <Grid>\n            <Paper  style={paperStyle}>\n                <Grid align='center'>\n                     {/* <Avatar style={avatarStyle}><LockOutlinedIcon/></Avatar> */}\n                    <h2>Sign In</h2>\n                </Grid>\n                <TextField label='Username' placeholder='Enter username' fullWidth required/>\n                <TextField label='Password' placeholder='Enter password' type='password' fullWidth required/>\n                {/* <FormControlLabel\n                    control={\n                    <Checkbox\n                        name=\"checkedB\"\n                        color=\"primary\"\n                    />\n                    }\n                    label=\"Remember me\"\n                 /> */}\n                <Button type='submit' color='primary' variant=\"contained\" style={btnstyle} fullWidth>Sign in</Button>\n                <Typography >\n                     <Link href=\"#\" >\n                        Forgot password ?\n                </Link>\n                </Typography>\n            </Paper>\n        </Grid>\n    )\n}\n\nexport default AuthForm"]},"metadata":{},"sourceType":"module"}