{"ast":null,"code":"var _jsxFileName = \"/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/ScrappedData/DropDownFilter.js\",\n    _s = $RefreshSig$();\n\nimport SearchIcon from '@mui/icons-material/Search';\nimport { useState } from 'react';\nimport InputBase from '@mui/material/InputBase';\nimport { styled, alpha } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\nimport { useLocation } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Country, State, City } from 'country-state-city';\nimport Csv from './ExportCsv';\nimport { ngrokUrl } from '../../store/HostUrl';\nimport Select2 from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst animatedComponents = makeAnimated(); // import { company_name } from './AddData';\n\nlet company_name = \"\";\nconst Search = styled('div')(({\n  theme\n}) => ({\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.common.white, 0.25)\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: '100%',\n  [theme.breakpoints.up('sm')]: {\n    marginLeft: theme.spacing(3),\n    width: 'auto'\n  }\n}));\nconst Item = styled(Paper)(({\n  theme\n}) => ({ ...theme.typography.body2,\n  padding: theme.spacing(0),\n  color: theme.palette.text.secondary\n}));\nconst SearchIconWrapper = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 2),\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center'\n}));\nconst StyledInputBase = styled(InputBase)(({\n  theme\n}) => ({\n  color: 'inherit',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '12ch'\n    }\n  }\n}));\nexport let dataFiltered = null;\nexport default function DropDownFilter(props) {\n  _s();\n\n  //   const [firstName, setUserFirstName] = useState();\n  //   const[filteredCompany, setFilteredCompany] = useState();\n  //   const[filterCall, setFilterCall] = useState(false);\n  const [company, setCompany] = useState('');\n  const [designation, setDesignation] = useState('');\n  const [designation2, setDesignation2] = useState(['']);\n  const [state, setState] = useState('');\n  const [country, setCountry] = useState('');\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [city, setCity] = useState('');\n  const [state2, setState2] = useState('');\n  let countryData = Country.getAllCountries();\n  let selectedCountryStates = State.getStatesOfCountry(country);\n  console.log(\"Selected State=\");\n  console.log(selectedCountryStates);\n  console.log(\"State=\");\n  console.log(state);\n  let selectedCity = City.getCitiesOfState(country, state);\n  console.log(\"Selected City=\");\n  console.log(selectedCity);\n\n  let countryMatcher = iso => {\n    let countryCodesMatcher = countryData.filter(item => item.isoCode == iso);\n    return countryCodesMatcher[0][\"name\"];\n  };\n\n  let stateMatcher = iso => {\n    let stateCodesMatcher = selectedCountryStates.filter(item => item.name == iso);\n    return stateCodesMatcher[0][\"name\"];\n  };\n\n  const Location = useLocation();\n\n  let FilterHandler2 = () => {\n    let catchedCountry = '';\n    console.log(\"Filter Designation 2=\");\n    console.log(designation2);\n    let catchedState = '';\n\n    if (country && country !== \"\") {\n      catchedCountry = countryMatcher(country);\n    }\n\n    if (state && state !== \"\") {\n      catchedState = stateMatcher(state);\n    }\n\n    let EmployeeDetails = props.userData.employee_details;\n    let FoundersDetails = props.userData.founders_details;\n    let filterFinalEmployees = [];\n    let filterFinalFounders = [];\n\n    const axios = require('axios').default;\n\n    try {\n      let id = Location.pathname.split(\"/details/\")[1];\n      axios.get(`${ngrokUrl}/api/v1/search`, {\n        headers: {\n          'X-USER-TOKEN': localStorage.getItem('token'),\n          \"X-USER-EMAIL\": localStorage.getItem('email')\n        },\n        params: {\n          id: id,\n          city: city,\n          state: state,\n          country: country,\n          employee_types: designation2.map(desig => desig.value)\n        }\n      }).then(function (response) {\n        if (response.data.success === false) {\n          // alert(response.data.message)\n          toast.error(response.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          }); // setIsFiltered(false)\n        } else {\n          filterFinalEmployees = response.data.employee_details;\n          filterFinalFounders = response.data.founder_details;\n          props.filteredData(filterFinalFounders, filterFinalEmployees);\n        } // setError(false);\n\n      }).catch(function (error) {\n        console.log(error);\n        toast.error(error, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n      });\n    } catch (error) {\n      console.error(error);\n      toast.error(error, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }\n  };\n\n  let FilterHandler = () => {\n    let catchedCountry = '';\n    console.log(\"Filter Designation 2=\");\n    console.log(designation2);\n    let catchedState = '';\n\n    if (country && country !== \"\") {\n      catchedCountry = countryMatcher(country);\n    }\n\n    if (state && state !== \"\") {\n      catchedState = stateMatcher(state);\n    }\n\n    let EmployeeDetails = props.userData.employee_details;\n    let FoundersDetails = props.userData.founders_details;\n    let filterFinalEmployees = [];\n    let filterFinalFounders = FoundersDetails.filter(employ => employ.city.includes(catchedCountry) && employ.city.includes(catchedState) && employ[\"city\"].includes(city) && employ.designation.includes(designation)); // if(designation !==\"Employees\"){\n    //     filterFinalEmployees= EmployeeDetails.filter(employ=> employ.city.includes(catchedCountry) && employ.city.includes(catchedState) &&employ[\"city\"].includes(city)&&employ.designation.includes(designation) )\n    // }\n    // else\n    // {\n    //     filterFinalEmployees= EmployeeDetails.filter(employ=> employ.city.includes(catchedCountry) && employ.city.includes(catchedState) &&employ[\"city\"].includes(city) )\n    // }\n\n    let ades = [];\n\n    if (designation2) {\n      console.log(\"bedore ades = \");\n      console.log(ades);\n      designation2.map(designat => ades.push(EmployeeDetails.filter(employ => employ.designation.includes(designat.value))));\n      console.log(\"after ades=\");\n      console.log(ades); // filterFinalEmployees= EmployeeDetails.filter(employ=> employ.city.includes(catchedCountry) && employ.city.includes(catchedState) &&employ[\"city\"].includes(city)&&employ.designation.includes(designation2) )\n    }\n\n    props.filteredData(filterFinalFounders, filterFinalEmployees);\n    console.log(designation);\n  };\n\n  const handleDesignation = event => {\n    console.log(\"Before Designation2=\");\n    console.log(designation2); // console.log(event)\n\n    setDesignation2(event);\n    console.log(\"After Designation2=\");\n    console.log(designation2);\n  };\n\n  const handleChange = event => {\n    console.log(event.target.name, \"harish\");\n\n    if (event.target.name == \"Company\") {\n      setCompany(event.target.value);\n    } else if (event.target.name == \"Designation\") {\n      setDesignation(event.target.value);\n    } else if (event.target.name == \"State\") {\n      setState(event.target.value);\n      setState2(event.target.id);\n      setCity(\"\");\n    } else if (event.target.name == \"Country\") {\n      setCountry(event.target.value);\n      setState(\"\");\n      setCity(\"\");\n      setState2(\"\");\n    } else if (event.target.name == \"City\") {\n      setCity(event.target.value);\n    } // else if (event.target.name == \"Designation2\") {\n    //     setDesignation2(event.target.value)\n    // }\n\n  }; //  let extractedLocations = EmployeeDataLocation.map(employee =>{\n  //    let splitLocation =  employee.city.split(\",\")\n  //      let EmployeeCity = splitLocation[0]\n  //      let EmployeeState = splitLocation[1]\n  //      let EmployeeCountry = splitLocation[2]\n  //      console.log(EmployeeCity,EmployeeState)\n  //  })\n  //   const handleDesignationChange = (event) => {\n  //     setDesignation(event.target.value);\n  //   };\n  //   const handleStateCompanyChange = (event) => {\n  //     setState(event.target.value);\n  //   };\n  //   const handlecountryCompanyChange = (event) => {\n  //     setCountry(event.target.value);\n  //   };\n  //   const firstNameChangeHandler = (event) => {\n  //     setUserFirstName(event.target.value);\n  //   };\n  //   const [lastName, setUserLastName] = useState();\n  //   const lastNameChangeHandler = (event) => {\n  //     setUserLastName(event.target.value);\n  //   };\n  //   const [email, setUserEmail] = useState();\n  //   const emailChangeHandler = (event) => {\n  //     setUserEmail(event.target.value);\n  //   };\n  //   const [city, setUserCity] = useState();\n  //   const cityChangeHandler = (event) => {\n  //     setUserCity(event.target.value);\n  //   };\n  //   const [designation, setUserDesignation] = useState();\n  //   const designationChangeHandler = (event) => {\n  //     setUserDesignation(event.target.value);\n  //   };\n\n\n  const options = [{\n    value: 'Human Resources',\n    label: 'HR'\n  }, {\n    value: 'Chief Executive Officer',\n    label: 'CEO'\n  }, {\n    value: 'Chief Technology Officer',\n    label: 'CTO'\n  }, {\n    value: 'Chief Operating Officer',\n    label: 'COO'\n  }, {\n    value: 'Employees',\n    label: 'Employees'\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"Country\",\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"Country\",\n              id: \"demo-Country\",\n              value: country,\n              label: \"country\",\n              name: \"Country\",\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \" Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 29\n              }, this), countryData.map(count => {\n                // console.log(count.isoCode)\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: count.isoCode,\n                  children: count.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 42\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"State\",\n              children: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"State\",\n              id: \"demo-state\",\n              value: state,\n              label: \"state\",\n              name: \"State\",\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \" Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 30\n              }, this), selectedCountryStates.map(IndivState => {\n                // console.log(IndivState.isoCode)\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: IndivState.name,\n                  second_value: IndivState.isoCode,\n                  children: IndivState.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 40\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"City\",\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"City\",\n              id: \"demo-City\",\n              value: city,\n              label: \"City\",\n              name: \"City\",\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 29\n              }, this), selectedCity.map(cities => {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: cities.isoCode,\n                  children: cities.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 40\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: /*#__PURE__*/_jsxDEV(Select2, {\n              style: {\n                height: \"59px\",\n                marginTop: \"-5px\"\n              },\n              name: \"Designation2\",\n              placeholder: \"Designation\",\n              closeMenuOnSelect: false // components={animatedComponents}\n              ,\n              isMulti: true,\n              options: options,\n              onChange: handleDesignation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      mt: 2,\n      container: true,\n      spacing: 0,\n      direction: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: FilterHandler2,\n        style: {\n          width: '240px'\n        },\n        children: \"Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      mt: 2,\n      spacing: 0,\n      direction: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Csv, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 107\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      pauseOnHover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DropDownFilter, \"cKcj5z74h7eS0jFzRt4Dx29peAc=\", false, function () {\n  return [useLocation];\n});\n\n_c = DropDownFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropDownFilter\");","map":{"version":3,"sources":["/home/rachit/Things/WebScrapping/ReactBranches/09-finished MaterialUI/src/components/ScrappedData/DropDownFilter.js"],"names":["SearchIcon","useState","InputBase","styled","alpha","Grid","Paper","Button","FormControl","InputLabel","MenuItem","Select","useLocation","ToastContainer","toast","Country","State","City","Csv","ngrokUrl","Select2","makeAnimated","animatedComponents","company_name","Search","theme","position","borderRadius","shape","backgroundColor","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","Item","typography","body2","padding","color","text","secondary","SearchIconWrapper","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","paddingLeft","transition","transitions","create","dataFiltered","DropDownFilter","props","company","setCompany","designation","setDesignation","designation2","setDesignation2","state","setState","country","setCountry","selectedCountry","setSelectedCountry","city","setCity","state2","setState2","countryData","getAllCountries","selectedCountryStates","getStatesOfCountry","console","log","selectedCity","getCitiesOfState","countryMatcher","iso","countryCodesMatcher","filter","item","isoCode","stateMatcher","stateCodesMatcher","name","Location","FilterHandler2","catchedCountry","catchedState","EmployeeDetails","userData","employee_details","FoundersDetails","founders_details","filterFinalEmployees","filterFinalFounders","axios","require","default","id","pathname","split","get","headers","localStorage","getItem","params","employee_types","map","desig","value","then","response","data","success","error","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","founder_details","filteredData","catch","FilterHandler","employ","includes","ades","designat","push","handleDesignation","event","handleChange","target","options","label","count","IndivState","cities","marginTop"],"mappings":"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","sourcesContent":["import SearchIcon from '@mui/icons-material/Search';\nimport { useState } from 'react';\nimport InputBase from '@mui/material/InputBase';\nimport { styled, alpha } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\n\nimport { useLocation } from 'react-router-dom';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Country, State, City } from 'country-state-city';\nimport Csv from './ExportCsv';\n\nimport { ngrokUrl } from '../../store/HostUrl';\n\nimport Select2 from 'react-select';\nimport makeAnimated from 'react-select/animated';\n\nconst animatedComponents = makeAnimated();\n// import { company_name } from './AddData';\nlet company_name = \"\"\nconst Search = styled('div')(({ theme }) => ({\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n    },\n}));\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(0),\n    color: theme.palette.text.secondary,\n}));\n\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n}));\n\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: 'inherit',\n    '& .MuiInputBase-input': {\n        padding: theme.spacing(1, 1, 1, 0),\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '12ch',\n        },\n    },\n}));\n\nexport let dataFiltered = null;\n\nexport default function DropDownFilter(props) {\n\n    //   const [firstName, setUserFirstName] = useState();\n    //   const[filteredCompany, setFilteredCompany] = useState();\n    //   const[filterCall, setFilterCall] = useState(false);\n\n    const [company, setCompany] = useState('');\n    const [designation, setDesignation] = useState('')\n    const [designation2, setDesignation2] = useState([''])\n    const [state, setState] = useState('')\n    const [country, setCountry] = useState('')\n    const [selectedCountry, setSelectedCountry] = useState('')\n    const [city, setCity] = useState('')\n    const [state2, setState2] = useState('')\n    let countryData = Country.getAllCountries()\n\n    let selectedCountryStates = State.getStatesOfCountry(country)\n    console.log(\"Selected State=\")\n    console.log(selectedCountryStates)\n    console.log(\"State=\")\n    console.log(state)\n\n    let selectedCity = City.getCitiesOfState(country, state)\n    console.log(\"Selected City=\")\n    console.log(selectedCity)\n\n\n    let countryMatcher = (iso)=>{\n        let countryCodesMatcher = countryData.filter(item=> item.isoCode == iso)\n        return countryCodesMatcher[0][\"name\"]\n    }\n\n\n    let stateMatcher = (iso)=>{\n        let stateCodesMatcher = selectedCountryStates.filter(item=>item.name == iso)\n            return stateCodesMatcher[0][\"name\"]\n    }\n\n\tconst Location = useLocation();\n\n\tlet FilterHandler2 = () =>\n\t{\n\n\t\tlet catchedCountry = '';\n        console.log(\"Filter Designation 2=\")\n        console.log(designation2)\n        let catchedState=''\n\n\t\tif (country && country!==\"\")\n        {\n            catchedCountry = countryMatcher(country)\n        }\n\n        if(state && state!==\"\")\n        {\n            catchedState= stateMatcher(state)\n        }\n\n        let EmployeeDetails = props.userData.employee_details\n        let FoundersDetails = props.userData.founders_details\n\n        let filterFinalEmployees =  []\n\n        let filterFinalFounders = []\n\n        const axios = require('axios').default;\n\n\t\ttry\n\t\t{\n\t\t  let id = Location.pathname.split(\"/details/\")[1];\n\n\t\t  axios.get(`${ngrokUrl}/api/v1/search`, {\n          headers:\n\t\t\t{\n              'X-USER-TOKEN': localStorage.getItem('token'),\n              \"X-USER-EMAIL\":localStorage.getItem('email')\n            },\n            params:{\n\t\t\t\tid: id,\n                city:city,\n                state:state,\n\t\t\t\tcountry:country,\n                employee_types:designation2.map(desig=>desig.value)\n            }\n        })\n      .then(function (response) {\n        if (response.data.success === false)\n        {\n          // alert(response.data.message)\n          toast.error(response.data.message,  {\n            position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          });\n          // setIsFiltered(false)\n        }\n        else{\n            filterFinalEmployees = response.data.employee_details;\n            filterFinalFounders = response.data.founder_details;\n            props.filteredData(filterFinalFounders,filterFinalEmployees)\n        }\n          // setError(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n        toast.error(error,  {\n          position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        });\n      })\n    }catch (error) {\n      console.error(error);\n      toast.error(error,  {\n        position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      });\n    }\n}\n\n\tlet FilterHandler = ()=>{\n\n\t\tlet catchedCountry = '';\n        console.log(\"Filter Designation 2=\")\n        console.log(designation2)\n        let catchedState=''\n\n\t\tif(country  && country !== \"\")\n\t\t{\n\t\t\tcatchedCountry = countryMatcher(country)\n\t\t}\n\n\t\tif(state && state!==\"\")\n\t\t {\n    \tcatchedState= stateMatcher(state)\n\t\t}\n\n    let EmployeeDetails = props.userData.employee_details\n    let FoundersDetails = props.userData.founders_details\n\n    let filterFinalEmployees =  []\n\n\t\tlet filterFinalFounders =  FoundersDetails.filter(employ=> employ.city.includes(catchedCountry) && employ.city.includes(catchedState) &&employ[\"city\"].includes(city)&&employ.designation.includes(designation) )\n\n    // if(designation !==\"Employees\"){\n\n    //     filterFinalEmployees= EmployeeDetails.filter(employ=> employ.city.includes(catchedCountry) && employ.city.includes(catchedState) &&employ[\"city\"].includes(city)&&employ.designation.includes(designation) )\n\n    // }\n\n    // else\n    // {\n    //     filterFinalEmployees= EmployeeDetails.filter(employ=> employ.city.includes(catchedCountry) && employ.city.includes(catchedState) &&employ[\"city\"].includes(city) )\n    // }\n\n    let ades = []\n\n    if (designation2)\n    {\n        console.log(\"bedore ades = \")\n        console.log(ades)\n\n        designation2.map(designat =>\n            ades.push(EmployeeDetails.filter(employ=> employ.designation.includes(designat.value)))\n            )\n            console.log(\"after ades=\")\n            console.log(ades)\n\n        // filterFinalEmployees= EmployeeDetails.filter(employ=> employ.city.includes(catchedCountry) && employ.city.includes(catchedState) &&employ[\"city\"].includes(city)&&employ.designation.includes(designation2) )\n\n    }\n\n    props.filteredData(filterFinalFounders,filterFinalEmployees)\n    console.log(designation)\n\n\n}\n\n\n    const handleDesignation = (event) => {\n\n        console.log(\"Before Designation2=\")\n        console.log(designation2)\n        // console.log(event)\n        setDesignation2(event)\n        console.log(\"After Designation2=\")\n        console.log(designation2)\n    }\n\n\n    const handleChange = (event) => {\n        console.log(event.target.name, \"harish\")\n        if (event.target.name == \"Company\") {\n            setCompany(event.target.value);\n\n        } else if (event.target.name == \"Designation\") {\n            setDesignation(event.target.value)\n        } else if (event.target.name == \"State\") {\n            setState(event.target.value)\n            setState2(event.target.id)\n            setCity(\"\")\n\n        } else if (event.target.name == \"Country\") {\n            setCountry(event.target.value)\n            setState(\"\")\n            setCity(\"\")\n            setState2(\"\")\n\n        } else if (event.target.name == \"City\") {\n            setCity(event.target.value)\n\n        }\n        // else if (event.target.name == \"Designation2\") {\n        //     setDesignation2(event.target.value)\n\n        // }\n\n    };\n\n\n\n//  let extractedLocations = EmployeeDataLocation.map(employee =>{\n//    let splitLocation =  employee.city.split(\",\")\n\n//      let EmployeeCity = splitLocation[0]\n//      let EmployeeState = splitLocation[1]\n//      let EmployeeCountry = splitLocation[2]\n\n//      console.log(EmployeeCity,EmployeeState)\n\n\n//  })\n\n    //   const handleDesignationChange = (event) => {\n    //     setDesignation(event.target.value);\n    //   };\n\n    //   const handleStateCompanyChange = (event) => {\n    //     setState(event.target.value);\n    //   };\n\n    //   const handlecountryCompanyChange = (event) => {\n    //     setCountry(event.target.value);\n    //   };\n\n\n    //   const firstNameChangeHandler = (event) => {\n    //     setUserFirstName(event.target.value);\n    //   };\n\n    //   const [lastName, setUserLastName] = useState();\n\n    //   const lastNameChangeHandler = (event) => {\n    //     setUserLastName(event.target.value);\n    //   };\n\n    //   const [email, setUserEmail] = useState();\n\n    //   const emailChangeHandler = (event) => {\n    //     setUserEmail(event.target.value);\n    //   };\n\n    //   const [city, setUserCity] = useState();\n\n    //   const cityChangeHandler = (event) => {\n    //     setUserCity(event.target.value);\n    //   };\n\n    //   const [designation, setUserDesignation] = useState();\n\n    //   const designationChangeHandler = (event) => {\n    //     setUserDesignation(event.target.value);\n    //   };\n\n\n    const options = [\n        { value: 'Human Resources', label: 'HR' },\n        { value: 'Chief Executive Officer', label: 'CEO' },\n        { value: 'Chief Technology Officer', label: 'CTO' },\n        { value: 'Chief Operating Officer', label: 'COO' },\n        { value: 'Employees', label: 'Employees' }\n      ]\n\n\t\treturn (<>\n\n        <Grid container spacing={2}>\n\n\n\n            <Grid item xs={6}>\n                <Item>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"Country\">Country</InputLabel>\n                        <Select\n                            labelId=\"Country\"\n                            id=\"demo-Country\"\n                            value={country}\n                            label=\"country\"\n                            name=\"Country\"\n                            onChange={handleChange}\n                        >\n                            <MenuItem value={\"\"} > Select</MenuItem>\n                            {countryData.map(count => {\n                                // console.log(count.isoCode)\n\n\n                                return   <MenuItem value={count.isoCode}>{count.name}</MenuItem>\n\n                            })}\n\n                        </Select>\n\n                    </FormControl>\n                </Item>\n            </Grid>\n\n            <Grid item xs={6}>\n                <Item>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"State\">State</InputLabel>\n                        <Select\n                            labelId=\"State\"\n                            id=\"demo-state\"\n                            value={state}\n                            label=\"state\"\n                            name=\"State\"\n                            onChange={handleChange}\n                        >\n                             <MenuItem value={\"\"}  > Select</MenuItem>\n                            {selectedCountryStates.map(IndivState => {\n                                // console.log(IndivState.isoCode)\n\n                                return <MenuItem value={IndivState.name}  second_value={IndivState.isoCode}>{IndivState.name}</MenuItem>\n\n\n                            })}\n                        </Select>\n                    </FormControl>\n                </Item>\n            </Grid>\n\n            <Grid item xs={6}>\n                <Item>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"City\">City</InputLabel>\n                        <Select\n                            labelId=\"City\"\n                            id=\"demo-City\"\n                            value={city}\n                            label=\"City\"\n                            name=\"City\"\n                            onChange={handleChange}\n                        >\n\n                            <MenuItem value={\"\"} >Select</MenuItem>\n\n                            {selectedCity.map(cities => {\n                                return <MenuItem value={cities.isoCode}>{cities.name}</MenuItem>\n                            })}\n\n                        </Select>\n                    </FormControl>\n                </Item>\n            </Grid>\n\n\t\t\t<Grid item xs={6}>\n\n\t\t\t\t<Item>\n\n\t\t\t\t\t<FormControl fullWidth >\n\n\t\t\t\t\t\t<Select2 style = {{height:\"59px\", marginTop:\"-5px\"}} name=\"Designation2\" placeholder = \"Designation\"\n\t\t\t\t\t\t\t\tcloseMenuOnSelect={false}\n\t\t\t\t\t\t\t\t// components={animatedComponents}\n\t\t\t\t\t\t\t\tisMulti\n\t\t\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\t\t\tonChange={handleDesignation}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t</FormControl>\n\n\t\t\t\t</Item>\n\n\t\t\t</Grid>\n\n\t\t\t</Grid>\n\n\t\t\t<Grid item mt={2} container spacing={0} direction=\"column\" alignItems=\"center\" justifyContent=\"center\" >\n\n\t\t\t\t<Button variant=\"contained\"   onClick={FilterHandler2 } style={{ width: '240px' }}>Filter</Button>\n\n\t\t    </Grid>\n\n\t\t    <Grid item xs={6} mt={2} spacing={0} direction=\"column\" alignItems=\"center\" justifyContent=\"center\"><Csv/></Grid>\n\n\t\t\t\t\t<ToastContainer position=\"top-right\"\n\t\t\t\t\t\t\tautoClose={5000}\n\t\t\t\t\t\t\thideProgressBar={false}\n\t\t\t\t\t\t\tnewestOnTop={false}\n\t\t\t\t\t\t\tcloseOnClick\n\t\t\t\t\t\t\trtl={false}\n\t\t\t\t\t\t\tpauseOnFocusLoss\n\t\t\t\t\t\t\tdraggable\n\t\t\t\t\t\t\tpauseOnHover />\n\n\t\t\t</>\n    )\n}"]},"metadata":{},"sourceType":"module"}