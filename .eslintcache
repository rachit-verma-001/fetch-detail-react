[{"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\index.js":"1","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\App.js":"2","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\store\\auth-context.js":"3","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\pages\\AuthPage.js":"4","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\pages\\HomePage.js":"5","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Layout\\Layout.js":"6","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Profile\\UserProfile.js":"7","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\Details.js":"8","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Profile\\ProfileForm.js":"9","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\StartingPage\\StartingPageContent.js":"10","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Layout\\MainNavigation.js":"11","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\AvailableData.js":"12","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Auth\\AuthForm.js":"13","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\ExportCsv.js":"14","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\UI\\Card.js":"15","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\EmployeeData.js":"16","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\AddData.js":"17","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\Filters.js":"18","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\DropDownFilter.js":"19"},{"size":367,"mtime":1636971952228,"results":"20","hashOfConfig":"21"},{"size":1235,"mtime":1637064348468,"results":"22","hashOfConfig":"21"},{"size":2394,"mtime":1636971952285,"results":"23","hashOfConfig":"21"},{"size":137,"mtime":1636971952233,"results":"24","hashOfConfig":"21"},{"size":178,"mtime":1636971952234,"results":"25","hashOfConfig":"21"},{"size":260,"mtime":1636971952095,"results":"26","hashOfConfig":"21"},{"size":257,"mtime":1636971952116,"results":"27","hashOfConfig":"21"},{"size":197,"mtime":1636993274627,"results":"28","hashOfConfig":"21"},{"size":2088,"mtime":1637041974836,"results":"29","hashOfConfig":"21"},{"size":242,"mtime":1636971952210,"results":"30","hashOfConfig":"21"},{"size":2236,"mtime":1636971952109,"results":"31","hashOfConfig":"21"},{"size":14067,"mtime":1636993274553,"results":"32","hashOfConfig":"21"},{"size":4926,"mtime":1637000498392,"results":"33","hashOfConfig":"21"},{"size":646,"mtime":1636993274728,"results":"34","hashOfConfig":"21"},{"size":158,"mtime":1636971952215,"results":"35","hashOfConfig":"21"},{"size":9568,"mtime":1637125570458,"results":"36","hashOfConfig":"21"},{"size":15390,"mtime":1637055135931,"results":"37","hashOfConfig":"21"},{"size":6803,"mtime":1637046457698,"results":"38","hashOfConfig":"21"},{"size":8421,"mtime":1637125268551,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"hw9xiw",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\index.js",[],["82","83"],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\App.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\store\\auth-context.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\pages\\AuthPage.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\pages\\HomePage.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Layout\\Layout.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Profile\\UserProfile.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\Details.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Profile\\ProfileForm.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\StartingPage\\StartingPageContent.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Layout\\MainNavigation.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\AvailableData.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\Auth\\AuthForm.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\ExportCsv.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\UI\\Card.js",[],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\EmployeeData.js",["84","85","86","87","88","89","90","91"],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\AddData.js",["92","93","94","95","96","97","98","99"],"import { useState} from 'react';\r\nimport * as React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n// import Grid from '@mui/material/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Input from '@mui/material/Input';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n// import { styled } from '@mui/material/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {Container, Grid} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport { styled, alpha } from '@mui/material/styles';\r\n// import LoadCompanyData from './LoadCompanyData'\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst Search = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  '&:hover': {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: '100%',\r\n  [theme.breakpoints.up('sm')]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: 'auto',\r\n  },\r\n}));\r\n\r\n\r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: '100%',\r\n  position: 'absolute',\r\n  pointerEvents: 'none',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n}));\r\n\r\n\r\n\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: 'inherit',\r\n  '& .MuiInputBase-input': {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  '&:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  '&:last-child td, &:last-child th': {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\n\r\nconst ariaLabel = { 'aria-label': 'description' };\r\n\r\n\r\n\r\n\r\n\r\nconst AddData = (props) => {\r\n\r\n  const history = useHistory();\r\n  const [userData, setUserData] = useState([]);\r\n  const [url, setUrl] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [type, setType] = useState('');\r\n  const [foundationYear, setFoundationYear] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isFetched, setIsFetched] = useState(false);\r\n\r\n  const[filterCall, setFilterCall] = useState(false);\r\n  let table_details;\r\n  let filter_table;\r\n  const [companyDetail, setCompanyDetail] = useState({});\r\n  const fetchCompanyDetail =(id) =>{\r\n    console.log(id)\r\n    history.push(`/details/${id}`)\r\n\r\n  }\r\n\r\n  const [companyName, setCompanyName] = useState();\r\n\r\n  const[filteredCompany, setFilteredCompany] = useState([]);\r\n\r\n  const companyNameChangeHandler = (event) => {\r\n    setCompanyName(event.target.value);\r\n\r\n\r\n    const axios = require('axios').default;\r\n    if (event.target.value.length > 3)\r\n    {\r\n      try {\r\n        axios.get('https://460b-157-47-214-197.ngrok.io/api/v1/search', {\r\n          params: {\r\n            company_name: companyName\r\n          },\r\n          headers:{\r\n            'X-USER-TOKEN': localStorage.getItem('token'),\r\n            \"X-USER-EMAIL\":localStorage.getItem('email')\r\n          }\r\n        })\r\n        .then(function (response) {\r\n          if (response.data.success === true)\r\n          {\r\n            // dataFiltered = response.data;\r\n            setFilterCall(true);\r\n            setIsFetched(false);\r\n            setFilteredCompany(response.data);\r\n            console.log(filteredCompany);\r\n            console.log(response.data);\r\n            // setUserData(response.data)\r\n          }\r\n          else{\r\n            // alert(response.data.message)\r\n            toast.error(response.data.message,  {\r\n              position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            });\r\n            setFilterCall(false);\r\n            console.log(response.data.message)\r\n            // setIsFiltered(false)\r\n          }\r\n\r\n        })\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.error(error,  {\r\n          position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        });\r\n        setFilterCall(false);\r\n        alert(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const switchDetailModeHandler = async (event) => {\r\n    // let sent_url;\r\n    event.preventDefault();\r\n    const axios = require('axios').default;\r\n\r\n    try {\r\n      const headers = {\r\n        'X-USER-TOKEN': localStorage.getItem('token'),\r\n        \"X-USER-EMAIL\":localStorage.getItem('email')\r\n      }\r\n\r\n\r\n      // axios.post(\"http://localhost:4000/api/v1/companies\",data, {\r\n\r\n      axios.get(\"https://460b-157-47-214-197.ngrok.io/api/v1/companies/108\", {\r\n          headers: headers\r\n        }).then(function (response) {\r\n        setIsLoading(false);\r\n        console.log(response)\r\n        if (response.data.success === false)\r\n        {\r\n          toast.error(response.data.message,  {\r\n            position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          });\r\n          setFilterCall(false);\r\n          // alert(response.data.message)\r\n        }\r\n        else{\r\n\r\n        // setUserData(response.data)\r\n        userData.push(response.data.company)\r\n        setIsFetched(true);\r\n        setFilterCall(false);\r\n        // setIsFiltered(false);\r\n        // setShowDetails(true);\r\n      }\r\n        // setError(false);\r\n      })\r\n      .catch(function (error) {\r\n        setIsLoading(false);\r\n        console.log(error);\r\n        toast.error(\"No Such Company Details Present\",  {\r\n          position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        });\r\n        setFilterCall(false);\r\n        alert(error);\r\n      })\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      // alert(error)\r\n      console.error(error);\r\n      toast.error(\"No Such Company Details Present\",  {\r\n        position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      });\r\n      setFilterCall(false);\r\n    }\r\n\r\n  };\r\n\r\n\r\n  if(filterCall)\r\n  {\r\n\r\n    filter_table =(\r\n      <Container maxWidth=\"lg\">\r\n      <Grid container>\r\n      <Grid item xs={12}>\r\n        <TableContainer component={Paper} >\r\n            <Table sx={{ width: 776, marginTop:10, }} aria-label=\"customized table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell>Name</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Type</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Url</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Foundation Year</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Details</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Resync</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                { filteredCompany.length > 0 && filteredCompany.map((company) => (\r\n                  <StyledTableRow key={company.name}>\r\n                    <StyledTableCell component=\"th\" scope=\"row\">\r\n                      {company.name}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">{company.company_type}</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">{company.url}</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">{company.foundation_year}</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      <Button variant='outlined'\r\n                        type='submit' sx = {{mt:20}}\r\n                        name= {company.id} onClick={ () => fetchCompanyDetail(company.id)}\r\n                      >\r\n                        {/* {showDetails ? 'Hide Details' : 'Fetch Detais'} */}\r\n                        Fetch Details\r\n                      </Button>\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      <Button variant='outlined'\r\n                        type='submit' sx = {{mt:20}}\r\n                        name= {company.id} onClick={ () => fetchCompanyDetail(company.id)}\r\n                      >\r\n                        {/* {showDetails ? 'Hide Details' : 'Fetch Detais'} */}\r\n                        Resync\r\n                      </Button>\r\n                    </StyledTableCell>\r\n                  </StyledTableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n      </Grid>\r\n      </Grid>\r\n      </Container>)\r\n\r\n  };\r\n\r\n\r\n  if (isFetched)\r\n  {\r\n    table_details =(\r\n      <Container maxWidth=\"lg\">\r\n      <Grid container>\r\n      <Grid item xs={12}>\r\n        <TableContainer component={Paper} >\r\n            <Table sx={{ width: 776, marginTop:10, }} aria-label=\"customized table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell>Name</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Type</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Url</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Foundation Year</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Details</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Resync</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {userData.map((company) => (\r\n                  <StyledTableRow key={company.name}>\r\n                    <StyledTableCell component=\"th\" scope=\"row\">\r\n                      {company.name}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">{company.company_type}</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">{company.url}</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">{company.foundation_year}</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      <Button variant='outlined'\r\n                        type='submit' sx = {{mt:20}}\r\n                        name= {company.id} onClick={ () => fetchCompanyDetail(company.id)}\r\n                      >\r\n                        {/* {showDetails ? 'Hide Details' : 'Fetch Detais'} */}\r\n                        Fetch Details\r\n                      </Button>\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      <Button variant='outlined'\r\n                        type='submit' sx = {{mt:20}}\r\n                        name= {company.id} onClick={ () => fetchCompanyDetail(company.id)}\r\n                      >\r\n                        {/* {showDetails ? 'Hide Details' : 'Fetch Detais'} */}\r\n                        Resync\r\n                      </Button>\r\n                    </StyledTableCell>\r\n                  </StyledTableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n      </Grid>\r\n      </Grid>\r\n      </Container>)\r\n  };\r\n\r\n  return (\r\n    <section>\r\n\r\n      <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n\r\n          <form alignItems=\"center\" onSubmit={switchDetailModeHandler} >\r\n            <div >\r\n              <Input placeholder=\"Name\" inputProps={ariaLabel} onChange={e => setName(e.target.value)} required style={{width:\"500px\"}}  />\r\n            </div>\r\n            <div >\r\n              <Input placeholder=\"Url\" inputProps={ariaLabel} required onChange={e => setUrl(e.target.value)}   style={{width:\"500px\", marginTop:\"10px\"}}  />\r\n            </div>\r\n            <div >\r\n              <Input placeholder=\"Type\" inputProps={ariaLabel} required onChange={e => setType(e.target.value)}  style={{width:\"500px\", marginTop:\"10px\"}}  />\r\n            </div>\r\n            <div >\r\n              <Input placeholder=\"Foundation Year\" inputProps={ariaLabel} onChange={e => setFoundationYear(e.target.value)} style={{width:\"500px\", marginTop:\"10px\"}}  />\r\n            </div>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid item>\r\n                <Box pt={2}>\r\n                  <Button variant='outlined'\r\n                      type='submit' sx = {{mt:20}} style = {{width:'217px', position:'absolute', left:'42%'}}\r\n                      name=\"Fetch\"\r\n                    >\r\n                      {/* {showDetails ? 'Hide Details' : 'Fetch Detais'} */}\r\n                      Add\r\n                    </Button>\r\n                </Box>\r\n              </Grid>\r\n\r\n            </Grid>\r\n          </form>\r\n\r\n          {isFetched && <>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Item style={{float:'right', position:'relative', top:'71px', right:'32px', width:'340px', backgroundColor:'#e0e0e03b'}}>\r\n                  <Search>\r\n                      <SearchIconWrapper>\r\n                        <SearchIcon />\r\n                      </SearchIconWrapper>\r\n                      <StyledInputBase\r\n                        placeholder=\"Company Name\"\r\n                        inputProps={{ 'aria-label': 'search' }} onChange={companyNameChangeHandler}\r\n                      />\r\n                  </Search>\r\n                </Item>\r\n              </Grid>\r\n            </Grid>\r\n            <div>\r\n          {/* {isFetched ? table_details : <LoadCompanyData />} */}\r\n          {filterCall ? filter_table : table_details}\r\n\r\n          </div></>}\r\n        </Grid>\r\n\r\n        <ToastContainer position=\"top-right\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover/>\r\n      </section>\r\n  )\r\n}\r\n\r\nexport default AddData;","C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\Filters.js",["100","101"],"import SearchIcon from '@mui/icons-material/Search';\r\nimport { useState} from 'react';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n// import { company_name } from './AddData';\r\nlet company_name = \"\"\r\nconst Search = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  '&:hover': {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: '100%',\r\n  [theme.breakpoints.up('sm')]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: 'auto',\r\n  },\r\n}));\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(0),\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: '100%',\r\n  position: 'absolute',\r\n  pointerEvents: 'none',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n}));\r\n\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: 'inherit',\r\n  '& .MuiInputBase-input': {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '12ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport let dataFiltered = null;\r\n\r\nexport default function Filters() {\r\n\r\n  const [firstName, setUserFirstName] = useState();\r\n\r\n  const[filteredCompany, setFilteredCompany] = useState();\r\n  const[filterCall, setFilterCall] = useState(false);\r\n  const firstNameChangeHandler = (event) => {\r\n    setUserFirstName(event.target.value);\r\n  };\r\n\r\n  const [lastName, setUserLastName] = useState();\r\n\r\n  const lastNameChangeHandler = (event) => {\r\n    setUserLastName(event.target.value);\r\n  };\r\n\r\n  const [email, setUserEmail] = useState();\r\n\r\n  const emailChangeHandler = (event) => {\r\n    setUserEmail(event.target.value);\r\n  };\r\n\r\n  const [city, setUserCity] = useState();\r\n\r\n  const cityChangeHandler = (event) => {\r\n    setUserCity(event.target.value);\r\n  };\r\n\r\n  const [designation, setUserDesignation] = useState();\r\n\r\n  const designationChangeHandler = (event) => {\r\n    setUserDesignation(event.target.value);\r\n  };\r\n\r\n  const filterData = () => {\r\n    const axios = require('axios').default;\r\n\r\n    try {\r\n      axios.get('https://460b-157-47-214-197.ngrok.io/api/v1/search', {\r\n        params: {\r\n          first_name: firstName,\r\n          last_name:lastName,\r\n          city:city,\r\n          email:email,\r\n          designation:designation,\r\n          company_name: company_name\r\n        },\r\n        headers:{\r\n          'X-USER-TOKEN': localStorage.getItem('token'),\r\n          \"X-USER-EMAIL\":localStorage.getItem('email')\r\n        }\r\n      })\r\n      .then(function (response) {\r\n        if (response.data.success === false)\r\n        {\r\n          // alert(response.data.message)\r\n          toast.error(response.data.message,  {\r\n            position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          });\r\n          // setIsFiltered(false)\r\n        }\r\n        else{\r\n\r\n          dataFiltered = response.data;\r\n          setFilterCall(true);\r\n          setFilteredCompany(response.data)\r\n        }\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        toast.error(error,  {\r\n          position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        });\r\n        // alert(error);\r\n      })\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(error,  {\r\n        position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      });\r\n      // alert(error);\r\n    }\r\n\r\n  }\r\n\r\n  return (<>\r\n\r\n  <Grid container spacing={2}>\r\n    <Grid item xs={6}>\r\n      <Item>\r\n        <Search>\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"First Name…\"\r\n              inputProps={{ 'aria-label': 'search' }} onChange={firstNameChangeHandler}\r\n            />\r\n        </Search>\r\n      </Item>\r\n    </Grid>\r\n\r\n    <Grid item xs={6}>\r\n      <Item>\r\n        <Search>\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"Last Name…\"\r\n              inputProps={{ 'aria-label': 'search' }} onChange={lastNameChangeHandler}\r\n            />\r\n        </Search>\r\n      </Item>\r\n    </Grid>\r\n\r\n\r\n    <Grid item xs={6}>\r\n      <Item>\r\n        <Search>\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"Email…\"\r\n              inputProps={{ 'aria-label': 'search' }} onChange={emailChangeHandler}\r\n            />\r\n        </Search>\r\n      </Item>\r\n    </Grid>\r\n\r\n\r\n    <Grid item xs={6}>\r\n      <Item>\r\n        <Search>\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"City…\"\r\n              inputProps={{ 'aria-label': 'search' }} onChange={cityChangeHandler}\r\n            />\r\n        </Search>\r\n      </Item>\r\n    </Grid>\r\n\r\n    <Grid item xs={12}>\r\n      <Item>\r\n        <Search>\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"Designation…\"\r\n              inputProps={{ 'aria-label': 'search' }} onChange={designationChangeHandler}\r\n            />\r\n        </Search>\r\n      </Item>\r\n    </Grid>\r\n\r\n\r\n  </Grid>\r\n\r\n    <Grid item mt={2} container spacing={0} direction=\"column\" alignItems=\"center\" justifyContent=\"center\" >\r\n      <Button variant=\"contained\" onClick={filterData} style={{width:'240px'}}>Filter</Button>\r\n    </Grid>\r\n    <ToastContainer position=\"top-right\"\r\nautoClose={5000}\r\nhideProgressBar={false}\r\nnewestOnTop={false}\r\ncloseOnClick\r\nrtl={false}\r\npauseOnFocusLoss\r\ndraggable\r\npauseOnHover/>\r\n\r\n  </>\r\n)}",["102","103"],"C:\\Users\\PC\\Documents\\fetch-detail-react\\src\\components\\ScrappedData\\DropDownFilter.js",["104","105","106","107","108","109","110","111","112","113","114","115","116","117"],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":3,"column":21,"nodeType":"124","messageId":"125","endLine":3,"endColumn":32},{"ruleId":"122","severity":1,"message":"126","line":6,"column":8,"nodeType":"124","messageId":"125","endLine":6,"endColumn":11},{"ruleId":"122","severity":1,"message":"127","line":13,"column":8,"nodeType":"124","messageId":"125","endLine":13,"endColumn":18},{"ruleId":"122","severity":1,"message":"128","line":21,"column":7,"nodeType":"124","messageId":"125","endLine":21,"endColumn":13},{"ruleId":"122","severity":1,"message":"129","line":44,"column":7,"nodeType":"124","messageId":"125","endLine":44,"endColumn":24},{"ruleId":"122","severity":1,"message":"130","line":55,"column":7,"nodeType":"124","messageId":"125","endLine":55,"endColumn":22},{"ruleId":"122","severity":1,"message":"131","line":69,"column":7,"nodeType":"124","messageId":"125","endLine":69,"endColumn":16},{"ruleId":"122","severity":1,"message":"132","line":80,"column":7,"nodeType":"124","messageId":"125","endLine":80,"endColumn":16},{"ruleId":"122","severity":1,"message":"133","line":107,"column":20,"nodeType":"124","messageId":"125","endLine":107,"endColumn":31},{"ruleId":"122","severity":1,"message":"134","line":108,"column":10,"nodeType":"124","messageId":"125","endLine":108,"endColumn":13},{"ruleId":"122","severity":1,"message":"135","line":109,"column":10,"nodeType":"124","messageId":"125","endLine":109,"endColumn":14},{"ruleId":"122","severity":1,"message":"136","line":110,"column":10,"nodeType":"124","messageId":"125","endLine":110,"endColumn":14},{"ruleId":"122","severity":1,"message":"137","line":111,"column":10,"nodeType":"124","messageId":"125","endLine":111,"endColumn":24},{"ruleId":"122","severity":1,"message":"138","line":112,"column":10,"nodeType":"124","messageId":"125","endLine":112,"endColumn":19},{"ruleId":"122","severity":1,"message":"139","line":118,"column":10,"nodeType":"124","messageId":"125","endLine":118,"endColumn":23},{"ruleId":"122","severity":1,"message":"140","line":118,"column":25,"nodeType":"124","messageId":"125","endLine":118,"endColumn":41},{"ruleId":"122","severity":1,"message":"141","line":67,"column":9,"nodeType":"124","messageId":"125","endLine":67,"endColumn":24},{"ruleId":"122","severity":1,"message":"142","line":68,"column":9,"nodeType":"124","messageId":"125","endLine":68,"endColumn":19},{"ruleId":"118","replacedBy":"143"},{"ruleId":"120","replacedBy":"144"},{"ruleId":"122","severity":1,"message":"127","line":1,"column":8,"nodeType":"124","messageId":"125","endLine":1,"endColumn":18},{"ruleId":"122","severity":1,"message":"145","line":10,"column":26,"nodeType":"124","messageId":"125","endLine":10,"endColumn":31},{"ruleId":"122","severity":1,"message":"146","line":12,"column":26,"nodeType":"124","messageId":"125","endLine":12,"endColumn":30},{"ruleId":"122","severity":1,"message":"147","line":16,"column":5,"nodeType":"124","messageId":"125","endLine":16,"endColumn":17},{"ruleId":"122","severity":1,"message":"128","line":17,"column":7,"nodeType":"124","messageId":"125","endLine":17,"endColumn":13},{"ruleId":"122","severity":1,"message":"129","line":40,"column":7,"nodeType":"124","messageId":"125","endLine":40,"endColumn":24},{"ruleId":"122","severity":1,"message":"130","line":51,"column":7,"nodeType":"124","messageId":"125","endLine":51,"endColumn":22},{"ruleId":"122","severity":1,"message":"148","line":76,"column":12,"nodeType":"124","messageId":"125","endLine":76,"endColumn":27},{"ruleId":"122","severity":1,"message":"149","line":76,"column":28,"nodeType":"124","messageId":"125","endLine":76,"endColumn":46},{"ruleId":"122","severity":1,"message":"150","line":79,"column":9,"nodeType":"124","messageId":"125","endLine":79,"endColumn":18},{"ruleId":"151","severity":1,"message":"152","line":86,"column":31,"nodeType":"153","messageId":"154","endLine":86,"endColumn":33},{"ruleId":"151","severity":1,"message":"152","line":89,"column":38,"nodeType":"153","messageId":"154","endLine":89,"endColumn":40},{"ruleId":"151","severity":1,"message":"152","line":91,"column":38,"nodeType":"153","messageId":"154","endLine":91,"endColumn":40},{"ruleId":"151","severity":1,"message":"152","line":93,"column":38,"nodeType":"153","messageId":"154","endLine":93,"endColumn":40},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'Csv' is defined but never used.","'SearchIcon' is defined but never used.","'Search' is assigned a value but never used.","'SearchIconWrapper' is assigned a value but never used.","'StyledInputBase' is assigned a value but never used.","'ariaLabel' is assigned a value but never used.","'useStyles' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'url' is assigned a value but never used.","'name' is assigned a value but never used.","'type' is assigned a value but never used.","'foundationYear' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'companyDetail' is assigned a value but never used.","'setCompanyDetail' is assigned a value but never used.","'filteredCompany' is assigned a value but never used.","'filterCall' is assigned a value but never used.",["155"],["156"],"'toast' is defined but never used.","'City' is defined but never used.","'company_name' is assigned a value but never used.","'selectedCountry' is assigned a value but never used.","'setSelectedCountry' is assigned a value but never used.","'stateData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]